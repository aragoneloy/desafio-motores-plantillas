v8-version,9,4,146,24,-node.20,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff700900000,0x7ff70454e000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7fff431d0000,0x7fff433c8000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7fff429a0000,0x7fff42a5d000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7fff40fb0000,0x7fff41282000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7fff42f10000,0x7fff42f7b000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7fff426d0000,0x7fff427f5000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7fff34860000,0x7fff34a44000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7fff42e50000,0x7fff42e58000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7fff40ac0000,0x7fff40bc0000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7fff42e60000,0x7fff42f0e000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7fff41290000,0x7fff4132e000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7fff428e0000,0x7fff4297c000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7fff3fd10000,0x7fff3fd4b000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7fff40800000,0x7fff4082e000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7fff42cb0000,0x7fff42e4d000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7fff40a00000,0x7fff40a22000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7fff42a60000,0x7fff42a8b000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7fff40ea0000,0x7fff40faf000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7fff40ca0000,0x7fff40d3d000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7fff40d40000,0x7fff40e96000,0
shared-library,C:\\WINDOWS\\System32\\bcrypt.dll,0x7fff40c70000,0x7fff40c97000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7fff39160000,0x7fff39187000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7fff40230000,0x7fff4023c000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7fff41330000,0x7fff41360000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7fff407b0000,0x7fff407fb000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7fff40790000,0x7fff407a2000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7fff3e340000,0x7fff3e3de000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7fff416e0000,0x7fff41a34000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7fff40020000,0x7fff4008a000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7fff3e820000,0x7fff3e832000,0
shared-library,C:\\WINDOWS\\System32\\bcryptPrimitives.dll,0x7fff40a30000,0x7fff40ab2000,0
shared-library-end
profiler,begin,1000
tick,0x7fff4326d144,107476,0,0x0,6
new,CodeRange,0x219c4fd0000,0
new,MemoryChunk,0x34f0d5c0000,262144
new,MemoryChunk,0x1dd11140000,262144
new,MemoryChunk,0x2e7e61c0000,262144
new,MemoryChunk,0x2e5c3b80000,262144
new,MemoryChunk,0x1702f300000,262144
heap-capacity,1031072
heap-available,2198652736
new,MemoryChunk,0x29c79f80000,262144
new,MemoryChunk,0x286bba80000,262144
new,MemoryChunk,0x201f8300000,262144
new,MemoryChunk,0x12cf3bc0000,262144
new,MemoryChunk,0x10d29480000,262144
new,MemoryChunk,0x2a5bc680000,262144
new,MemoryChunk,0x3dc127c0000,262144
new,MemoryChunk,0x219c5000000,262144
new,MemoryChunk,0x7858540000,262144
code-creation,Builtin,2,110948,0x7ff701470be4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,110965,0x7ff701471144,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,110970,0x7ff701471324,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,110975,0x7ff7014715a4,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,110980,0x7ff701471684,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,110984,0x7ff701471804,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,110989,0x7ff7014718a4,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,110993,0x7ff7014718e4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,110998,0x7ff701471a64,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,111002,0x7ff701471c24,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,111056,0x7ff701471de4,104,CallBoundFunction
code-creation,Builtin,2,111063,0x7ff701471e64,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,111067,0x7ff701471ee4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,111072,0x7ff701471f64,120,Call_ReceiverIsAny
code-creation,Builtin,2,111076,0x7ff701471fe4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,111081,0x7ff7014723e4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,111085,0x7ff7014727e4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,111090,0x7ff701472c24,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,111095,0x7ff701473064,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,111099,0x7ff7014734a4,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,111104,0x7ff7014738e4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,111108,0x7ff701473ca4,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,111113,0x7ff701474064,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,111117,0x7ff701474424,736,CallProxy
code-creation,Builtin,2,111121,0x7ff701474724,148,CallVarargs
code-creation,Builtin,2,111125,0x7ff7014747c4,944,CallWithSpread
code-creation,Builtin,2,111130,0x7ff701474b84,1956,CallWithSpread_Baseline
code-creation,Builtin,2,111134,0x7ff701475344,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,111138,0x7ff701475ae4,864,CallWithArrayLike
code-creation,Builtin,2,111143,0x7ff701475e64,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,111147,0x7ff701476584,156,CallForwardVarargs
code-creation,Builtin,2,111151,0x7ff701476624,156,CallFunctionForwardVarargs
code-creation,Builtin,2,111155,0x7ff7014766c4,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,111160,0x7ff701476764,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,111164,0x7ff701476864,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,111169,0x7ff7014769a4,28,ConstructFunction
code-creation,Builtin,2,111173,0x7ff7014769c4,104,ConstructBoundFunction
code-creation,Builtin,2,111178,0x7ff701476a44,28,ConstructedNonConstructable
code-creation,Builtin,2,111182,0x7ff701476a64,100,Construct
code-creation,Builtin,2,111186,0x7ff701476ae4,148,ConstructVarargs
code-creation,Builtin,2,111190,0x7ff701476b84,968,ConstructWithSpread
code-creation,Builtin,2,111195,0x7ff701476f64,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,111199,0x7ff701477644,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,111203,0x7ff701477d44,924,ConstructWithArrayLike
code-creation,Builtin,2,111208,0x7ff7014780e4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,111212,0x7ff701478764,196,ConstructForwardVarargs
code-creation,Builtin,2,111216,0x7ff701478844,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,111221,0x7ff701478924,804,Construct_Baseline
code-creation,Builtin,2,111225,0x7ff701478c64,820,Construct_WithFeedback
code-creation,Builtin,2,111229,0x7ff701478fa4,476,JSConstructStubGeneric
code-creation,Builtin,2,111234,0x7ff701479184,376,JSBuiltinsConstructStub
code-creation,Builtin,2,111238,0x7ff701479304,676,FastNewObject
code-creation,Builtin,2,111242,0x7ff7014795c4,292,FastNewClosure
code-creation,Builtin,2,111246,0x7ff701479704,720,ConstructProxy
code-creation,Builtin,2,111250,0x7ff7014799e4,360,JSEntry
code-creation,Builtin,2,111254,0x7ff701479b64,360,JSConstructEntry
code-creation,Builtin,2,111258,0x7ff701479ce4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,111263,0x7ff701479e64,96,JSEntryTrampoline
code-creation,Builtin,2,111267,0x7ff701479ee4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,111271,0x7ff701479f64,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,111275,0x7ff70147a084,1116,StringCodePointAt
code-creation,Builtin,2,111279,0x7ff70147a4e4,1552,StringFromCodePointAt
code-creation,Builtin,2,111284,0x7ff70147ab04,544,StringEqual
code-creation,Builtin,2,111288,0x7ff70147ad44,276,StringGreaterThan
code-creation,Builtin,2,111312,0x7ff70147ae64,276,StringGreaterThanOrEqual
code-creation,Builtin,2,111318,0x7ff70147af84,276,StringLessThan
code-creation,Builtin,2,111322,0x7ff70147b0a4,276,StringLessThanOrEqual
code-creation,Builtin,2,111326,0x7ff70147b1c4,2492,StringSubstring
code-creation,Builtin,2,111331,0x7ff70147bb84,80,OrderedHashTableHealIndex
code-creation,Builtin,2,111335,0x7ff70147bbe4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,111339,0x7ff70147c084,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,111344,0x7ff70147c0e4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,111348,0x7ff70147c144,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,111353,0x7ff70147c1a4,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,111357,0x7ff70147c204,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,111362,0x7ff70147c264,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,111367,0x7ff70147c2c4,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,111371,0x7ff70147c324,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,111376,0x7ff70147c404,52,InterpreterOnStackReplacement
code-creation,Builtin,2,111380,0x7ff70147c444,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,111384,0x7ff70147c6a4,56,BaselineOnStackReplacement
code-creation,Builtin,2,111389,0x7ff70147c6e4,84,BaselineLeaveFrame
code-creation,Builtin,2,111393,0x7ff70147c744,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,111397,0x7ff70147c824,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,111402,0x7ff70147c924,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,111406,0x7ff70147ca04,1004,CompileLazy
code-creation,Builtin,2,111410,0x7ff70147ce04,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,111415,0x7ff70147ce64,252,InstantiateAsmJs
code-creation,Builtin,2,111419,0x7ff70147cf64,32,NotifyDeoptimized
code-creation,Builtin,2,111423,0x7ff70147cfa4,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,111427,0x7ff70147d2c4,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,111432,0x7ff70147d5e4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,111436,0x7ff70147d904,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,111441,0x7ff70147dc24,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,111445,0x7ff70147dc64,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,111450,0x7ff70147dca4,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,111454,0x7ff70147dce4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,111459,0x7ff70147dd44,288,CallApiCallback
code-creation,Builtin,2,111463,0x7ff70147de84,268,CallApiGetter
code-creation,Builtin,2,111467,0x7ff70147dfa4,12,HandleApiCall
code-creation,Builtin,2,111471,0x7ff70147dfc4,12,HandleApiCallAsFunction
code-creation,Builtin,2,111476,0x7ff70147dfe4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,111480,0x7ff70147e004,64,AllocateInYoungGeneration
code-creation,Builtin,2,111485,0x7ff70147e064,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,111489,0x7ff70147e0a4,64,AllocateInOldGeneration
code-creation,Builtin,2,111493,0x7ff70147e104,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,111498,0x7ff70147e144,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,111502,0x7ff70147e304,496,GrowFastDoubleElements
code-creation,Builtin,2,111507,0x7ff70147e504,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,111511,0x7ff70147e6a4,388,DebugBreakTrampoline
code-creation,Builtin,2,111515,0x7ff70147e844,180,ToNumber
code-creation,Builtin,2,111519,0x7ff70147e904,292,ToNumber_Baseline
code-creation,Builtin,2,111524,0x7ff70147ea44,360,ToNumeric_Baseline
code-creation,Builtin,2,111528,0x7ff70147ebc4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,111532,0x7ff70147ec44,212,ToNumberConvertBigInt
code-creation,Builtin,2,111537,0x7ff70147ed24,132,Typeof
code-creation,Builtin,2,111541,0x7ff70147edc4,104,BigIntToI64
code-creation,Builtin,2,111545,0x7ff70147ee44,4,BigIntToI32Pair
code-creation,Builtin,2,111550,0x7ff70147ee64,232,I64ToBigInt
code-creation,Builtin,2,111555,0x7ff70147ef64,4,I32PairToBigInt
code-creation,Builtin,2,111559,0x7ff70147ef84,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,111563,0x7ff70147f004,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,111568,0x7ff7014800a4,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,111572,0x7ff701483ea4,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,111577,0x7ff701483fc4,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,111581,0x7ff701484004,12,LoadIC_StringLength
code-creation,Builtin,2,111585,0x7ff701484024,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,111589,0x7ff701484044,3056,LoadIC_NoFeedback
code-creation,Builtin,2,111594,0x7ff701484c44,32,StoreGlobalIC_Slow
code-creation,Builtin,2,111598,0x7ff701484c84,7332,StoreIC_NoFeedback
code-creation,Builtin,2,111602,0x7ff701486944,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,111606,0x7ff701486a04,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,111611,0x7ff701486a64,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,111615,0x7ff701486b64,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,111620,0x7ff701486c64,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,111624,0x7ff701486d64,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,111629,0x7ff701486e64,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,111633,0x7ff70148a684,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,111639,0x7ff70148cc24,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,111644,0x7ff701490064,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,111648,0x7ff701491844,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,111653,0x7ff701493984,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,111658,0x7ff701498544,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,111662,0x7ff70149a684,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,111667,0x7ff70149d1a4,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,111671,0x7ff70149d4c4,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,111675,0x7ff70149d584,72,HasIndexedInterceptorIC
code-creation,Builtin,2,111680,0x7ff70149d5e4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,111684,0x7ff70149d664,224,DynamicCheckMaps
code-creation,Builtin,2,111688,0x7ff70149d764,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,111693,0x7ff70149d7e4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,111697,0x7ff70149d8a4,152,EnqueueMicrotask
code-creation,Builtin,2,111702,0x7ff70149d944,8,RunMicrotasksTrampoline
code-creation,Builtin,2,111706,0x7ff70149d964,3476,RunMicrotasks
code-creation,Builtin,2,111710,0x7ff70149e704,2636,HasProperty
code-creation,Builtin,2,111714,0x7ff70149f164,1156,DeleteProperty
code-creation,Builtin,2,111719,0x7ff70149f604,1972,CopyDataProperties
code-creation,Builtin,2,111723,0x7ff70149fdc4,9184,SetDataProperties
code-creation,Builtin,2,111727,0x7ff7014a21c4,28,Abort
code-creation,Builtin,2,111731,0x7ff7014a21e4,28,AbortCSAAssert
code-creation,Builtin,2,111736,0x7ff7014a2204,12,EmptyFunction
code-creation,Builtin,2,111740,0x7ff7014a2224,12,Illegal
code-creation,Builtin,2,111744,0x7ff7014a2244,12,StrictPoisonPillThrower
code-creation,Builtin,2,111748,0x7ff7014a2264,12,UnsupportedThrower
code-creation,Builtin,2,111752,0x7ff7014a2284,64,ReturnReceiver
code-creation,Builtin,2,111756,0x7ff7014a22e4,28,ArrayConstructor
code-creation,Builtin,2,111761,0x7ff7014a2304,404,ArrayConstructorImpl
code-creation,Builtin,2,111765,0x7ff7014a24a4,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,111770,0x7ff7014a2584,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,111775,0x7ff7014a2664,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,111779,0x7ff7014a2724,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,111801,0x7ff7014a27e4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,111808,0x7ff7014a28a4,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,111813,0x7ff7014a2964,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,111818,0x7ff7014a2a24,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,111823,0x7ff7014a2ae4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,111828,0x7ff7014a2d04,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,111833,0x7ff7014a2f04,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,111838,0x7ff7014a30c4,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,111843,0x7ff7014a3264,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,111848,0x7ff7014a3424,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,111853,0x7ff7014a35c4,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,111858,0x7ff7014a37a4,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,111863,0x7ff7014a3944,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,111867,0x7ff7014a39a4,12,ArrayConcat
code-creation,Builtin,2,111871,0x7ff7014a39c4,12,ArrayPrototypeFill
code-creation,Builtin,2,111876,0x7ff7014a39e4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,111880,0x7ff7014a3da4,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,111884,0x7ff7014a3e44,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,111888,0x7ff7014a3f24,548,ArrayIncludes
code-creation,Builtin,2,111893,0x7ff7014a4164,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,111897,0x7ff7014a44c4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,111901,0x7ff7014a4544,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,111906,0x7ff7014a45c4,552,ArrayIndexOf
code-creation,Builtin,2,111910,0x7ff7014a4804,12,ArrayPop
code-creation,Builtin,2,111914,0x7ff7014a4824,616,ArrayPrototypePop
code-creation,Builtin,2,111918,0x7ff7014a4aa4,12,ArrayPush
code-creation,Builtin,2,111922,0x7ff7014a4ac4,2424,ArrayPrototypePush
code-creation,Builtin,2,111926,0x7ff7014a5444,12,ArrayShift
code-creation,Builtin,2,111930,0x7ff7014a5464,12,ArrayUnshift
code-creation,Builtin,2,111934,0x7ff7014a5484,956,CloneFastJSArray
code-creation,Builtin,2,111938,0x7ff7014a5844,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,111943,0x7ff7014a60e4,976,ExtractFastJSArray
code-creation,Builtin,2,111947,0x7ff7014a64c4,260,ArrayPrototypeEntries
code-creation,Builtin,2,111951,0x7ff7014a65e4,248,ArrayPrototypeKeys
code-creation,Builtin,2,111955,0x7ff7014a66e4,260,ArrayPrototypeValues
code-creation,Builtin,2,111960,0x7ff7014a6804,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,111964,0x7ff7014a7964,4168,FlattenIntoArray
code-creation,Builtin,2,111968,0x7ff7014a89c4,4172,FlatMapIntoArray
code-creation,Builtin,2,111972,0x7ff7014a9a24,372,ArrayPrototypeFlat
code-creation,Builtin,2,111976,0x7ff7014a9ba4,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,111981,0x7ff7014a9d64,12,ArrayBufferConstructor
code-creation,Builtin,2,111986,0x7ff7014a9d84,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,111991,0x7ff7014a9da4,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,111995,0x7ff7014a9dc4,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,112000,0x7ff7014a9de4,804,AsyncFunctionEnter
code-creation,Builtin,2,112004,0x7ff7014aa124,132,AsyncFunctionReject
code-creation,Builtin,2,112008,0x7ff7014aa1c4,128,AsyncFunctionResolve
code-creation,Builtin,2,112012,0x7ff7014aa264,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,112017,0x7ff7014aa284,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,112021,0x7ff7014aad84,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,112027,0x7ff7014ab884,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,112032,0x7ff7014ab944,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,112036,0x7ff7014aba04,12,BigIntConstructor
code-creation,Builtin,2,112040,0x7ff7014aba24,12,BigIntAsUintN
code-creation,Builtin,2,112045,0x7ff7014aba44,12,BigIntAsIntN
code-creation,Builtin,2,112049,0x7ff7014aba64,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,112053,0x7ff7014aba84,12,BigIntPrototypeToString
code-creation,Builtin,2,112057,0x7ff7014abaa4,12,BigIntPrototypeValueOf
code-creation,Builtin,2,112063,0x7ff7014abac4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,112068,0x7ff7014abae4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,112073,0x7ff7014abb04,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,112078,0x7ff7014abb24,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,112082,0x7ff7014abb44,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,112086,0x7ff7014abb64,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,112091,0x7ff7014abb84,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,112095,0x7ff7014abba4,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,112099,0x7ff7014abbc4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,112104,0x7ff7014abbe4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,112108,0x7ff7014abc04,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,112112,0x7ff7014abc24,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,112117,0x7ff7014abc44,12,CallSitePrototypeGetThis
code-creation,Builtin,2,112121,0x7ff7014abc64,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,112125,0x7ff7014abc84,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,112130,0x7ff7014abca4,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,112134,0x7ff7014abcc4,12,CallSitePrototypeIsEval
code-creation,Builtin,2,112138,0x7ff7014abce4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,112143,0x7ff7014abd04,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,112147,0x7ff7014abd24,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,112151,0x7ff7014abd44,12,CallSitePrototypeToString
code-creation,Builtin,2,112156,0x7ff7014abd64,12,ConsoleDebug
code-creation,Builtin,2,112160,0x7ff7014abd84,12,ConsoleError
code-creation,Builtin,2,112164,0x7ff7014abda4,12,ConsoleInfo
code-creation,Builtin,2,112168,0x7ff7014abdc4,12,ConsoleLog
code-creation,Builtin,2,112172,0x7ff7014abde4,12,ConsoleWarn
code-creation,Builtin,2,112176,0x7ff7014abe04,12,ConsoleDir
code-creation,Builtin,2,112180,0x7ff7014abe24,12,ConsoleDirXml
code-creation,Builtin,2,112184,0x7ff7014abe44,12,ConsoleTable
code-creation,Builtin,2,112188,0x7ff7014abe64,12,ConsoleTrace
code-creation,Builtin,2,112192,0x7ff7014abe84,12,ConsoleGroup
code-creation,Builtin,2,112196,0x7ff7014abea4,12,ConsoleGroupCollapsed
code-creation,Builtin,2,112200,0x7ff7014abec4,12,ConsoleGroupEnd
code-creation,Builtin,2,112204,0x7ff7014abee4,12,ConsoleClear
code-creation,Builtin,2,112208,0x7ff7014abf04,12,ConsoleCount
code-creation,Builtin,2,112212,0x7ff7014abf24,12,ConsoleCountReset
code-creation,Builtin,2,112216,0x7ff7014abf44,12,ConsoleAssert
code-creation,Builtin,2,112220,0x7ff7014abf64,12,ConsoleProfile
code-creation,Builtin,2,112225,0x7ff7014abf84,12,ConsoleProfileEnd
code-creation,Builtin,2,112229,0x7ff7014abfa4,12,ConsoleTime
code-creation,Builtin,2,112233,0x7ff7014abfc4,12,ConsoleTimeLog
code-creation,Builtin,2,112237,0x7ff7014abfe4,12,ConsoleTimeEnd
code-creation,Builtin,2,112241,0x7ff7014ac004,12,ConsoleTimeStamp
code-creation,Builtin,2,112245,0x7ff7014ac024,12,ConsoleContext
code-creation,Builtin,2,112249,0x7ff7014ac044,12,DataViewConstructor
code-creation,Builtin,2,112253,0x7ff7014ac064,12,DateConstructor
code-creation,Builtin,2,112257,0x7ff7014ac084,216,DatePrototypeGetDate
code-creation,Builtin,2,112262,0x7ff7014ac164,216,DatePrototypeGetDay
code-creation,Builtin,2,112266,0x7ff7014ac244,216,DatePrototypeGetFullYear
code-creation,Builtin,2,112270,0x7ff7014ac324,216,DatePrototypeGetHours
code-creation,Builtin,2,112275,0x7ff7014ac404,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,112280,0x7ff7014ac4e4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,112284,0x7ff7014ac5c4,216,DatePrototypeGetMonth
code-creation,Builtin,2,112289,0x7ff7014ac6a4,216,DatePrototypeGetSeconds
code-creation,Builtin,2,112293,0x7ff7014ac784,124,DatePrototypeGetTime
code-creation,Builtin,2,112297,0x7ff7014ac804,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,112301,0x7ff7014ac8e4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,112305,0x7ff7014ac9c4,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,112310,0x7ff7014acaa4,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,112314,0x7ff7014acb84,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,112318,0x7ff7014acc64,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,112323,0x7ff7014acd44,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,112327,0x7ff7014ace24,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,112331,0x7ff7014acf04,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,112336,0x7ff7014acfe4,124,DatePrototypeValueOf
code-creation,Builtin,2,112340,0x7ff7014ad064,352,DatePrototypeToPrimitive
code-creation,Builtin,2,112344,0x7ff7014ad1e4,12,DatePrototypeGetYear
code-creation,Builtin,2,112348,0x7ff7014ad204,12,DatePrototypeSetYear
code-creation,Builtin,2,112352,0x7ff7014ad224,12,DateNow
code-creation,Builtin,2,112356,0x7ff7014ad244,12,DateParse
code-creation,Builtin,2,112360,0x7ff7014ad264,12,DatePrototypeSetDate
code-creation,Builtin,2,112365,0x7ff7014ad284,12,DatePrototypeSetFullYear
code-creation,Builtin,2,112369,0x7ff7014ad2a4,12,DatePrototypeSetHours
code-creation,Builtin,2,112373,0x7ff7014ad2c4,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,112377,0x7ff7014ad2e4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,112382,0x7ff7014ad304,12,DatePrototypeSetMonth
code-creation,Builtin,2,112386,0x7ff7014ad324,12,DatePrototypeSetSeconds
code-creation,Builtin,2,112390,0x7ff7014ad344,12,DatePrototypeSetTime
code-creation,Builtin,2,112394,0x7ff7014ad364,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,112399,0x7ff7014ad384,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,112403,0x7ff7014ad3a4,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,112407,0x7ff7014ad3c4,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,112412,0x7ff7014ad3e4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,112416,0x7ff7014ad404,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,112420,0x7ff7014ad424,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,112425,0x7ff7014ad444,12,DatePrototypeToDateString
code-creation,Builtin,2,112429,0x7ff7014ad464,12,DatePrototypeToISOString
code-creation,Builtin,2,112433,0x7ff7014ad484,12,DatePrototypeToUTCString
code-creation,Builtin,2,112437,0x7ff7014ad4a4,12,DatePrototypeToString
code-creation,Builtin,2,112442,0x7ff7014ad4c4,12,DatePrototypeToTimeString
code-creation,Builtin,2,112446,0x7ff7014ad4e4,12,DatePrototypeToJson
code-creation,Builtin,2,112450,0x7ff7014ad504,12,DateUTC
code-creation,Builtin,2,112454,0x7ff7014ad524,12,ErrorConstructor
code-creation,Builtin,2,112458,0x7ff7014ad544,12,ErrorCaptureStackTrace
code-creation,Builtin,2,112462,0x7ff7014ad564,12,ErrorPrototypeToString
code-creation,Builtin,2,112466,0x7ff7014ad584,12,FunctionConstructor
code-creation,Builtin,2,112471,0x7ff7014ad5a4,68,FunctionPrototypeApply
code-creation,Builtin,2,112475,0x7ff7014ad604,12,FunctionPrototypeBind
code-creation,Builtin,2,112479,0x7ff7014ad624,32,FunctionPrototypeCall
code-creation,Builtin,2,112483,0x7ff7014ad664,12,FunctionPrototypeToString
code-creation,Builtin,2,112488,0x7ff7014ad684,192,CreateIterResultObject
code-creation,Builtin,2,112492,0x7ff7014ad764,788,CreateGeneratorObject
code-creation,Builtin,2,112496,0x7ff7014ada84,12,GeneratorFunctionConstructor
code-creation,Builtin,2,112501,0x7ff7014adaa4,412,GeneratorPrototypeNext
code-creation,Builtin,2,112505,0x7ff7014adc44,420,GeneratorPrototypeReturn
code-creation,Builtin,2,112509,0x7ff7014ade04,424,GeneratorPrototypeThrow
code-creation,Builtin,2,112514,0x7ff7014adfc4,12,AsyncFunctionConstructor
code-creation,Builtin,2,112519,0x7ff7014adfe4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,112523,0x7ff7014ae164,88,ResumeGeneratorBaseline
code-creation,Builtin,2,112528,0x7ff7014ae1c4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,112533,0x7ff7014ae204,12,GlobalDecodeURI
code-creation,Builtin,2,112537,0x7ff7014ae224,12,GlobalDecodeURIComponent
code-creation,Builtin,2,112541,0x7ff7014ae244,12,GlobalEncodeURI
code-creation,Builtin,2,112545,0x7ff7014ae264,12,GlobalEncodeURIComponent
code-creation,Builtin,2,112549,0x7ff7014ae284,12,GlobalEscape
code-creation,Builtin,2,112553,0x7ff7014ae2a4,12,GlobalUnescape
code-creation,Builtin,2,112558,0x7ff7014ae2c4,12,GlobalEval
code-creation,Builtin,2,112562,0x7ff7014ae2e4,132,GlobalIsFinite
code-creation,Builtin,2,112566,0x7ff7014ae384,124,GlobalIsNaN
code-creation,Builtin,2,112570,0x7ff7014ae404,12,JsonParse
code-creation,Builtin,2,112574,0x7ff7014ae424,12,JsonStringify
code-creation,Builtin,2,112578,0x7ff7014ae444,4608,LoadIC
code-creation,Builtin,2,112582,0x7ff7014af664,4296,LoadIC_Megamorphic
code-creation,Builtin,2,112586,0x7ff7014b0744,4520,LoadIC_Noninlined
code-creation,Builtin,2,112590,0x7ff7014b1904,44,LoadICTrampoline
code-creation,Builtin,2,112594,0x7ff7014b1944,24,LoadICBaseline
code-creation,Builtin,2,112599,0x7ff7014b1964,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,112603,0x7ff7014b19a4,7376,LoadSuperIC
code-creation,Builtin,2,112607,0x7ff7014b3684,24,LoadSuperICBaseline
code-creation,Builtin,2,112611,0x7ff7014b36a4,8148,KeyedLoadIC
code-creation,Builtin,2,112616,0x7ff7014b5684,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,112620,0x7ff7014b89c4,44,KeyedLoadICTrampoline
code-creation,Builtin,2,112624,0x7ff7014b8a04,24,KeyedLoadICBaseline
code-creation,Builtin,2,112629,0x7ff7014b8a24,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,112633,0x7ff7014b8a64,5104,StoreGlobalIC
code-creation,Builtin,2,112639,0x7ff7014b9e64,44,StoreGlobalICTrampoline
code-creation,Builtin,2,112643,0x7ff7014b9ea4,24,StoreGlobalICBaseline
code-creation,Builtin,2,112647,0x7ff7014b9ec4,5340,StoreIC
code-creation,Builtin,2,112652,0x7ff7014bb3a4,44,StoreICTrampoline
code-creation,Builtin,2,112656,0x7ff7014bb3e4,24,StoreICBaseline
code-creation,Builtin,2,112660,0x7ff7014bb404,5780,KeyedStoreIC
code-creation,Builtin,2,112664,0x7ff7014bcaa4,44,KeyedStoreICTrampoline
code-creation,Builtin,2,112668,0x7ff7014bcae4,24,KeyedStoreICBaseline
code-creation,Builtin,2,112673,0x7ff7014bcb04,404,StoreInArrayLiteralIC
code-creation,Builtin,2,112677,0x7ff7014bcca4,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,112682,0x7ff7014bccc4,140,LookupContextBaseline
code-creation,Builtin,2,112687,0x7ff7014bcd64,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,112692,0x7ff7014bce04,3244,LoadGlobalIC
code-creation,Builtin,2,112697,0x7ff7014bdac4,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,112701,0x7ff7014be764,44,LoadGlobalICTrampoline
code-creation,Builtin,2,112705,0x7ff7014be7a4,24,LoadGlobalICBaseline
code-creation,Builtin,2,112710,0x7ff7014be7c4,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,112714,0x7ff7014be804,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,112719,0x7ff7014be824,140,LookupGlobalICBaseline
code-creation,Builtin,2,112723,0x7ff7014be8c4,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,112727,0x7ff7014be964,2064,CloneObjectIC
code-creation,Builtin,2,112732,0x7ff7014bf184,24,CloneObjectICBaseline
code-creation,Builtin,2,112736,0x7ff7014bf1a4,1988,CloneObjectIC_Slow
code-creation,Builtin,2,112740,0x7ff7014bf984,2756,KeyedHasIC
code-creation,Builtin,2,112744,0x7ff7014c0464,24,KeyedHasICBaseline
code-creation,Builtin,2,112748,0x7ff7014c0484,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,112752,0x7ff7014c0ee4,1436,IterableToList
code-creation,Builtin,2,112757,0x7ff7014c1484,1240,IterableToFixedArray
code-creation,Builtin,2,112761,0x7ff7014c1964,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,112794,0x7ff7014c1c64,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,112800,0x7ff7014c1ca4,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,112804,0x7ff7014c1d24,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,112808,0x7ff7014c2104,1616,StringListFromIterable
code-creation,Builtin,2,112813,0x7ff7014c2764,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,112817,0x7ff7014c2c44,4156,MapConstructor
code-creation,Builtin,2,112821,0x7ff7014c3c84,1996,MapPrototypeSet
code-creation,Builtin,2,112825,0x7ff7014c4464,1524,MapPrototypeDelete
code-creation,Builtin,2,112830,0x7ff7014c4a64,204,MapPrototypeGet
code-creation,Builtin,2,112834,0x7ff7014c4b44,164,MapPrototypeHas
code-creation,Builtin,2,112838,0x7ff7014c4c04,12,MapPrototypeClear
code-creation,Builtin,2,112842,0x7ff7014c4c24,284,MapPrototypeEntries
code-creation,Builtin,2,112846,0x7ff7014c4d44,144,MapPrototypeGetSize
code-creation,Builtin,2,112851,0x7ff7014c4de4,492,MapPrototypeForEach
code-creation,Builtin,2,112855,0x7ff7014c4fe4,284,MapPrototypeKeys
code-creation,Builtin,2,112859,0x7ff7014c5104,284,MapPrototypeValues
code-creation,Builtin,2,112863,0x7ff7014c5224,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,112867,0x7ff7014c5644,1168,MapIteratorToList
code-creation,Builtin,2,112871,0x7ff7014c5ae4,12,NumberPrototypeToExponential
code-creation,Builtin,2,112876,0x7ff7014c5b04,12,NumberPrototypeToFixed
code-creation,Builtin,2,112880,0x7ff7014c5b24,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,112884,0x7ff7014c5b44,12,NumberPrototypeToPrecision
code-creation,Builtin,2,112889,0x7ff7014c5b64,328,SameValue
code-creation,Builtin,2,112893,0x7ff7014c5cc4,204,SameValueNumbersOnly
code-creation,Builtin,2,112897,0x7ff7014c5da4,792,Add_Baseline
code-creation,Builtin,2,112901,0x7ff7014c60c4,828,Subtract_Baseline
code-creation,Builtin,2,112905,0x7ff7014c6404,808,Multiply_Baseline
code-creation,Builtin,2,112909,0x7ff7014c6744,832,Divide_Baseline
code-creation,Builtin,2,112913,0x7ff7014c6aa4,764,Modulus_Baseline
code-creation,Builtin,2,112918,0x7ff7014c6da4,808,Exponentiate_Baseline
code-creation,Builtin,2,112922,0x7ff7014c70e4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,112926,0x7ff7014c73c4,700,BitwiseOr_Baseline
code-creation,Builtin,2,112930,0x7ff7014c7684,708,BitwiseXor_Baseline
code-creation,Builtin,2,112934,0x7ff7014c7964,720,ShiftLeft_Baseline
code-creation,Builtin,2,112939,0x7ff7014c7c44,720,ShiftRight_Baseline
code-creation,Builtin,2,112943,0x7ff7014c7f24,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,112947,0x7ff7014c8284,720,Add_WithFeedback
code-creation,Builtin,2,112951,0x7ff7014c8564,780,Subtract_WithFeedback
code-creation,Builtin,2,112955,0x7ff7014c8884,776,Multiply_WithFeedback
code-creation,Builtin,2,112960,0x7ff7014c8ba4,804,Divide_WithFeedback
code-creation,Builtin,2,112964,0x7ff7014c8ee4,724,Modulus_WithFeedback
code-creation,Builtin,2,112968,0x7ff7014c91c4,764,Exponentiate_WithFeedback
code-creation,Builtin,2,112973,0x7ff7014c94c4,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,112977,0x7ff7014c9784,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,112982,0x7ff7014c9a44,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,112987,0x7ff7014c9d04,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,112992,0x7ff7014c9fc4,692,ShiftRight_WithFeedback
code-creation,Builtin,2,112996,0x7ff7014ca284,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,113000,0x7ff7014ca5c4,1696,Equal_Baseline
code-creation,Builtin,2,113004,0x7ff7014cac84,908,StrictEqual_Baseline
code-creation,Builtin,2,113009,0x7ff7014cb024,1264,LessThan_Baseline
code-creation,Builtin,2,113013,0x7ff7014cb524,1264,GreaterThan_Baseline
code-creation,Builtin,2,113017,0x7ff7014cba24,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,113021,0x7ff7014cbf24,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,113026,0x7ff7014cc424,1620,Equal_WithFeedback
code-creation,Builtin,2,113030,0x7ff7014cca84,940,StrictEqual_WithFeedback
code-creation,Builtin,2,113034,0x7ff7014cce44,1240,LessThan_WithFeedback
code-creation,Builtin,2,113039,0x7ff7014cd324,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,113044,0x7ff7014cd804,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,113049,0x7ff7014cdce4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,113053,0x7ff7014ce1c4,332,BitwiseNot_Baseline
code-creation,Builtin,2,113057,0x7ff7014ce324,460,Decrement_Baseline
code-creation,Builtin,2,113062,0x7ff7014ce504,464,Increment_Baseline
code-creation,Builtin,2,113066,0x7ff7014ce6e4,488,Negate_Baseline
code-creation,Builtin,2,113070,0x7ff7014ce8e4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,113074,0x7ff7014cea24,440,Decrement_WithFeedback
code-creation,Builtin,2,113078,0x7ff7014cebe4,444,Increment_WithFeedback
code-creation,Builtin,2,113082,0x7ff7014ceda4,472,Negate_WithFeedback
code-creation,Builtin,2,113087,0x7ff7014cef84,252,ObjectAssign
code-creation,Builtin,2,113091,0x7ff7014cf084,864,ObjectCreate
code-creation,Builtin,2,113095,0x7ff7014cf404,12,ObjectDefineGetter
code-creation,Builtin,2,113099,0x7ff7014cf424,12,ObjectDefineProperties
code-creation,Builtin,2,113103,0x7ff7014cf444,12,ObjectDefineProperty
code-creation,Builtin,2,113107,0x7ff7014cf464,12,ObjectDefineSetter
code-creation,Builtin,2,113112,0x7ff7014cf484,1516,ObjectEntries
code-creation,Builtin,2,113116,0x7ff7014cfa84,12,ObjectFreeze
code-creation,Builtin,2,113120,0x7ff7014cfaa4,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,113124,0x7ff7014d10a4,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,113129,0x7ff7014d10c4,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,113133,0x7ff7014d1324,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,113137,0x7ff7014d1344,164,ObjectHasOwn
code-creation,Builtin,2,113141,0x7ff7014d1404,388,ObjectIs
code-creation,Builtin,2,113145,0x7ff7014d15a4,12,ObjectIsFrozen
code-creation,Builtin,2,113149,0x7ff7014d15c4,12,ObjectIsSealed
code-creation,Builtin,2,113154,0x7ff7014d15e4,536,ObjectKeys
code-creation,Builtin,2,113158,0x7ff7014d1804,12,ObjectLookupGetter
code-creation,Builtin,2,113162,0x7ff7014d1824,12,ObjectLookupSetter
code-creation,Builtin,2,113166,0x7ff7014d1844,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,113170,0x7ff7014d2144,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,113175,0x7ff7014d2224,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,113179,0x7ff7014d2244,12,ObjectPrototypeGetProto
code-creation,Builtin,2,113184,0x7ff7014d2264,12,ObjectPrototypeSetProto
code-creation,Builtin,2,113188,0x7ff7014d2284,12,ObjectSeal
code-creation,Builtin,2,113192,0x7ff7014d22a4,1108,ObjectToString
code-creation,Builtin,2,113196,0x7ff7014d2704,1284,ObjectValues
code-creation,Builtin,2,113200,0x7ff7014d2c24,280,OrdinaryHasInstance
code-creation,Builtin,2,113204,0x7ff7014d2d44,344,InstanceOf
code-creation,Builtin,2,113209,0x7ff7014d2ea4,632,InstanceOf_WithFeedback
code-creation,Builtin,2,113213,0x7ff7014d3124,648,InstanceOf_Baseline
code-creation,Builtin,2,113217,0x7ff7014d33c4,268,ForInEnumerate
code-creation,Builtin,2,113221,0x7ff7014d34e4,148,ForInPrepare
code-creation,Builtin,2,113226,0x7ff7014d3584,2584,ForInFilter
code-creation,Builtin,2,113230,0x7ff7014d3fa4,52,ReflectApply
code-creation,Builtin,2,113234,0x7ff7014d3fe4,60,ReflectConstruct
code-creation,Builtin,2,113238,0x7ff7014d4024,12,ReflectDefineProperty
code-creation,Builtin,2,113242,0x7ff7014d4044,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,113247,0x7ff7014d4064,12,ReflectOwnKeys
code-creation,Builtin,2,113251,0x7ff7014d4084,12,ReflectSet
code-creation,Builtin,2,113255,0x7ff7014d40a4,12,RegExpCapture1Getter
code-creation,Builtin,2,113259,0x7ff7014d40c4,12,RegExpCapture2Getter
code-creation,Builtin,2,113263,0x7ff7014d40e4,12,RegExpCapture3Getter
code-creation,Builtin,2,113267,0x7ff7014d4104,12,RegExpCapture4Getter
code-creation,Builtin,2,113271,0x7ff7014d4124,12,RegExpCapture5Getter
code-creation,Builtin,2,113275,0x7ff7014d4144,12,RegExpCapture6Getter
code-creation,Builtin,2,113280,0x7ff7014d4164,12,RegExpCapture7Getter
code-creation,Builtin,2,113284,0x7ff7014d4184,12,RegExpCapture8Getter
code-creation,Builtin,2,113289,0x7ff7014d41a4,12,RegExpCapture9Getter
code-creation,Builtin,2,113294,0x7ff7014d41c4,2212,RegExpConstructor
code-creation,Builtin,2,113298,0x7ff7014d4a84,12,RegExpInputGetter
code-creation,Builtin,2,113302,0x7ff7014d4aa4,12,RegExpInputSetter
code-creation,Builtin,2,113306,0x7ff7014d4ac4,12,RegExpLastMatchGetter
code-creation,Builtin,2,113311,0x7ff7014d4ae4,12,RegExpLastParenGetter
code-creation,Builtin,2,113315,0x7ff7014d4b04,12,RegExpLeftContextGetter
code-creation,Builtin,2,113319,0x7ff7014d4b24,908,RegExpPrototypeCompile
code-creation,Builtin,2,113323,0x7ff7014d4ec4,12,RegExpPrototypeToString
code-creation,Builtin,2,113328,0x7ff7014d4ee4,12,RegExpRightContextGetter
code-creation,Builtin,2,113332,0x7ff7014d4f04,252,RegExpExecAtom
code-creation,Builtin,2,113336,0x7ff7014d5004,1040,RegExpExecInternal
code-creation,Builtin,2,113340,0x7ff7014d5424,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,113345,0x7ff7014d5444,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,113349,0x7ff7014d5464,2684,SetConstructor
code-creation,Builtin,2,113353,0x7ff7014d5ee4,1284,SetPrototypeHas
code-creation,Builtin,2,113357,0x7ff7014d6404,1736,SetPrototypeAdd
code-creation,Builtin,2,113361,0x7ff7014d6ae4,1476,SetPrototypeDelete
code-creation,Builtin,2,113366,0x7ff7014d70c4,12,SetPrototypeClear
code-creation,Builtin,2,113370,0x7ff7014d70e4,284,SetPrototypeEntries
code-creation,Builtin,2,113374,0x7ff7014d7204,144,SetPrototypeGetSize
code-creation,Builtin,2,113378,0x7ff7014d72a4,444,SetPrototypeForEach
code-creation,Builtin,2,113383,0x7ff7014d7464,284,SetPrototypeValues
code-creation,Builtin,2,113387,0x7ff7014d7584,988,SetIteratorPrototypeNext
code-creation,Builtin,2,113391,0x7ff7014d7964,1112,SetOrSetIteratorToList
code-creation,Builtin,2,113395,0x7ff7014d7dc4,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,113400,0x7ff7014d7de4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,113404,0x7ff7014d7e04,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,113409,0x7ff7014d7e24,1280,AtomicsLoad
code-creation,Builtin,2,113413,0x7ff7014d8344,1008,AtomicsStore
code-creation,Builtin,2,113417,0x7ff7014d8744,1704,AtomicsExchange
code-creation,Builtin,2,113421,0x7ff7014d8e04,2092,AtomicsCompareExchange
code-creation,Builtin,2,113426,0x7ff7014d9644,1804,AtomicsAdd
code-creation,Builtin,2,113430,0x7ff7014d9d64,1804,AtomicsSub
code-creation,Builtin,2,113434,0x7ff7014da484,1804,AtomicsAnd
code-creation,Builtin,2,113438,0x7ff7014daba4,1804,AtomicsOr
code-creation,Builtin,2,113442,0x7ff7014db2c4,1804,AtomicsXor
code-creation,Builtin,2,113446,0x7ff7014db9e4,12,AtomicsNotify
code-creation,Builtin,2,113450,0x7ff7014dba04,12,AtomicsIsLockFree
code-creation,Builtin,2,113455,0x7ff7014dba24,12,AtomicsWait
code-creation,Builtin,2,113459,0x7ff7014dba44,12,AtomicsWaitAsync
code-creation,Builtin,2,113463,0x7ff7014dba64,12,StringFromCodePoint
code-creation,Builtin,2,113467,0x7ff7014dba84,1428,StringFromCharCode
code-creation,Builtin,2,113471,0x7ff7014dc024,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,113476,0x7ff7014dc044,4360,StringPrototypeMatchAll
code-creation,Builtin,2,113480,0x7ff7014dd164,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,113484,0x7ff7014dd184,1228,StringPrototypeReplace
code-creation,Builtin,2,113488,0x7ff7014dd664,2900,StringPrototypeSplit
code-creation,Builtin,2,113492,0x7ff7014de1c4,12,StringRaw
code-creation,Builtin,2,113496,0x7ff7014de1e4,12,SymbolConstructor
code-creation,Builtin,2,113501,0x7ff7014de204,12,SymbolFor
code-creation,Builtin,2,113505,0x7ff7014de224,12,SymbolKeyFor
code-creation,Builtin,2,113509,0x7ff7014de244,88,TypedArrayBaseConstructor
code-creation,Builtin,2,113513,0x7ff7014de2a4,256,TypedArrayConstructor
code-creation,Builtin,2,113517,0x7ff7014de3c4,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,113522,0x7ff7014de3e4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,113526,0x7ff7014de764,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,113531,0x7ff7014de8e4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,113535,0x7ff7014deb44,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,113540,0x7ff7014deb64,12,TypedArrayPrototypeFill
code-creation,Builtin,2,113545,0x7ff7014deb84,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,113549,0x7ff7014deba4,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,113553,0x7ff7014debc4,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,113558,0x7ff7014debe4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,113562,0x7ff7014dec04,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,113567,0x7ff7014ded44,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,113571,0x7ff7014e1704,792,GenericJSToWasmWrapper
code-creation,Builtin,2,113575,0x7ff7014e1a24,148,WasmCompileLazy
code-creation,Builtin,2,113580,0x7ff7014e1ac4,168,WasmDebugBreak
code-creation,Builtin,2,113584,0x7ff7014e1b84,16,WasmOnStackReplace
code-creation,Builtin,2,113588,0x7ff7014e1ba4,140,WasmFloat32ToNumber
code-creation,Builtin,2,113593,0x7ff7014e1c44,152,WasmFloat64ToNumber
code-creation,Builtin,2,113597,0x7ff7014e1ce4,4,WasmI32AtomicWait32
code-creation,Builtin,2,113601,0x7ff7014e1d04,4,WasmI64AtomicWait32
code-creation,Builtin,2,113605,0x7ff7014e1d24,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,113610,0x7ff7014e1d44,4320,WeakMapConstructor
code-creation,Builtin,2,113614,0x7ff7014e2e44,196,WeakMapLookupHashIndex
code-creation,Builtin,2,113618,0x7ff7014e2f24,220,WeakMapGet
code-creation,Builtin,2,113622,0x7ff7014e3004,176,WeakMapPrototypeHas
code-creation,Builtin,2,113627,0x7ff7014e30c4,204,WeakMapPrototypeSet
code-creation,Builtin,2,113631,0x7ff7014e31a4,144,WeakMapPrototypeDelete
code-creation,Builtin,2,113635,0x7ff7014e3244,2876,WeakSetConstructor
code-creation,Builtin,2,113640,0x7ff7014e3d84,176,WeakSetPrototypeHas
code-creation,Builtin,2,113644,0x7ff7014e3e44,204,WeakSetPrototypeAdd
code-creation,Builtin,2,113649,0x7ff7014e3f24,144,WeakSetPrototypeDelete
code-creation,Builtin,2,113653,0x7ff7014e3fc4,372,WeakCollectionDelete
code-creation,Builtin,2,113657,0x7ff7014e4144,764,WeakCollectionSet
code-creation,Builtin,2,113662,0x7ff7014e4444,296,AsyncGeneratorResolve
code-creation,Builtin,2,113666,0x7ff7014e4584,100,AsyncGeneratorReject
code-creation,Builtin,2,113671,0x7ff7014e4604,2760,AsyncGeneratorYield
code-creation,Builtin,2,113675,0x7ff7014e50e4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,113679,0x7ff7014e5c24,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,113683,0x7ff7014e5d64,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,113688,0x7ff7014e5d84,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,113692,0x7ff7014e6184,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,113697,0x7ff7014e65a4,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,113701,0x7ff7014e69c4,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,113705,0x7ff7014e7484,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,113710,0x7ff7014e7f44,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,113714,0x7ff7014e7fc4,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,113719,0x7ff7014e8064,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,113723,0x7ff7014e80e4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,113728,0x7ff7014e8164,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,113732,0x7ff7014e81e4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,113737,0x7ff7014e8284,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,113741,0x7ff7014e88c4,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,113746,0x7ff7014e8f84,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,113750,0x7ff7014e9644,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,113755,0x7ff7014e96c4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,113760,0x7ff7014e97c4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,113764,0x7ff7014e98c4,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,113769,0x7ff7014e99a4,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,113775,0x7ff7014e9b44,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,113780,0x7ff7014e9ce4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,113785,0x7ff7014e9de4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,113790,0x7ff7014e9ee4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,113795,0x7ff7014e9fe4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,113800,0x7ff7014ea184,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,113805,0x7ff7014ea324,4,DirectCEntry
code-creation,Builtin,2,113809,0x7ff7014ea344,1096,StringAdd_CheckNone
code-creation,Builtin,2,113813,0x7ff7014ea7a4,2484,SubString
code-creation,Builtin,2,113817,0x7ff7014eb164,16,StackCheck
code-creation,Builtin,2,113821,0x7ff7014eb184,84,DoubleToI
code-creation,Builtin,2,113825,0x7ff7014eb1e4,2236,GetProperty
code-creation,Builtin,2,113829,0x7ff7014ebaa4,2308,GetPropertyWithReceiver
code-creation,Builtin,2,113833,0x7ff7014ec3c4,16004,SetProperty
code-creation,Builtin,2,113838,0x7ff7014f0264,13480,SetPropertyInLiteral
code-creation,Builtin,2,113842,0x7ff7014f3724,8,MemCopyUint8Uint8
code-creation,Builtin,2,113846,0x7ff7014f3744,8,MemMove
code-creation,Builtin,2,113850,0x7ff7014f3764,12,IsTraceCategoryEnabled
code-creation,Builtin,2,113854,0x7ff7014f3784,12,Trace
code-creation,Builtin,2,113858,0x7ff7014f37a4,12,FinalizationRegistryUnregister
code-creation,Builtin,2,113863,0x7ff7014f37c4,416,AsyncModuleEvaluate
code-creation,Builtin,2,113867,0x7ff7014f3984,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,113871,0x7ff7014f39a4,12,CallAsyncModuleRejected
code-creation,Builtin,2,113875,0x7ff7014f39c4,260,AggregateErrorConstructor
code-creation,Builtin,2,113879,0x7ff7014f3ae4,856,ArrayPrototypeAt
code-creation,Builtin,2,113884,0x7ff7014f3e44,656,ArrayPrototypeConcat
code-creation,Builtin,2,113888,0x7ff7014f40e4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,113892,0x7ff7014f57c4,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,113896,0x7ff7014f58a4,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,113901,0x7ff7014f5b24,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,113905,0x7ff7014f6824,1464,ArrayEvery
code-creation,Builtin,2,113909,0x7ff7014f6de4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,113914,0x7ff7014f6f04,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,113918,0x7ff7014f72e4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,113922,0x7ff7014f80e4,4260,ArrayFilter
code-creation,Builtin,2,113927,0x7ff7014f91a4,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,113931,0x7ff7014f9284,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,113936,0x7ff7014f92c4,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,113940,0x7ff7014f9404,528,ArrayFindLoopContinuation
code-creation,Builtin,2,113944,0x7ff7014f9624,1460,ArrayPrototypeFind
code-creation,Builtin,2,113948,0x7ff7014f9be4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,113953,0x7ff7014f9cc4,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,113958,0x7ff7014f9d04,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,113962,0x7ff7014f9e44,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,113967,0x7ff7014fa064,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,113971,0x7ff7014fa624,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,113975,0x7ff7014fa804,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,113980,0x7ff7014faec4,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,113984,0x7ff7014fb0a4,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,113988,0x7ff7014fb764,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,113993,0x7ff7014fb844,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,113998,0x7ff7014fb924,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,114004,0x7ff7014fc584,1328,ArrayForEach
code-creation,Builtin,2,114008,0x7ff7014fcac4,3572,ArrayFrom
code-creation,Builtin,2,114012,0x7ff7014fd8c4,148,ArrayIsArray
code-creation,Builtin,2,114016,0x7ff7014fd964,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,114021,0x7ff7014fdb04,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,114025,0x7ff7014fdb44,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,114030,0x7ff7014fdbe4,312,ConvertToLocaleString
code-creation,Builtin,2,114034,0x7ff7014fdd24,752,JoinStackPush
code-creation,Builtin,2,114038,0x7ff7014fe024,272,JoinStackPop
code-creation,Builtin,2,114042,0x7ff7014fe144,6628,ArrayPrototypeJoin
code-creation,Builtin,2,114046,0x7ff7014ffb44,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,114051,0x7ff701501044,236,ArrayPrototypeToString
code-creation,Builtin,2,114055,0x7ff701501144,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,114059,0x7ff701502884,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,114064,0x7ff701503aa4,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,114068,0x7ff7015049a4,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,114073,0x7ff701504ac4,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,114077,0x7ff701504bc4,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,114081,0x7ff701504de4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,114086,0x7ff701505a64,3912,ArrayMap
code-creation,Builtin,2,114090,0x7ff7015069c4,1000,ArrayOf
code-creation,Builtin,2,114094,0x7ff701506dc4,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,114099,0x7ff701506f84,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,114104,0x7ff701507064,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,114108,0x7ff701507144,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,114113,0x7ff701507de4,2000,ArrayReduceRight
code-creation,Builtin,2,114117,0x7ff7015085c4,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,114122,0x7ff701508684,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,114126,0x7ff701508764,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,114131,0x7ff701508844,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,114135,0x7ff701509504,1604,ArrayReduce
code-creation,Builtin,2,114139,0x7ff701509b64,3216,ArrayPrototypeReverse
code-creation,Builtin,2,114144,0x7ff70150a804,3592,ArrayPrototypeShift
code-creation,Builtin,2,114148,0x7ff70150b624,5220,ArrayPrototypeSlice
code-creation,Builtin,2,114152,0x7ff70150caa4,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,114157,0x7ff70150cb84,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,114161,0x7ff70150cde4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,114166,0x7ff70150dae4,1448,ArraySome
code-creation,Builtin,2,114170,0x7ff70150e0a4,14216,ArrayPrototypeSplice
code-creation,Builtin,2,114174,0x7ff701511844,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,114178,0x7ff701512524,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,114183,0x7ff701512684,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,114187,0x7ff7015127e4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,114191,0x7ff7015128c4,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,114196,0x7ff701512a24,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,114201,0x7ff701512b04,96,ArrayBufferIsView
code-creation,Builtin,2,114205,0x7ff701512b84,396,ToInteger
code-creation,Builtin,2,114209,0x7ff701512d24,3084,FastCreateDataProperty
code-creation,Builtin,2,114213,0x7ff701513944,676,CheckNumberInRange
code-creation,Builtin,2,114217,0x7ff701513c04,584,CheckSameObject
code-creation,Builtin,2,114221,0x7ff701513e64,904,BooleanConstructor
code-creation,Builtin,2,114225,0x7ff701514204,164,BooleanPrototypeToString
code-creation,Builtin,2,114230,0x7ff7015142c4,156,BooleanPrototypeValueOf
code-creation,Builtin,2,114235,0x7ff701514364,1184,BigIntAddNoThrow
code-creation,Builtin,2,114239,0x7ff701514824,1280,BigIntAdd
code-creation,Builtin,2,114244,0x7ff701514d44,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,114248,0x7ff701515204,1280,BigIntSubtract
code-creation,Builtin,2,114252,0x7ff701515724,284,BigIntUnaryMinus
code-creation,Builtin,2,114256,0x7ff701515844,1360,ToString
code-creation,Builtin,2,114260,0x7ff701515da4,156,StringPrototypeToString
code-creation,Builtin,2,114265,0x7ff701515e44,156,StringPrototypeValueOf
code-creation,Builtin,2,114269,0x7ff701515ee4,2480,StringToList
code-creation,Builtin,2,114274,0x7ff7015168a4,1012,StringPrototypeCharAt
code-creation,Builtin,2,114278,0x7ff701516ca4,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,114282,0x7ff701516f64,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,114287,0x7ff701517484,400,StringPrototypeConcat
code-creation,Builtin,2,114291,0x7ff701517624,992,StringConstructor
code-creation,Builtin,2,114295,0x7ff701517a24,1436,StringAddConvertLeft
code-creation,Builtin,2,114300,0x7ff701517fc4,1464,StringAddConvertRight
code-creation,Builtin,2,114304,0x7ff701518584,816,StringCharAt
code-creation,Builtin,2,114308,0x7ff7015188c4,16,FastNewClosureBaseline
code-creation,Builtin,2,114312,0x7ff7015188e4,196,FastNewFunctionContextEval
code-creation,Builtin,2,114316,0x7ff7015189c4,196,FastNewFunctionContextFunction
code-creation,Builtin,2,114321,0x7ff701518aa4,248,CreateRegExpLiteral
code-creation,Builtin,2,114325,0x7ff701518ba4,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,114329,0x7ff701518fe4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,114334,0x7ff7015191e4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,114338,0x7ff7015198c4,384,ObjectConstructor
code-creation,Builtin,2,114342,0x7ff701519a64,176,CreateEmptyLiteralObject
code-creation,Builtin,2,114346,0x7ff701519b24,536,NumberConstructor
code-creation,Builtin,2,114351,0x7ff701519d44,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,114355,0x7ff701519da4,64,StringToNumber
code-creation,Builtin,2,114359,0x7ff701519e04,184,NonNumberToNumber
code-creation,Builtin,2,114364,0x7ff701519ec4,240,NonNumberToNumeric
code-creation,Builtin,2,114368,0x7ff701519fc4,36,ToNumeric
code-creation,Builtin,2,114372,0x7ff70151a004,1184,NumberToString
code-creation,Builtin,2,114376,0x7ff70151a4c4,92,ToBoolean
code-creation,Builtin,2,114380,0x7ff70151a524,96,ToBooleanForBaselineJump
code-creation,Builtin,2,114384,0x7ff70151a5a4,728,ToLength
code-creation,Builtin,2,114388,0x7ff70151a884,1312,ToName
code-creation,Builtin,2,114392,0x7ff70151adc4,756,ToObject
code-creation,Builtin,2,114396,0x7ff70151b0c4,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,114401,0x7ff70151b1a4,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,114405,0x7ff70151b284,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,114410,0x7ff70151b364,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,114414,0x7ff70151b4a4,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,114418,0x7ff70151b5e4,216,FastConsoleAssert
code-creation,Builtin,2,114422,0x7ff70151b6c4,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,114427,0x7ff70151b784,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,114431,0x7ff70151b8e4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,114435,0x7ff70151ba44,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,114440,0x7ff70151bc84,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,114444,0x7ff70151bec4,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,114449,0x7ff70151c164,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,114453,0x7ff70151c404,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,114457,0x7ff70151c744,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,114461,0x7ff70151ca04,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,114466,0x7ff70151cd64,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,114470,0x7ff70151d104,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,114476,0x7ff70151d4e4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,114480,0x7ff70151d8e4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,114485,0x7ff70151dca4,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,114489,0x7ff70151e064,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,114493,0x7ff70151e484,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,114498,0x7ff70151e8a4,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,114502,0x7ff70151ece4,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,114506,0x7ff70151f124,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,114511,0x7ff70151f544,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,114515,0x7ff70151f9a4,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,114519,0x7ff70151fd64,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,114524,0x7ff701520124,828,FinalizationRegistryConstructor
code-creation,Builtin,2,114528,0x7ff701520464,1152,FinalizationRegistryRegister
code-creation,Builtin,2,114533,0x7ff701520904,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,114537,0x7ff701520ba4,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,114542,0x7ff701520d04,924,FastFunctionPrototypeBind
code-creation,Builtin,2,114546,0x7ff7015210a4,88,IncBlockCounter
code-creation,Builtin,2,114550,0x7ff701521104,228,GetTemplateObject
code-creation,Builtin,2,114554,0x7ff701521204,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,114559,0x7ff701521224,92,ForInNext
code-creation,Builtin,2,114563,0x7ff701521284,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,114567,0x7ff701521324,116,GetIteratorWithFeedback
code-creation,Builtin,2,114572,0x7ff7015213a4,100,GetIteratorBaseline
code-creation,Builtin,2,114576,0x7ff701521424,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,114580,0x7ff701521544,1084,CallIteratorWithFeedback
code-creation,Builtin,2,114584,0x7ff701521984,288,MathAbs
code-creation,Builtin,2,114588,0x7ff701521ac4,428,MathCeil
code-creation,Builtin,2,114592,0x7ff701521c84,432,MathFloor
code-creation,Builtin,2,114597,0x7ff701521e44,488,MathRound
code-creation,Builtin,2,114601,0x7ff701522044,428,MathTrunc
code-creation,Builtin,2,114605,0x7ff701522204,368,MathPow
code-creation,Builtin,2,114609,0x7ff701522384,396,MathMax
code-creation,Builtin,2,114613,0x7ff701522524,404,MathMin
code-creation,Builtin,2,114617,0x7ff7015226c4,320,MathAcos
code-creation,Builtin,2,114621,0x7ff701522824,320,MathAcosh
code-creation,Builtin,2,114625,0x7ff701522984,320,MathAsin
code-creation,Builtin,2,114629,0x7ff701522ae4,320,MathAsinh
code-creation,Builtin,2,114633,0x7ff701522c44,320,MathAtan
code-creation,Builtin,2,114638,0x7ff701522da4,416,MathAtan2
code-creation,Builtin,2,114642,0x7ff701522f64,320,MathAtanh
code-creation,Builtin,2,114646,0x7ff7015230c4,320,MathCbrt
code-creation,Builtin,2,114650,0x7ff701523224,168,MathClz32
code-creation,Builtin,2,114654,0x7ff7015232e4,320,MathCos
code-creation,Builtin,2,114658,0x7ff701523444,320,MathCosh
code-creation,Builtin,2,114662,0x7ff7015235a4,320,MathExp
code-creation,Builtin,2,114666,0x7ff701523704,320,MathExpm1
code-creation,Builtin,2,114670,0x7ff701523864,272,MathFround
code-creation,Builtin,2,114674,0x7ff701523984,304,MathImul
code-creation,Builtin,2,114678,0x7ff701523ac4,320,MathLog
code-creation,Builtin,2,114682,0x7ff701523c24,320,MathLog1p
code-creation,Builtin,2,114686,0x7ff701523d84,320,MathLog10
code-creation,Builtin,2,114690,0x7ff701523ee4,320,MathLog2
code-creation,Builtin,2,114694,0x7ff701524044,320,MathSin
code-creation,Builtin,2,114698,0x7ff7015241a4,180,MathSign
code-creation,Builtin,2,114702,0x7ff701524264,320,MathSinh
code-creation,Builtin,2,114706,0x7ff7015243c4,268,MathSqrt
code-creation,Builtin,2,114710,0x7ff7015244e4,320,MathTan
code-creation,Builtin,2,114714,0x7ff701524644,320,MathTanh
code-creation,Builtin,2,114718,0x7ff7015247a4,1060,MathHypot
code-creation,Builtin,2,114722,0x7ff701524be4,332,MathRandom
code-creation,Builtin,2,114726,0x7ff701524d44,2956,NumberPrototypeToString
code-creation,Builtin,2,114731,0x7ff7015258e4,136,NumberIsFinite
code-creation,Builtin,2,114752,0x7ff701525984,340,NumberIsInteger
code-creation,Builtin,2,114758,0x7ff701525ae4,116,NumberIsNaN
code-creation,Builtin,2,114762,0x7ff701525b64,372,NumberIsSafeInteger
code-creation,Builtin,2,114767,0x7ff701525ce4,156,NumberPrototypeValueOf
code-creation,Builtin,2,114771,0x7ff701525d84,196,NumberParseFloat
code-creation,Builtin,2,114775,0x7ff701525e64,248,ParseInt
code-creation,Builtin,2,114779,0x7ff701525f64,84,NumberParseInt
code-creation,Builtin,2,114783,0x7ff701525fc4,860,Add
code-creation,Builtin,2,114787,0x7ff701526324,424,Subtract
code-creation,Builtin,2,114791,0x7ff7015264e4,608,Multiply
code-creation,Builtin,2,114795,0x7ff701526764,532,Divide
code-creation,Builtin,2,114799,0x7ff701526984,592,Modulus
code-creation,Builtin,2,114803,0x7ff701526be4,524,Exponentiate
code-creation,Builtin,2,114807,0x7ff701526e04,344,Negate
code-creation,Builtin,2,114811,0x7ff701526f64,112,BitwiseNot
code-creation,Builtin,2,114815,0x7ff701526fe4,112,Decrement
code-creation,Builtin,2,114819,0x7ff701527064,112,Increment
code-creation,Builtin,2,114823,0x7ff7015270e4,392,ShiftLeft
code-creation,Builtin,2,114828,0x7ff701527284,392,ShiftRight
code-creation,Builtin,2,114832,0x7ff701527424,508,ShiftRightLogical
code-creation,Builtin,2,114836,0x7ff701527624,388,BitwiseAnd
code-creation,Builtin,2,114840,0x7ff7015277c4,388,BitwiseOr
code-creation,Builtin,2,114844,0x7ff701527964,388,BitwiseXor
code-creation,Builtin,2,114848,0x7ff701527b04,796,LessThan
code-creation,Builtin,2,114853,0x7ff701527e24,796,LessThanOrEqual
code-creation,Builtin,2,114857,0x7ff701528144,796,GreaterThan
code-creation,Builtin,2,114861,0x7ff701528464,796,GreaterThanOrEqual
code-creation,Builtin,2,114865,0x7ff701528784,860,Equal
code-creation,Builtin,2,114869,0x7ff701528ae4,348,StrictEqual
code-creation,Builtin,2,114873,0x7ff701528c44,3132,ObjectFromEntries
code-creation,Builtin,2,114877,0x7ff701529884,756,CreateObjectWithoutProperties
code-creation,Builtin,2,114881,0x7ff701529b84,144,ObjectIsExtensible
code-creation,Builtin,2,114886,0x7ff701529c24,148,ObjectPreventExtensions
code-creation,Builtin,2,114890,0x7ff701529cc4,144,ObjectGetPrototypeOf
code-creation,Builtin,2,114894,0x7ff701529d64,300,ObjectSetPrototypeOf
code-creation,Builtin,2,114899,0x7ff701529ea4,80,ObjectPrototypeToString
code-creation,Builtin,2,114903,0x7ff701529f04,96,ObjectPrototypeValueOf
code-creation,Builtin,2,114907,0x7ff701529f84,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,114911,0x7ff70152a044,868,FulfillPromise
code-creation,Builtin,2,114916,0x7ff70152a3c4,988,RejectPromise
code-creation,Builtin,2,114920,0x7ff70152a7a4,2416,NewPromiseCapability
code-creation,Builtin,2,114924,0x7ff70152b124,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,114929,0x7ff70152b1e4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,114933,0x7ff70152b284,1416,PerformPromiseThen
code-creation,Builtin,2,114937,0x7ff70152b824,648,PromiseReject
code-creation,Builtin,2,114941,0x7ff70152bac4,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,114946,0x7ff70152bbe4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,114950,0x7ff70152bc64,4560,PromiseAll
code-creation,Builtin,2,114954,0x7ff70152ce44,4880,PromiseAllSettled
code-creation,Builtin,2,114958,0x7ff70152e164,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,114963,0x7ff70152e5c4,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,114968,0x7ff70152eb44,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,114972,0x7ff70152f0c4,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,114977,0x7ff70152f564,2368,PromiseAny
code-creation,Builtin,2,114981,0x7ff70152fec4,2908,PromiseConstructor
code-creation,Builtin,2,114985,0x7ff701530a24,296,PromisePrototypeCatch
code-creation,Builtin,2,114989,0x7ff701530b64,88,PromiseValueThunkFinally
code-creation,Builtin,2,114994,0x7ff701530bc4,84,PromiseThrowerFinally
code-creation,Builtin,2,115000,0x7ff701530c24,904,PromiseCatchFinally
code-creation,Builtin,2,115006,0x7ff701530fc4,904,PromiseThenFinally
code-creation,Builtin,2,115011,0x7ff701531364,1700,PromisePrototypeFinally
code-creation,Builtin,2,115016,0x7ff701531a24,1336,PromiseRace
code-creation,Builtin,2,115020,0x7ff701531f64,268,PromiseFulfillReactionJob
code-creation,Builtin,2,115024,0x7ff701532084,364,PromiseRejectReactionJob
code-creation,Builtin,2,115028,0x7ff701532204,156,PromiseResolveTrampoline
code-creation,Builtin,2,115033,0x7ff7015322a4,656,PromiseResolve
code-creation,Builtin,2,115037,0x7ff701532544,712,ResolvePromise
code-creation,Builtin,2,115041,0x7ff701532824,2224,PromisePrototypeThen
code-creation,Builtin,2,115045,0x7ff7015330e4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,115050,0x7ff701533564,448,ProxyConstructor
code-creation,Builtin,2,115054,0x7ff701533744,1760,ProxyDeleteProperty
code-creation,Builtin,2,115058,0x7ff701533e44,2112,ProxyGetProperty
code-creation,Builtin,2,115062,0x7ff7015346a4,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,115066,0x7ff701534ae4,1668,ProxyHasProperty
code-creation,Builtin,2,115071,0x7ff701535184,760,ProxyIsExtensible
code-creation,Builtin,2,115075,0x7ff701535484,800,ProxyPreventExtensions
code-creation,Builtin,2,115079,0x7ff7015357c4,1148,ProxyRevocable
code-creation,Builtin,2,115083,0x7ff701535c44,120,ProxyRevoke
code-creation,Builtin,2,115087,0x7ff701535cc4,2216,ProxySetProperty
code-creation,Builtin,2,115092,0x7ff701536584,1292,ProxySetPrototypeOf
code-creation,Builtin,2,115096,0x7ff701536aa4,208,ReflectIsExtensible
code-creation,Builtin,2,115100,0x7ff701536b84,212,ReflectPreventExtensions
code-creation,Builtin,2,115104,0x7ff701536c64,188,ReflectGetPrototypeOf
code-creation,Builtin,2,115109,0x7ff701536d24,292,ReflectSetPrototypeOf
code-creation,Builtin,2,115113,0x7ff701536e64,284,ReflectGet
code-creation,Builtin,2,115118,0x7ff701536f84,160,ReflectDeleteProperty
code-creation,Builtin,2,115122,0x7ff701537044,148,ReflectHas
code-creation,Builtin,2,115126,0x7ff7015370e4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,115130,0x7ff701538504,5104,RegExpPrototypeExec
code-creation,Builtin,2,115134,0x7ff701539904,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,115139,0x7ff70153a244,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,115143,0x7ff70153c724,8840,RegExpMatchFast
code-creation,Builtin,2,115147,0x7ff70153e9c4,3600,RegExpPrototypeMatch
code-creation,Builtin,2,115151,0x7ff70153f7e4,6328,RegExpReplace
code-creation,Builtin,2,115155,0x7ff7015410a4,524,RegExpPrototypeReplace
code-creation,Builtin,2,115160,0x7ff7015412c4,1424,RegExpSearchFast
code-creation,Builtin,2,115164,0x7ff701541864,1640,RegExpPrototypeSearch
code-creation,Builtin,2,115168,0x7ff701541ee4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,115173,0x7ff701541fc4,5872,RegExpSplit
code-creation,Builtin,2,115177,0x7ff7015436c4,476,RegExpPrototypeSplit
code-creation,Builtin,2,115181,0x7ff7015438a4,2252,RegExpPrototypeTest
code-creation,Builtin,2,115185,0x7ff701544184,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,115189,0x7ff7015446e4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,115194,0x7ff7015447e4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,115198,0x7ff7015448e4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,115203,0x7ff7015449e4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,115207,0x7ff701544ae4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,115211,0x7ff701544be4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,115216,0x7ff701544ce4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,115220,0x7ff701544e04,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,115224,0x7ff701544f24,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,115229,0x7ff701545804,1500,StringPrototypeAt
code-creation,Builtin,2,115233,0x7ff701545de4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,115237,0x7ff7015469c4,480,CreateHTML
code-creation,Builtin,2,115241,0x7ff701546bc4,164,StringPrototypeAnchor
code-creation,Builtin,2,115245,0x7ff701546c84,128,StringPrototypeBig
code-creation,Builtin,2,115250,0x7ff701546d24,128,StringPrototypeBlink
code-creation,Builtin,2,115255,0x7ff701546dc4,128,StringPrototypeBold
code-creation,Builtin,2,115259,0x7ff701546e64,168,StringPrototypeFontcolor
code-creation,Builtin,2,115264,0x7ff701546f24,168,StringPrototypeFontsize
code-creation,Builtin,2,115268,0x7ff701546fe4,128,StringPrototypeFixed
code-creation,Builtin,2,115272,0x7ff701547084,128,StringPrototypeItalics
code-creation,Builtin,2,115276,0x7ff701547124,168,StringPrototypeLink
code-creation,Builtin,2,115281,0x7ff7015471e4,128,StringPrototypeSmall
code-creation,Builtin,2,115285,0x7ff701547284,128,StringPrototypeStrike
code-creation,Builtin,2,115289,0x7ff701547324,128,StringPrototypeSub
code-creation,Builtin,2,115293,0x7ff7015473c4,128,StringPrototypeSup
code-creation,Builtin,2,115297,0x7ff701547464,1028,StringPrototypeIncludes
code-creation,Builtin,2,115302,0x7ff701547884,628,StringPrototypeIndexOf
code-creation,Builtin,2,115306,0x7ff701547b04,344,StringPrototypeIterator
code-creation,Builtin,2,115310,0x7ff701547c64,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,115314,0x7ff701548464,1304,StringPrototypeMatch
code-creation,Builtin,2,115318,0x7ff701548984,1304,StringPrototypeSearch
code-creation,Builtin,2,115323,0x7ff701548ea4,824,StringPrototypePadStart
code-creation,Builtin,2,115327,0x7ff7015491e4,824,StringPrototypePadEnd
code-creation,Builtin,2,115331,0x7ff701549524,120,StringRepeat
code-creation,Builtin,2,115335,0x7ff7015495a4,400,StringPrototypeRepeat
code-creation,Builtin,2,115340,0x7ff701549744,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,115344,0x7ff70154c304,3388,StringPrototypeSlice
code-creation,Builtin,2,115348,0x7ff70154d044,3028,StringPrototypeStartsWith
code-creation,Builtin,2,115352,0x7ff70154dc24,3328,StringPrototypeSubstr
code-creation,Builtin,2,115357,0x7ff70154e944,3260,StringPrototypeSubstring
code-creation,Builtin,2,115361,0x7ff70154f604,6916,StringPrototypeTrim
code-creation,Builtin,2,115365,0x7ff701551124,6332,StringPrototypeTrimStart
code-creation,Builtin,2,115369,0x7ff7015529e4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,115374,0x7ff7015540c4,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,115378,0x7ff701554184,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,115382,0x7ff701554224,172,SymbolPrototypeToString
code-creation,Builtin,2,115387,0x7ff7015542e4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,115391,0x7ff701554384,832,TypedArrayPrototypeAt
code-creation,Builtin,2,115395,0x7ff7015546e4,10064,CreateTypedArray
code-creation,Builtin,2,115399,0x7ff701556e44,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,115403,0x7ff701557244,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,115408,0x7ff7015573c4,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,115412,0x7ff701558184,996,TypedArrayPrototypeFind
code-creation,Builtin,2,115416,0x7ff701558584,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,115421,0x7ff701558984,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,115425,0x7ff701558b44,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,115430,0x7ff701559004,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,115434,0x7ff7015591c4,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,115439,0x7ff7015596a4,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,115443,0x7ff701559a24,2352,TypedArrayFrom
code-creation,Builtin,2,115447,0x7ff70155a364,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,115451,0x7ff70155a4e4,1028,TypedArrayOf
code-creation,Builtin,2,115456,0x7ff70155a904,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,115460,0x7ff70155acc4,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,115464,0x7ff70155b084,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,115468,0x7ff70155ba64,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,115473,0x7ff70155c664,992,TypedArrayPrototypeSome
code-creation,Builtin,2,115477,0x7ff70155ca64,1060,TypedArrayMergeSort
code-creation,Builtin,2,115481,0x7ff70155cea4,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,115485,0x7ff70155d504,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,115490,0x7ff70155dfc4,372,TypedArrayPrototypeValues
code-creation,Builtin,2,115495,0x7ff70155e144,952,WeakRefConstructor
code-creation,Builtin,2,115499,0x7ff70155e504,184,WeakRefDeref
code-creation,Builtin,2,115503,0x7ff70155e5c4,680,NewSloppyArgumentsElements
code-creation,Builtin,2,115508,0x7ff70155e884,296,NewStrictArgumentsElements
code-creation,Builtin,2,115512,0x7ff70155e9c4,320,NewRestArgumentsElements
code-creation,Builtin,2,115517,0x7ff70155eb24,1388,FastNewSloppyArguments
code-creation,Builtin,2,115521,0x7ff70155f0a4,524,FastNewStrictArguments
code-creation,Builtin,2,115525,0x7ff70155f2c4,556,FastNewRestArguments
code-creation,Builtin,2,115530,0x7ff70155f504,676,StringSlowFlatten
code-creation,Builtin,2,115534,0x7ff70155f7c4,2068,StringIndexOf
code-creation,Builtin,2,115538,0x7ff70155ffe4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,115542,0x7ff701560004,20,TestHelperPlus1
code-creation,Builtin,2,115546,0x7ff701560024,20,TestHelperPlus2
code-creation,Builtin,2,115550,0x7ff701560044,96,NewSmiBox
code-creation,Builtin,2,115554,0x7ff7015600c4,24,ReturnTwoValues
code-creation,Builtin,2,115559,0x7ff7015600e4,32,Load_FastSmiElements_0
code-creation,Builtin,2,115563,0x7ff701560124,32,Load_FastObjectElements_0
code-creation,Builtin,2,115567,0x7ff701560164,144,Load_FastDoubleElements_0
code-creation,Builtin,2,115571,0x7ff701560204,32,Store_FastSmiElements_0
code-creation,Builtin,2,115575,0x7ff701560244,96,Store_FastObjectElements_0
code-creation,Builtin,2,115580,0x7ff7015602c4,48,Store_FastDoubleElements_0
code-creation,Builtin,2,115584,0x7ff701560304,36,Delete_FastSmiElements_0
code-creation,Builtin,2,115588,0x7ff701560344,36,Delete_FastObjectElements_0
code-creation,Builtin,2,115593,0x7ff701560384,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,115597,0x7ff7015603c4,308,SortCompareDefault
code-creation,Builtin,2,115601,0x7ff701560504,92,SortCompareUserFn
code-creation,Builtin,2,115605,0x7ff701560564,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,115610,0x7ff701560584,312,Copy
code-creation,Builtin,2,115614,0x7ff7015606c4,5776,MergeAt
code-creation,Builtin,2,115618,0x7ff701561d64,792,GallopLeft
code-creation,Builtin,2,115622,0x7ff701562084,832,GallopRight
code-creation,Builtin,2,115626,0x7ff7015623e4,3832,ArrayTimSort
code-creation,Builtin,2,115630,0x7ff7015632e4,2112,ArrayPrototypeSort
code-creation,Builtin,2,115634,0x7ff701563b44,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,115639,0x7ff701563bc4,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,115643,0x7ff701563c44,76,WasmTaggedToFloat64
code-creation,Builtin,2,115648,0x7ff701563ca4,72,WasmMemoryGrow
code-creation,Builtin,2,115652,0x7ff701563d04,100,WasmTableInit
code-creation,Builtin,2,115656,0x7ff701563d84,100,WasmTableCopy
code-creation,Builtin,2,115660,0x7ff701563e04,84,WasmTableFill
code-creation,Builtin,2,115664,0x7ff701563e64,72,WasmTableGrow
code-creation,Builtin,2,115669,0x7ff701563ec4,144,WasmTableGet
code-creation,Builtin,2,115674,0x7ff701563f64,236,WasmTableSet
code-creation,Builtin,2,115678,0x7ff701564064,88,WasmRefFunc
code-creation,Builtin,2,115682,0x7ff7015640c4,144,WasmAllocateFixedArray
code-creation,Builtin,2,115686,0x7ff701564164,44,WasmThrow
code-creation,Builtin,2,115690,0x7ff7015641a4,52,WasmRethrow
code-creation,Builtin,2,115694,0x7ff7015641e4,44,WasmTriggerTierUp
code-creation,Builtin,2,115698,0x7ff701564224,32,WasmStackGuard
code-creation,Builtin,2,115702,0x7ff701564264,32,WasmStackOverflow
code-creation,Builtin,2,115707,0x7ff7015642a4,40,WasmTraceMemory
code-creation,Builtin,2,115711,0x7ff7015642e4,32,WasmTraceEnter
code-creation,Builtin,2,115715,0x7ff701564324,40,WasmTraceExit
code-creation,Builtin,2,115719,0x7ff701564364,332,WasmAllocateJSArray
code-creation,Builtin,2,115723,0x7ff7015644c4,104,WasmAllocatePair
code-creation,Builtin,2,115727,0x7ff701564544,64,WasmAllocateRtt
code-creation,Builtin,2,115731,0x7ff7015645a4,72,WasmAllocateFreshRtt
code-creation,Builtin,2,115735,0x7ff701564604,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,115740,0x7ff701564684,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,115745,0x7ff701564724,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,115750,0x7ff7015647e4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,115754,0x7ff7015648a4,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,115758,0x7ff701564924,60,WasmArrayCopy
code-creation,Builtin,2,115762,0x7ff701564964,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,115767,0x7ff701564a64,52,WasmSubtypeCheck
code-creation,Builtin,2,115771,0x7ff701564aa4,8,WasmInt32ToNumber
code-creation,Builtin,2,115775,0x7ff701564ac4,116,WasmUint32ToNumber
code-creation,Builtin,2,115779,0x7ff701564b44,144,UintPtr53ToNumber
code-creation,Builtin,2,115783,0x7ff701564be4,96,WasmAtomicNotify
code-creation,Builtin,2,115787,0x7ff701564c64,116,WasmI32AtomicWait64
code-creation,Builtin,2,115792,0x7ff701564ce4,116,WasmI64AtomicWait64
code-creation,Builtin,2,115796,0x7ff701564d64,580,WasmGetOwnProperty
code-creation,Builtin,2,115800,0x7ff701564fc4,40,WasmTrap
code-creation,Builtin,2,115804,0x7ff701565004,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,115808,0x7ff701565024,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,115813,0x7ff701565044,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,115817,0x7ff701565064,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,115821,0x7ff701565084,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,115826,0x7ff7015650a4,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,115830,0x7ff7015650c4,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,115834,0x7ff7015650e4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,115839,0x7ff701565104,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,115843,0x7ff701565124,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,115847,0x7ff701565144,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,115852,0x7ff701565164,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,115856,0x7ff701565184,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,115861,0x7ff7015651a4,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,115865,0x7ff7015651c4,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,115869,0x7ff7015651e4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,115874,0x7ff701565204,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,115878,0x7ff7015652c4,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,115883,0x7ff7015652e4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,115888,0x7ff701565364,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,115892,0x7ff7015653e4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,115897,0x7ff701565404,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,115901,0x7ff7015654e4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,115906,0x7ff7015655e4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,115911,0x7ff701565604,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,115915,0x7ff701565624,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,115919,0x7ff701565644,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,115924,0x7ff701565664,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,115928,0x7ff701565704,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,115933,0x7ff701565724,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,115937,0x7ff701565764,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,115942,0x7ff7015657a4,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,115946,0x7ff7015657e4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,115951,0x7ff701566264,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,115955,0x7ff701566284,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,115959,0x7ff7015662c4,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,115964,0x7ff7015662e4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,115970,0x7ff7015663a4,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,115975,0x7ff701566464,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,115979,0x7ff7015664e4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,115984,0x7ff701566524,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,115988,0x7ff7015665c4,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,115993,0x7ff701566644,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,115997,0x7ff701566664,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,116002,0x7ff701566704,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,116006,0x7ff701566724,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,116011,0x7ff701566744,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,116016,0x7ff7015669c4,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,116020,0x7ff701566aa4,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,116025,0x7ff701566ae4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,116030,0x7ff701566bc4,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,116034,0x7ff701566cc4,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,116039,0x7ff701566d04,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,116043,0x7ff701566de4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,116048,0x7ff701566e04,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,116052,0x7ff701566e24,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,116057,0x7ff701566ee4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,116061,0x7ff701566f04,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,116065,0x7ff701566f24,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,116070,0x7ff701566fe4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,116074,0x7ff701567004,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,116079,0x7ff701567024,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,116084,0x7ff7015670e4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,116088,0x7ff701567104,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,116092,0x7ff701567124,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,116097,0x7ff7015671e4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,116101,0x7ff701567284,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,116106,0x7ff701567344,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,116110,0x7ff701567404,12,CollatorConstructor
code-creation,Builtin,2,116114,0x7ff701567424,12,CollatorInternalCompare
code-creation,Builtin,2,116119,0x7ff701567444,12,CollatorPrototypeCompare
code-creation,Builtin,2,116123,0x7ff701567464,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,116128,0x7ff701567484,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,116132,0x7ff7015674a4,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,116136,0x7ff7015674c4,12,DatePrototypeToLocaleString
code-creation,Builtin,2,116141,0x7ff7015674e4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,116145,0x7ff701567504,12,DateTimeFormatConstructor
code-creation,Builtin,2,116149,0x7ff701567524,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,116154,0x7ff701567544,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,116158,0x7ff701567564,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,116162,0x7ff701567584,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,116167,0x7ff7015675a4,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,116171,0x7ff7015675c4,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,116176,0x7ff7015675e4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,116180,0x7ff701567604,12,DisplayNamesConstructor
code-creation,Builtin,2,116186,0x7ff701567624,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,116190,0x7ff701567644,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,116195,0x7ff701567664,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,116199,0x7ff701567684,12,IntlGetCanonicalLocales
code-creation,Builtin,2,116203,0x7ff7015676a4,12,ListFormatConstructor
code-creation,Builtin,2,116207,0x7ff7015676c4,224,ListFormatPrototypeFormat
code-creation,Builtin,2,116212,0x7ff7015677c4,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,116216,0x7ff7015678c4,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,116221,0x7ff7015678e4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,116225,0x7ff701567904,12,LocaleConstructor
code-creation,Builtin,2,116229,0x7ff701567924,12,LocalePrototypeBaseName
code-creation,Builtin,2,116233,0x7ff701567944,12,LocalePrototypeCalendar
code-creation,Builtin,2,116238,0x7ff701567964,12,LocalePrototypeCalendars
code-creation,Builtin,2,116242,0x7ff701567984,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,116246,0x7ff7015679a4,12,LocalePrototypeCollation
code-creation,Builtin,2,116250,0x7ff7015679c4,12,LocalePrototypeCollations
code-creation,Builtin,2,116255,0x7ff7015679e4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,116259,0x7ff701567a04,12,LocalePrototypeHourCycles
code-creation,Builtin,2,116263,0x7ff701567a24,12,LocalePrototypeLanguage
code-creation,Builtin,2,116267,0x7ff701567a44,12,LocalePrototypeMaximize
code-creation,Builtin,2,116272,0x7ff701567a64,12,LocalePrototypeMinimize
code-creation,Builtin,2,116276,0x7ff701567a84,12,LocalePrototypeNumeric
code-creation,Builtin,2,116280,0x7ff701567aa4,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,116285,0x7ff701567ac4,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,116289,0x7ff701567ae4,12,LocalePrototypeRegion
code-creation,Builtin,2,116293,0x7ff701567b04,12,LocalePrototypeScript
code-creation,Builtin,2,116298,0x7ff701567b24,12,LocalePrototypeTextInfo
code-creation,Builtin,2,116302,0x7ff701567b44,12,LocalePrototypeTimeZones
code-creation,Builtin,2,116306,0x7ff701567b64,12,LocalePrototypeToString
code-creation,Builtin,2,116311,0x7ff701567b84,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,116315,0x7ff701567ba4,12,NumberFormatConstructor
code-creation,Builtin,2,116319,0x7ff701567bc4,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,116324,0x7ff701567be4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,116328,0x7ff701567c04,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,116333,0x7ff701567c24,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,116337,0x7ff701567c44,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,116342,0x7ff701567c64,12,PluralRulesConstructor
code-creation,Builtin,2,116346,0x7ff701567c84,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,116350,0x7ff701567ca4,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,116355,0x7ff701567cc4,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,116359,0x7ff701567ce4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,116363,0x7ff701567d04,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,116368,0x7ff701567d24,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,116372,0x7ff701567d44,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,116377,0x7ff701567d64,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,116381,0x7ff701567d84,12,SegmenterConstructor
code-creation,Builtin,2,116386,0x7ff701567da4,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,116390,0x7ff701567dc4,12,SegmenterPrototypeSegment
code-creation,Builtin,2,116394,0x7ff701567de4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,116399,0x7ff701567e04,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,116403,0x7ff701567e24,12,SegmentsPrototypeContaining
code-creation,Builtin,2,116408,0x7ff701567e44,12,SegmentsPrototypeIterator
code-creation,Builtin,2,116412,0x7ff701567e64,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,116417,0x7ff701567e84,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,116422,0x7ff701567ea4,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,116426,0x7ff701567ec4,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,116431,0x7ff701567fa4,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,116435,0x7ff701567fc4,636,StringToLowerCaseIntl
code-creation,Builtin,2,116440,0x7ff701568244,12,V8BreakIteratorConstructor
code-creation,Builtin,2,116444,0x7ff701568264,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,116448,0x7ff701568284,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,116453,0x7ff7015682a4,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,116457,0x7ff7015682c4,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,116462,0x7ff7015682e4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,116467,0x7ff701568304,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,116472,0x7ff701568324,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,116477,0x7ff701568344,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,116481,0x7ff701568364,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,116486,0x7ff701568384,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,116490,0x7ff7015683a4,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,116495,0x7ff7015683c4,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,116500,0x7ff7015683e4,24,Wide
code-creation,BytecodeHandler,0,116504,0x7ff701568404,24,ExtraWide
code-creation,BytecodeHandler,0,116508,0x7ff701568424,104,DebugBreakWide
code-creation,BytecodeHandler,0,116513,0x7ff7015684a4,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,116517,0x7ff701568524,164,DebugBreak0
code-creation,BytecodeHandler,0,116521,0x7ff7015685e4,104,DebugBreak1
code-creation,BytecodeHandler,0,116526,0x7ff701568664,104,DebugBreak2
code-creation,BytecodeHandler,0,116530,0x7ff7015686e4,104,DebugBreak3
code-creation,BytecodeHandler,0,116534,0x7ff701568764,104,DebugBreak4
code-creation,BytecodeHandler,0,116539,0x7ff7015687e4,104,DebugBreak5
code-creation,BytecodeHandler,0,116543,0x7ff701568864,104,DebugBreak6
code-creation,BytecodeHandler,0,116547,0x7ff7015688e4,32,Ldar
code-creation,BytecodeHandler,0,116551,0x7ff701568924,68,LdaZero
code-creation,BytecodeHandler,0,116556,0x7ff701568984,76,LdaSmi
code-creation,BytecodeHandler,0,116560,0x7ff7015689e4,68,LdaUndefined
code-creation,BytecodeHandler,0,116564,0x7ff701568a44,68,LdaNull
code-creation,BytecodeHandler,0,116568,0x7ff701568aa4,68,LdaTheHole
code-creation,BytecodeHandler,0,116572,0x7ff701568b04,20,LdaTrue
code-creation,BytecodeHandler,0,116577,0x7ff701568b24,20,LdaFalse
code-creation,BytecodeHandler,0,116581,0x7ff701568b44,76,LdaConstant
code-creation,BytecodeHandler,0,116585,0x7ff701568ba4,132,LdaContextSlot
code-creation,BytecodeHandler,0,116589,0x7ff701568c44,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,116594,0x7ff701568ce4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,116599,0x7ff701568d44,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,116603,0x7ff701568da4,32,Star
code-creation,BytecodeHandler,0,116607,0x7ff701568de4,40,Mov
code-creation,BytecodeHandler,0,116611,0x7ff701568e24,40,PushContext
code-creation,BytecodeHandler,0,116616,0x7ff701568e64,36,PopContext
code-creation,BytecodeHandler,0,116620,0x7ff701568ea4,48,TestReferenceEqual
code-creation,BytecodeHandler,0,116624,0x7ff701568ee4,52,TestUndetectable
code-creation,BytecodeHandler,0,116629,0x7ff701568f24,36,TestNull
code-creation,BytecodeHandler,0,116633,0x7ff701568f64,36,TestUndefined
code-creation,BytecodeHandler,0,116637,0x7ff701568fa4,336,TestTypeOf
code-creation,BytecodeHandler,0,116642,0x7ff701569104,6036,LdaGlobal
code-creation,BytecodeHandler,0,116647,0x7ff70156a8a4,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,116651,0x7ff70156ba64,168,StaGlobal
code-creation,BytecodeHandler,0,116655,0x7ff70156bb24,160,StaContextSlot
code-creation,BytecodeHandler,0,116660,0x7ff70156bbe4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,116665,0x7ff70156bc64,124,LdaLookupSlot
code-creation,BytecodeHandler,0,116670,0x7ff70156bce4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,116675,0x7ff70156bde4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,116679,0x7ff70156d0a4,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,116684,0x7ff70156d124,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,116689,0x7ff70156d224,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,116693,0x7ff70156e4c4,220,StaLookupSlot
code-creation,BytecodeHandler,0,116698,0x7ff70156e5a4,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,116702,0x7ff70156fa24,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,116706,0x7ff70156fae4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,116711,0x7ff70156fbc4,160,LdaModuleVariable
code-creation,BytecodeHandler,0,116715,0x7ff70156fc84,292,StaModuleVariable
code-creation,BytecodeHandler,0,116720,0x7ff70156fdc4,172,StaNamedProperty
code-creation,BytecodeHandler,0,116724,0x7ff70156fe84,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,116728,0x7ff70156ff44,164,StaKeyedProperty
code-creation,BytecodeHandler,0,116733,0x7ff701570004,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,116737,0x7ff7015700c4,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,116742,0x7ff7015701a4,160,CollectTypeProfile
code-creation,BytecodeHandler,0,116746,0x7ff701570264,1028,Add
code-creation,BytecodeHandler,0,116750,0x7ff701570684,1064,Sub
code-creation,BytecodeHandler,0,116755,0x7ff701570ac4,1024,Mul
code-creation,BytecodeHandler,0,116759,0x7ff701570ee4,988,Div
code-creation,BytecodeHandler,0,116763,0x7ff7015712c4,912,Mod
code-creation,BytecodeHandler,0,116767,0x7ff701571664,964,Exp
code-creation,BytecodeHandler,0,116771,0x7ff701571a44,876,BitwiseOr
code-creation,BytecodeHandler,0,116776,0x7ff701571dc4,888,BitwiseXor
code-creation,BytecodeHandler,0,116780,0x7ff701572144,888,BitwiseAnd
code-creation,BytecodeHandler,0,116784,0x7ff7015724c4,900,ShiftLeft
code-creation,BytecodeHandler,0,116788,0x7ff701572864,900,ShiftRight
code-creation,BytecodeHandler,0,116793,0x7ff701572c04,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,116797,0x7ff701573004,960,AddSmi
code-creation,BytecodeHandler,0,116801,0x7ff7015733e4,1000,SubSmi
code-creation,BytecodeHandler,0,116805,0x7ff7015737e4,916,MulSmi
code-creation,BytecodeHandler,0,116809,0x7ff701573b84,920,DivSmi
code-creation,BytecodeHandler,0,116814,0x7ff701573f24,816,ModSmi
code-creation,BytecodeHandler,0,116818,0x7ff701574264,872,ExpSmi
code-creation,BytecodeHandler,0,116822,0x7ff7015745e4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,116826,0x7ff7015747e4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,116830,0x7ff7015749e4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,116835,0x7ff701574be4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,116839,0x7ff701574de4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,116843,0x7ff701574fe4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,116848,0x7ff701575284,656,Inc
code-creation,BytecodeHandler,0,116852,0x7ff701575524,656,Dec
code-creation,BytecodeHandler,0,116856,0x7ff7015757c4,640,Negate
code-creation,BytecodeHandler,0,116860,0x7ff701575a64,480,BitwiseNot
code-creation,BytecodeHandler,0,116865,0x7ff701575c64,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,116869,0x7ff701575ce4,36,LogicalNot
code-creation,BytecodeHandler,0,116873,0x7ff701575d24,208,TypeOf
code-creation,BytecodeHandler,0,116877,0x7ff701575e04,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,116882,0x7ff701575e84,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,116886,0x7ff701575f04,40,GetSuperConstructor
code-creation,BytecodeHandler,0,116891,0x7ff701575f44,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,116895,0x7ff7015763c4,1132,CallProperty
code-creation,BytecodeHandler,0,116899,0x7ff701576844,1012,CallProperty0
code-creation,BytecodeHandler,0,116904,0x7ff701576c44,1028,CallProperty1
code-creation,BytecodeHandler,0,116908,0x7ff701577064,1040,CallProperty2
code-creation,BytecodeHandler,0,116914,0x7ff701577484,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,116919,0x7ff701577884,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,116923,0x7ff701577ca4,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,116928,0x7ff7015780a4,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,116932,0x7ff7015784c4,1132,CallWithSpread
code-creation,BytecodeHandler,0,116937,0x7ff701578944,124,CallRuntime
code-creation,BytecodeHandler,0,116941,0x7ff7015789c4,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,116945,0x7ff701578a64,80,CallJSRuntime
code-creation,BytecodeHandler,0,116950,0x7ff701578ac4,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,116954,0x7ff701578fa4,1020,Construct
code-creation,BytecodeHandler,0,116958,0x7ff7015793a4,536,ConstructWithSpread
code-creation,BytecodeHandler,0,116963,0x7ff7015795c4,1936,TestEqual
code-creation,BytecodeHandler,0,116967,0x7ff701579d64,1064,TestEqualStrict
code-creation,BytecodeHandler,0,116971,0x7ff70157a1a4,1624,TestLessThan
code-creation,BytecodeHandler,0,116976,0x7ff70157a804,1624,TestGreaterThan
code-creation,BytecodeHandler,0,116980,0x7ff70157ae64,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,116985,0x7ff70157b4c4,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,116989,0x7ff70157bb24,860,TestInstanceOf
code-creation,BytecodeHandler,0,116994,0x7ff70157be84,156,TestIn
code-creation,BytecodeHandler,0,116998,0x7ff70157bf24,112,ToName
code-creation,BytecodeHandler,0,117002,0x7ff70157bfa4,212,ToNumber
code-creation,BytecodeHandler,0,117006,0x7ff70157c084,232,ToNumeric
code-creation,BytecodeHandler,0,117011,0x7ff70157c184,112,ToObject
code-creation,BytecodeHandler,0,117015,0x7ff70157c204,116,ToString
code-creation,BytecodeHandler,0,117019,0x7ff70157c284,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,117024,0x7ff70157c424,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,117028,0x7ff70157c9e4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,117033,0x7ff70157ca44,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,117037,0x7ff70157cd64,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,117042,0x7ff70157d5c4,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,117046,0x7ff70157d6c4,168,CloneObject
code-creation,BytecodeHandler,0,117050,0x7ff70157d784,212,GetTemplateObject
code-creation,BytecodeHandler,0,117055,0x7ff70157d864,328,CreateClosure
code-creation,BytecodeHandler,0,117059,0x7ff70157d9c4,120,CreateBlockContext
code-creation,BytecodeHandler,0,117064,0x7ff70157da44,132,CreateCatchContext
code-creation,BytecodeHandler,0,117068,0x7ff70157dae4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,117072,0x7ff70157dc04,256,CreateEvalContext
code-creation,BytecodeHandler,0,117077,0x7ff70157dd24,132,CreateWithContext
code-creation,BytecodeHandler,0,117081,0x7ff70157ddc4,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,117086,0x7ff70157e404,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,117091,0x7ff70157e664,632,CreateRestParameter
code-creation,BytecodeHandler,0,117096,0x7ff70157e8e4,424,JumpLoop
code-creation,BytecodeHandler,0,117101,0x7ff70157eaa4,44,Jump
code-creation,BytecodeHandler,0,117105,0x7ff70157eae4,56,JumpConstant
code-creation,BytecodeHandler,0,117109,0x7ff70157eb24,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,117114,0x7ff70157eb84,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,117118,0x7ff70157ebe4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,117123,0x7ff70157ec44,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,117127,0x7ff70157eca4,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,117132,0x7ff70157ed04,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,117136,0x7ff70157ed64,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,117141,0x7ff70157edc4,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,117145,0x7ff70157ee24,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,117150,0x7ff70157eec4,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,117156,0x7ff70157ef64,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,117161,0x7ff70157f004,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,117165,0x7ff70157f0a4,64,JumpIfTrue
code-creation,BytecodeHandler,0,117169,0x7ff70157f104,64,JumpIfFalse
code-creation,BytecodeHandler,0,117174,0x7ff70157f164,64,JumpIfNull
code-creation,BytecodeHandler,0,117178,0x7ff70157f1c4,64,JumpIfNotNull
code-creation,BytecodeHandler,0,117182,0x7ff70157f224,64,JumpIfUndefined
code-creation,BytecodeHandler,0,117187,0x7ff70157f284,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,117191,0x7ff70157f2e4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,117195,0x7ff70157f344,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,117200,0x7ff70157f3a4,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,117204,0x7ff70157f424,464,ForInEnumerate
code-creation,BytecodeHandler,0,117208,0x7ff70157f604,252,ForInPrepare
code-creation,BytecodeHandler,0,117213,0x7ff70157f704,60,ForInContinue
code-creation,BytecodeHandler,0,117217,0x7ff70157f744,256,ForInNext
code-creation,BytecodeHandler,0,117221,0x7ff70157f864,48,ForInStep
code-creation,BytecodeHandler,0,117226,0x7ff70157f8a4,36,SetPendingMessage
code-creation,BytecodeHandler,0,117230,0x7ff70157f8e4,116,Throw
code-creation,BytecodeHandler,0,117234,0x7ff70157f964,116,ReThrow
code-creation,BytecodeHandler,0,117238,0x7ff70157f9e4,112,Return
code-creation,BytecodeHandler,0,117243,0x7ff70157fa64,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,117247,0x7ff70157fb44,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,117252,0x7ff70157fbe4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,117256,0x7ff70157fc84,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,117261,0x7ff70157fd24,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,117266,0x7ff70157fda4,512,SuspendGenerator
code-creation,BytecodeHandler,0,117270,0x7ff70157ffc4,128,ResumeGenerator
code-creation,BytecodeHandler,0,117274,0x7ff701580064,152,GetIterator
code-creation,BytecodeHandler,0,117279,0x7ff701580104,116,Debugger
code-creation,BytecodeHandler,0,117283,0x7ff701580184,124,IncBlockCounter
code-creation,BytecodeHandler,0,117288,0x7ff701580204,56,Abort
code-creation,BytecodeHandler,0,117292,0x7ff701580244,32,Star0
code-creation,BytecodeHandler,0,117296,0x7ff701580284,60,Illegal
code-creation,BytecodeHandler,0,117300,0x7ff7015802c4,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,117305,0x7ff701580344,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,117309,0x7ff7015803c4,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,117314,0x7ff701580444,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,117318,0x7ff7015804c4,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,117323,0x7ff701580544,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,117327,0x7ff7015805c4,32,Ldar.Wide
code-creation,BytecodeHandler,0,117331,0x7ff701580604,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,117336,0x7ff701580644,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,117340,0x7ff701580684,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,117345,0x7ff7015806e4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,117349,0x7ff701580744,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,117354,0x7ff701580784,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,117359,0x7ff7015807c4,32,Star.Wide
code-creation,BytecodeHandler,0,117363,0x7ff701580804,40,Mov.Wide
code-creation,BytecodeHandler,0,117367,0x7ff701580844,40,PushContext.Wide
code-creation,BytecodeHandler,0,117372,0x7ff701580884,36,PopContext.Wide
code-creation,BytecodeHandler,0,117376,0x7ff7015808c4,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,117381,0x7ff701580904,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,117385,0x7ff701581b44,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,117390,0x7ff701582d44,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,117394,0x7ff701582e04,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,117400,0x7ff701582ec4,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,117405,0x7ff701582f44,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,117410,0x7ff701582fe4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,117414,0x7ff7015830e4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,117419,0x7ff7015843e4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,117424,0x7ff701584484,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,117429,0x7ff701584584,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,117434,0x7ff701585864,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,117438,0x7ff701585944,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,117443,0x7ff701586dc4,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,117448,0x7ff701586e84,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,117452,0x7ff701586f44,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,117457,0x7ff701587004,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,117461,0x7ff701587144,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,117466,0x7ff701587204,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,117470,0x7ff7015872c4,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,117475,0x7ff701587384,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,117479,0x7ff701587444,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,117484,0x7ff701587524,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,117488,0x7ff7015875e4,984,Add.Wide
code-creation,BytecodeHandler,0,117493,0x7ff7015879c4,1020,Sub.Wide
code-creation,BytecodeHandler,0,117497,0x7ff701587dc4,972,Mul.Wide
code-creation,BytecodeHandler,0,117501,0x7ff7015881a4,988,Div.Wide
code-creation,BytecodeHandler,0,117505,0x7ff701588584,916,Mod.Wide
code-creation,BytecodeHandler,0,117510,0x7ff701588924,988,Exp.Wide
code-creation,BytecodeHandler,0,117514,0x7ff701588d04,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,117518,0x7ff7015890a4,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,117522,0x7ff701589444,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,117527,0x7ff7015897e4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,117531,0x7ff701589ba4,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,117536,0x7ff701589f64,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,117540,0x7ff70158a384,916,AddSmi.Wide
code-creation,BytecodeHandler,0,117545,0x7ff70158a724,960,SubSmi.Wide
code-creation,BytecodeHandler,0,117549,0x7ff70158ab04,912,MulSmi.Wide
code-creation,BytecodeHandler,0,117553,0x7ff70158aea4,920,DivSmi.Wide
code-creation,BytecodeHandler,0,117557,0x7ff70158b244,816,ModSmi.Wide
code-creation,BytecodeHandler,0,117562,0x7ff70158b584,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,117566,0x7ff70158b904,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,117571,0x7ff70158bb04,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,117575,0x7ff70158bd04,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,117580,0x7ff70158bf04,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,117584,0x7ff70158c104,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,117588,0x7ff70158c304,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,117593,0x7ff70158c5a4,616,Inc.Wide
code-creation,BytecodeHandler,0,117597,0x7ff70158c824,616,Dec.Wide
code-creation,BytecodeHandler,0,117601,0x7ff70158caa4,648,Negate.Wide
code-creation,BytecodeHandler,0,117606,0x7ff70158cd44,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,117610,0x7ff70158cf44,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,117615,0x7ff70158cfc4,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,117619,0x7ff70158d044,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,117624,0x7ff70158d084,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,117629,0x7ff70158d504,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,117633,0x7ff70158d984,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,117638,0x7ff70158dd84,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,117644,0x7ff70158e1a4,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,117649,0x7ff70158e5c4,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,117653,0x7ff70158e9c4,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,117658,0x7ff70158ede4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,117663,0x7ff70158f204,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,117667,0x7ff70158f624,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,117672,0x7ff70158faa4,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,117676,0x7ff70158fb44,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,117681,0x7ff70158fc04,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,117686,0x7ff70158fc64,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,117690,0x7ff701590144,968,Construct.Wide
code-creation,BytecodeHandler,0,117694,0x7ff701590524,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,117699,0x7ff701590704,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,117703,0x7ff701590ec4,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,117708,0x7ff701591304,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,117712,0x7ff701591904,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,117717,0x7ff701591f04,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,117721,0x7ff701592504,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,117726,0x7ff701592b04,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,117730,0x7ff701592e84,160,TestIn.Wide
code-creation,BytecodeHandler,0,117735,0x7ff701592f44,116,ToName.Wide
code-creation,BytecodeHandler,0,117739,0x7ff701592fc4,216,ToNumber.Wide
code-creation,BytecodeHandler,0,117743,0x7ff7015930a4,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,117748,0x7ff7015931a4,116,ToObject.Wide
code-creation,BytecodeHandler,0,117752,0x7ff701593224,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,117757,0x7ff7015933c4,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,117761,0x7ff701593944,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,117766,0x7ff701593c64,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,117771,0x7ff701594464,172,CloneObject.Wide
code-creation,BytecodeHandler,0,117775,0x7ff701594524,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,117780,0x7ff7015945e4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,117785,0x7ff701594744,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,117789,0x7ff7015947c4,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,117794,0x7ff701594864,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,117798,0x7ff701594984,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,117803,0x7ff701594aa4,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,117807,0x7ff701594b44,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,117812,0x7ff701594d04,44,Jump.Wide
code-creation,BytecodeHandler,0,117816,0x7ff701594d44,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,117820,0x7ff701594d84,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,117825,0x7ff701594de4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,117830,0x7ff701594e44,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,117834,0x7ff701594ea4,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,117839,0x7ff701594f04,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,117844,0x7ff701594f64,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,117848,0x7ff701594fc4,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,117853,0x7ff701595024,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,117857,0x7ff701595084,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,117862,0x7ff701595124,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,117867,0x7ff7015951c4,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,117873,0x7ff701595264,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,117878,0x7ff701595304,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,117882,0x7ff701595364,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,117887,0x7ff7015953c4,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,117891,0x7ff701595424,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,117896,0x7ff701595484,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,117900,0x7ff7015954e4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,117905,0x7ff701595544,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,117909,0x7ff7015955a4,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,117914,0x7ff701595604,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,117919,0x7ff701595684,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,117923,0x7ff701595864,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,117928,0x7ff701595964,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,117932,0x7ff7015959a4,260,ForInNext.Wide
code-creation,BytecodeHandler,0,117936,0x7ff701595ac4,48,ForInStep.Wide
code-creation,BytecodeHandler,0,117941,0x7ff701595b04,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,117945,0x7ff701595ba4,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,117950,0x7ff701595c64,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,117955,0x7ff701595ce4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,117959,0x7ff701595f04,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,117964,0x7ff701595fa4,156,GetIterator.Wide
code-creation,BytecodeHandler,0,117968,0x7ff701596044,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,117973,0x7ff7015960e4,56,Abort.Wide
code-creation,BytecodeHandler,0,117977,0x7ff701596124,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,117981,0x7ff7015961a4,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,117986,0x7ff701596224,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,117990,0x7ff7015962a4,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,117995,0x7ff701596324,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,117999,0x7ff7015963a4,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,118004,0x7ff701596424,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,118008,0x7ff701596464,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,118013,0x7ff701596484,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,118017,0x7ff7015964c4,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,118022,0x7ff701596524,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,118027,0x7ff701596584,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,118031,0x7ff7015965c4,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,118036,0x7ff701596604,28,Star.ExtraWide
code-creation,BytecodeHandler,0,118040,0x7ff701596624,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,118045,0x7ff701596664,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,118049,0x7ff7015966a4,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,118054,0x7ff7015966e4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,118058,0x7ff701596724,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,118063,0x7ff701597964,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,118068,0x7ff701598b64,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,118072,0x7ff701598c24,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,118077,0x7ff701598cc4,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,118081,0x7ff701598d44,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,118086,0x7ff701598de4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,118091,0x7ff701598ee4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,118096,0x7ff70159a1e4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,118101,0x7ff70159a284,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,118107,0x7ff70159a384,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,118112,0x7ff70159b664,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,118117,0x7ff70159b744,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,118121,0x7ff70159cba4,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,118126,0x7ff70159cc64,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,118131,0x7ff70159cd04,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,118135,0x7ff70159cdc4,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,118140,0x7ff70159cf04,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,118145,0x7ff70159cfc4,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,118149,0x7ff70159d084,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,118154,0x7ff70159d144,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,118159,0x7ff70159d204,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,118163,0x7ff70159d2e4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,118168,0x7ff70159d3a4,980,Add.ExtraWide
code-creation,BytecodeHandler,0,118172,0x7ff70159d784,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,118177,0x7ff70159db84,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,118181,0x7ff70159df64,988,Div.ExtraWide
code-creation,BytecodeHandler,0,118185,0x7ff70159e344,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,118190,0x7ff70159e6e4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,118194,0x7ff70159eac4,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,118199,0x7ff70159ee64,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,118203,0x7ff70159f204,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,118208,0x7ff70159f5a4,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,118212,0x7ff70159f964,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,118217,0x7ff70159fd24,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,118221,0x7ff7015a0144,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,118226,0x7ff7015a04e4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,118230,0x7ff7015a08c4,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,118234,0x7ff7015a0c64,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,118239,0x7ff7015a1004,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,118243,0x7ff7015a1344,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,118248,0x7ff7015a16c4,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,118253,0x7ff7015a18c4,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,118257,0x7ff7015a1ac4,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,118262,0x7ff7015a1cc4,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,118266,0x7ff7015a1ec4,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,118271,0x7ff7015a20c4,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,118275,0x7ff7015a2364,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,118280,0x7ff7015a25e4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,118284,0x7ff7015a2864,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,118288,0x7ff7015a2b04,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,118293,0x7ff7015a2d04,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,118298,0x7ff7015a2d84,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,118302,0x7ff7015a2e04,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,118307,0x7ff7015a2e44,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,118312,0x7ff7015a32c4,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,118316,0x7ff7015a3744,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,118321,0x7ff7015a3b44,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,118325,0x7ff7015a3f64,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,118330,0x7ff7015a4384,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,118336,0x7ff7015a4784,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,118341,0x7ff7015a4ba4,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,118346,0x7ff7015a4fa4,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,118350,0x7ff7015a53c4,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,118355,0x7ff7015a5844,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,118360,0x7ff7015a58e4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,118364,0x7ff7015a59a4,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,118369,0x7ff7015a5a04,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,118374,0x7ff7015a5ee4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,118378,0x7ff7015a62c4,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,118383,0x7ff7015a64a4,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,118387,0x7ff7015a6c64,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,118392,0x7ff7015a70a4,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,118397,0x7ff7015a76a4,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,118401,0x7ff7015a7ca4,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,118406,0x7ff7015a82a4,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,118411,0x7ff7015a88a4,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,118415,0x7ff7015a8c24,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,118420,0x7ff7015a8cc4,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,118424,0x7ff7015a8d44,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,118429,0x7ff7015a8e24,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,118433,0x7ff7015a8f24,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,118438,0x7ff7015a8fa4,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,118442,0x7ff7015a9144,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,118447,0x7ff7015a96c4,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,118452,0x7ff7015a99e4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,118457,0x7ff7015aa1e4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,118461,0x7ff7015aa2a4,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,118466,0x7ff7015aa364,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,118471,0x7ff7015aa4c4,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,118475,0x7ff7015aa544,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,118480,0x7ff7015aa5e4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,118484,0x7ff7015aa704,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,118489,0x7ff7015aa824,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,118494,0x7ff7015aa8c4,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,118498,0x7ff7015aaa84,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,118503,0x7ff7015aaac4,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,118507,0x7ff7015aab04,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,118512,0x7ff7015aab64,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,118517,0x7ff7015aabc4,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,118522,0x7ff7015aac24,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,118526,0x7ff7015aac84,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,118531,0x7ff7015aace4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,118536,0x7ff7015aad44,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,118541,0x7ff7015aada4,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,118545,0x7ff7015aae04,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,118551,0x7ff7015aaea4,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,118571,0x7ff7015aaf44,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,118577,0x7ff7015aafe4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,118582,0x7ff7015ab084,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,118586,0x7ff7015ab0e4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,118591,0x7ff7015ab144,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,118595,0x7ff7015ab1a4,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,118600,0x7ff7015ab204,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,118605,0x7ff7015ab264,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,118609,0x7ff7015ab2c4,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,118614,0x7ff7015ab324,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,118619,0x7ff7015ab384,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,118623,0x7ff7015ab404,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,118628,0x7ff7015ab5e4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,118632,0x7ff7015ab6e4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,118637,0x7ff7015ab724,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,118642,0x7ff7015ab844,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,118647,0x7ff7015ab884,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,118652,0x7ff7015ab924,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,118658,0x7ff7015ab9e4,120,SwitchOnGeneratorState.ExtraWide
tick,0x7fff4326d1c4,118688,0,0x0,6
code-creation,BytecodeHandler,0,118713,0x7ff7015aba64,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,118740,0x7ff7015abc84,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,118750,0x7ff7015abd04,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,118759,0x7ff7015abda4,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,118768,0x7ff7015abe24,56,Abort.ExtraWide
new,MemoryChunk,0x21786600000,262144
new,MemoryChunk,0xf0fc7c0000,262144
new,MemoryChunk,0x3a5f9a00000,262144
new,MemoryChunk,0x10606380000,262144
code-creation,Eval,10,122388,0x106063bee8e,5, node:internal/main/run_main_module:1:1,0x106063bed48,~
script-source,94,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x106063bee8e,94,0,649,C0O0C4O649,,
code-creation,Function,10,122440,0x106063bef36,58, node:internal/main/run_main_module:1:1,0x106063bee08,~
code-source-info,0x106063bef36,94,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,122627,0x106063bf176,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x29c79f8fd30,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x106063bf176,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
code-creation,LazyCompile,10,123041,0x106063bfe86,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x29c79f8fc60,~
code-source-info,0x106063bfe86,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
new,MemoryChunk,0x2efc0800000,262144
code-creation,Eval,10,123340,0x2efc0801ede,5, node:internal/bootstrap/pre_execution:1:1,0x2efc0801b48,~
script-source,95,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x2efc0801ede,95,0,16254,C0O0C4O16254,,
code-creation,Function,10,123879,0x2efc08029de,426, node:internal/bootstrap/pre_execution:1:1,0x2efc0801e58,~
code-source-info,0x2efc08029de,95,0,16254,C0O0C190O28C196O47C202O72C208O84C214O100C220O130C226O218C232O218C237O174C243O193C249O284C255O284C260O256C266O334C272O334C277O323C283O396C289O396C294O422C299O362C305O446C311O446C315O446C317O15839C324O15861C330O15884C336O15907C342O15931C348O15949C354O15968C360O15999C366O16026C372O16050C378O16081C384O16114C390O16137C396O16165C402O16189C408O16210C414O16234C420O15854C425O16253,,
code-creation,Eval,10,124032,0x2efc080432e,5, node:internal/options:1:1,0x2efc0804158,~
script-source,96,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x2efc080432e,96,0,1892,C0O0C4O1892,,
code-creation,Function,10,124115,0x2efc08046fe,154, node:internal/options:1:1,0x2efc08042a8,~
code-source-info,0x2efc08046fe,96,0,1892,C0O0C54O102C57O102C62O28C68O66C74O163C75O163C77O176C78O176C80O193C81O193C83O210C84O210C86O1675C93O1824C99O1843C105O1868C148O1690C153O1891,,
code-creation,LazyCompile,10,124188,0x2efc0804c0e,69,internalBinding node:internal/bootstrap/loaders:164:45,0x29c79f8f7b0,~
code-source-info,0x2efc0804c0e,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,124332,0x2efc080545e,213,prepareMainThreadExecution node:internal/bootstrap/pre_execution:22:36,0x2efc0801f10,~
code-source-info,0x2efc080545e,95,512,2458,C10O658C15O658C18O763C21O763C25O799C28O799C31O829C34O829C37O850C40O850C43O876C46O876C49O1084C52O1096C57O1100C63O1125C66O1133C77O1190C82O1194C87O1163C91O1154C95O1225C98O1225C101O1320C104O1320C107O1429C110O1429C113O1452C116O1452C119O1513C122O1513C125O1843C128O1843C131O1921C134O1921C137O2123C140O2123C143O2152C146O2152C149O2187C152O2187C155O2216C158O2216C161O2237C164O2237C167O2263C170O2263C173O2309C179O2309C184O2352C189O2370C195O2352C199O2401C202O2401C205O2426C208O2426C212O2457,,
code-creation,LazyCompile,10,124419,0x2efc080664e,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x12cf3bcbdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x2efc080664e,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,125549,0x2efc0808e86,397,patchProcessObject node:internal/bootstrap/pre_execution:81:28,0x2efc0801f60,~
code-source-info,0x2efc0808e
code-creation,LazyCompile,10,125675,0x2efc080931e,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0x12cf3bd8538,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x2efc080931e,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
code-creation,LazyCompile,10,126285,0x2efc080a3de,832,resolve node:path:158:10,0x10d2948d510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x2efc080a3de
code-creation,LazyCompile,10,128132,0x2efc080d9f6,30,validateString node:internal/validators:118:24,0x29c79fbc958,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x2efc080d9f6,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,128523,0x2efc080e396,17,isPathSeparator node:path:52:25,0x10d2948cf90,~
code-source-info,0x2efc080e396,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,128552,0x2efc080e496,35,isWindowsDeviceRoot node:path:60:29,0x10d2948d408,~
code-source-info,0x2efc080e496,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,128590,0x2efc080e5b6,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x29c79fbe030,~
script-source,93,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x2efc080e5b6,93,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,128839,0x2efc080ec1e,442,normalizeString node:path:66:25,0x10d2948d458,~
code-source-info,0x2efc080ec1e
code-creation,LazyCompile,10,128997,0x2efc080f33e,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:122:33,0x2efc0801fb0,~
code-source-info,0x2efc080f33e,95,4177,4412,C16O4230C21O4230C26O4257C28O4275C36O4305C43O4371C49O4390C56O4275C62O4411,,
code-creation,LazyCompile,10,129043,0x2efc080f4be,82,getOptionValue node:internal/options:39:24,0x2efc0804450,~
code-source-info,0x2efc080f4be,96,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,129079,0x2efc080f86e,33,getCLIOptionsFromBinding node:internal/options:18:34,0x2efc0804360,~
code-source-info,0x2efc080f86e,96,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,129349,0x2efc080f9ee,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:214:33,0x2efc0802258,~
code-source-info,0x2efc080f9ee,95,6737,6968,C0O6780C6O6780C11O6753C16O6853C22O6853C27O6824C32O6896C35O6921C40O6896C45O6967,,
code-creation,LazyCompile,10,129401,0x2efc080fb86,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0x12cf3bd8c58,~
code-source-info,0x2efc080fb86,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,129433,0x2efc080fd36,42,setupPerfHooks node:internal/bootstrap/pre_execution:220:24,0x2efc08022a8,~
code-source-info,0x2efc080fd36,95,6995,7118,C0O7003C6O7003C11O7039C16O7040C20O7064C26O7064C31O7094C36O7095C41O7117,,
code-creation,LazyCompile,10,129474,0x2efc080feb6,42,refreshTimeOrigin node:internal/perf/performance:178:27,0x2a5bc6ab760,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (type !== undefined) {\x0d\n    type = `${type}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x2efc080feb6,73,3932,4095,C0O3940C7O3961C10O3973C25O4060C28O4060C35O3940C41O4094,,
code-creation,LazyCompile,10,129748,0x2efc08105c6,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x10d294a2148,~
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x2efc08105c6,46,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,129837,0x2efc0810836,62,setupInspectorHooks node:internal/bootstrap/pre_execution:225:29,0x2efc08022f8,~
code-source-info,0x2efc0810836,95,7150,7716,C0O7499C6O7503C11O7528C17O7597C23O7597C28O7565C33O7580C38O7644C44O7644C49O7672C54O7673C61O7715,,
code-creation,Eval,10,129929,0x2efc0810be6,5, node:internal/inspector_async_hook:1:1,0x2efc0810a30,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x2efc0810be6,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,130019,0x2efc0810e06,79, node:internal/inspector_async_hook:1:1,0x2efc0810b60,~
code-source-info,0x2efc0810e06,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,130098,0x2efc081147e,69,setupWarningHandler node:internal/bootstrap/pre_execution:134:29,0x2efc0802000,~
code-source-info,0x2efc081147e,95,4444,4649,C0O4482C6O4482C11O4465C16O4522C24O4526C33O4571C38O4575C45O4592C50O4608C53O4616C61O4616C68O4648,,
code-creation,LazyCompile,10,130201,0x2efc08115de,20,addListener node:events:622:58,0x201f832b738,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventEmitter memory leak detected. ' +\x0d\n                          `${existing.length} ${String(type)} listeners ` +\x0d\n                          `added to ${inspect(target\x2C { depth: -1 })}. Use ` +\x0d\n                          'emitter.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.emitter = target;\x0d\n      w.type = type;\x0d\n      w.count = existing.length;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x2efc08115de,23,18981,19055,C0O19003C14O19010C19O19052,,
code-creation,LazyCompile,10,131431,0x2efc0813c7e,387,_addListener node:events:554:22,0x201f832b698,~
code-source-info,0x2efc0813c7e
code-creation,LazyCompile,10,131497,0x2efc0813fb6,15,checkListener node:events:257:23,0x201f832aff8,~
code-source-info,0x2efc0813fb6,23,7863,7921,C0O7879C8O7879C14O7920,,
code-creation,LazyCompile,10,131525,0x2efc08140a6,30, node:internal/validators:236:42,0x29c79fbcdf0,~
code-source-info,0x2efc08140a6,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,131618,0x2efc0814326,380,emit node:events:474:44,0x201f832b5d8,~
code-source-info,0x2efc
code-creation,LazyCompile,10,131734,0x2efc08146ce,172,startListeningIfSignal node:internal/process/signal:22:32,0x3dc127ff7a8,~
script-source,92,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x2efc08146ce,92,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,131826,0x2efc0814a8e,19,isSignal node:internal/process/signal:17:18,0x3dc127ff5f0,~
code-source-info,0x2efc0814a8e,92,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,131863,0x2efc0814c2e,75,setupDebugEnv node:internal/bootstrap/pre_execution:186:23,0x2efc0802168,~
code-source-info,0x2efc0814c2e,95,5959,6174,C0O5967C6O5967C11O6000C19O6028C24O6032C29O6001C34O6048C42O6052C48O6097C54O6097C59O6134C64O6147C69O6148C74O6173,,
code-creation,LazyCompile,10,131927,0x2efc0814fc6,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x201f8321680,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x2efc0814fc6,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
new,MemoryChunk,0x219c5040000,262144
code-creation,Function,11,132121,0x219c5043060,572,getOptionValue node:internal/options:39:24,0x2efc0804450,^
code-source-info,0x219c5043060,96,940,1190,,,
code-creation,Function,11,132140,0x219c5043300,216,isPathSeparator node:path:52:25,0x10d2948cf90,^
code-source-info,0x219c5043300,41,1794,1876,,,
code-creation,Function,11,132181,0x219c5043440,3076,normalizeString node:path:66:25,0x10d2948d458,^
code-source-info,0x219c5043440,41,2226,4212,,,
code-creation,LazyCompile,10,132225,0x2efc081590e,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:165:40,0x2efc08020a0,~
code-source-info,0x2efc081590e,95,5502,5696,C0O5510C8O5515C14O5556C15O5563C16O5599C22O5599C27O5580C32O5651C38O5685C43O5685C48O5695,,
code-creation,LazyCompile,10,132272,0x2efc0815b7e,62,initializeReport node:internal/bootstrap/pre_execution:175:26,0x2efc08020f0,~
code-source-info,0x2efc0815b7e,95,5725,5933,C0O5725C8O5752C16O5752C21O5741C27O5791C42O5812C47O5887C55O5791C61O5932,,
code-creation,Eval,10,132418,0x2efc08160ee,5, node:internal/process/report:1:1,0x2efc0815ef8,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x2efc08160ee,98,0,2666,C0O0C4O2666,,
code-creation,Function,10,132546,0x2efc0816bfe,306, node:internal/process/report:1:1,0x2efc0816068,~
code-source-info,0x2efc0816bfe,98,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,132705,0x2efc08188d6,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:194:40,0x2efc08021b8,~
code-source-info,0x2efc08188d6,95,6278,6378,C0O6315C6O6315C11O6294C16O6356C20O6377,,
code-creation,LazyCompile,10,132751,0x2efc0818a1e,57,addSignalHandler node:internal/process/report:98:26,0x2efc0816120,~
code-source-info,0x2efc0818a1e,98,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,132794,0x2efc0818fe6,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:200:46,0x2efc0802208,~
code-source-info,0x2efc0818fe6,95,6427,6701,C0O6427C8O6450C18O6450C23O6496C25O6514C26O6521C27O6527C35O6527C40O6557C45O6558C50O6619C58O6619C63O6597C69O6639C74O6647C79O6650C84O6647C91O6700,,
code-creation,LazyCompile,10,132845,0x2efc0819276,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:330:37,0x2efc08023d8,~
code-source-info,0x2efc0819276,95,10571,11117,C0O10579C3O10591C8O10595C14O10634C20O10634C25O10680C33O10703C38O10707C46O10680C52O10734C53O10744C57O10734C61O10828C64O10843C73O10904C76O10912C81O10916C90O10964C93O10979C102O11023C108O11023C113O11047C118O11048C124O11088C127O11103C132O11088C137O11116,,
code-creation,LazyCompile,10,132896,0x2efc0819406,21,assert node:internal/assert:11:16,0x201f8320658,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x2efc0819406,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,133363,0x2efc081a29e,5, node:child_process:1:1,0x2efc0819dc8,~
script-source,99,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      ex = new Error('Command failed: ' + cmd + '\\n' + stderr);\x0d\n      ex.killed = child.killed || killed;\x0d\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\x0d\n      ex.signal = signal;\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    err = new Error(msg);\x0d\n  }\x0d\n  if (err) {\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x2efc081a29e,99,0,25520,C0O0C4O25520,,
code-creation,Function,10,134310,0x2efc081acfe,748, node:child_process:1:1,0x2efc081a218,~
code-source-info,0x2efc081acfe
code-creation,LazyCompile,10,134493,0x2efc081d2e6,82,debuglog node:internal/util/debuglog:71:18,0x201f83219d0,~
code-source-info,0x2efc081d2e6,22,2302,3328,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3216C74O3169C79O3311C81O3325,,
tick,0x7ff70109ad66,134697,1,0x7ff700acd620,2,0x7ff7014160e0,0x106063bfecc,0x106063bf1bd,0x2efc081af42,0x106063bfeed,0x106063bf1bd,0x2efc08192e2,0x2efc08054de,0x106063bef45
code-creation,Eval,10,135586,0x2efc0820576,5, node:internal/child_process:1:1,0x2efc081fe78,~
script-source,100,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x2efc0820576,100,0,32650,C0O0C4O32650,,
code-creation,Function,10,137027,0x2efc0821b96,1265, node:internal/child_process:1:1,0x2efc08204f0,~
code-source-info,0x2efc0821b
code-creation,Function,10,137125,0x2efc082230e,35,<instance_members_initializer> node:internal/child_process:525:3,0x2efc0821258,~
code-source-info,0x2efc082230e,100,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
code-creation,Eval,10,138023,0x2efc082659e,5, node:net:1:1,0x2efc0825dc0,~
script-source,101,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  uvExceptionWithHostPort\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kSetNoDelay] = false;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const er = new Error('This socket has been ended by the other party');\x0d\n  er.code = 'EPIPE';\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C\x0d\n              enable ? this.setNoDelay : () => this.setNoDelay(enable));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  const newValue = enable === undefined ? true : !!enable;\x0d\n  if (this._handle.setNoDelay && newValue !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = newValue;\x0d\n    this._handle.setNoDelay(newValue);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(setting\x2C msecs) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C () => this.setKeepAlive(setting\x2C msecs));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive)\x0d\n    this._handle.setKeepAlive(setting\x2C ~~(msecs / 1000));\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x2efc082659e,101,0,49462,C0O0C4O49462,,
code-creation,Function,10,139749,0x2efc082946e,2513, node:net:1:1,0x2efc0826518,~
code-source-info,0x2efc082946e,101,0,49462,C0O0C411O1183C417O1200C423O1226C429O1238C435O1248C441O1259C447O1275C453O1294C459O1319C464O1344C469O1394C475O1394C479O1394C481O1429C487O1429C491O1429C493O1461C499O1461C504O1494C518O1495C524O1461C526O1628C532O1628C537O1553C543O1562C548O1573C553O1584C559O1609C565O1669C571O1669C575O1669C577O1758C580O1758C585O1709C591O1727C597O1741C603O1803C609O1803C614O1792C620O1851C623O1851C628O1831C634O1902C637O1902C642O1885C648O2002C651O2002C656O1946C662O1954C668O1984C674O2102C677O2102C682O2043C688O2052C694O2083C700O2238C706O2238C711O2144C717O2159C728O2201C734O2218C740O2448C746O2448C751O2283C757O2301C763O2318C769O2335C774O2356C780O2368C785O2385C790O2406C796O2418C802O2432C808O2844C814O2844C819O2844C824O2515C830O2548C836O2575C842O2603C848O2629C854O2658C860O2690C866O2719C872O2743C878O2770C884O2789C890O2815C896O2898C902O2898C907O2881C913O3061C919O3061C924O2942C930O2966C936O2987C942O3005C948O3024C954O3041C960O3122C963O3122C967O3122C969O3224C975O3224C980O3164C986O3197C992O3307C993O3307C995O3321C996O3321C998O3331C999O3331C1001O3347C1002O3347C1004O3390C1010O3390C1015O3373C1021O3431C1027O3431C1032O3418C1038O3488C1040O3488C1042O3526C1044O3526C1046O3553C1049O3561C1056O3570C1059O3553C1061O3599C1065O3599C1067O7199C1070O7199C1074O7199C1076O7244C1079O7244C1083O7244C1085O7290C1088O7290C1092O7290C1094O11513C1097O11541C1105O11559C1110O11566C1115O11513C1120O11579C1126O11615C1131O11579C1136O11658C1139O11665C1148O11687C1152O11923C1155O11930C1164O11947C1168O13550C1171O13557C1178O13578C1182O13603C1185O13610C1194O13631C1198O14159C1201O14166C1210O14187C1214O14660C1217O14667C1226O14690C1230O14956C1233O14963C1242O14981C1246O15036C1252O15064C1266O15100C1274O15036C1279O15155C1285O15183C1299O15210C1307O15155C1312O15302C1318O15330C1332O15365C1340O15302C1345O15702C1351O15730C1365O15765C1373O15702C1378O15858C1384O15886C1389O15897C1395O15921C1406O15858C1411O16302C1414O16309C1423O16325C1427O16572C1430O16579C1439O16593C1443O16794C1446O16801C1455O16817C1459O17171C1462O17178C1471O17195C1475O17394C1478O17401C1487O17416C1491O17770C1494O17777C1503O17799C1507O17963C1510O17970C1519O17989C1523O18988C1526O18995C1535O19018C1539O19498C1547O19498C1552O19622C1560O19622C1565O19725C1573O19725C1578O19825C1586O19825C1596O19921C1599O19928C1608O19951C1616O20245C1624O20245C1634O20348C1642O20348C1652O20442C1655O20449C1660O20459C1664O20477C1672O20533C1675O20540C1684O20564C1692O21363C1695O21370C1704O21388C1712O21467C1715O21474C1724O21491C1732O21742C1740O21742C1750O21886C1758O21886C1768O25478C1771O25485C1780O25503C1788O30058C1791O30065C1800O30079C1808O30286C1811O30293C1820O30309C1828O33157C1831O33185C1843O33209C1852O33157C1862O33222C1868O33222C1878O37343C1881O37350C1892O37369C1900O38873C1903O38880C1916O38897C1924O42966C1930O42994C1951O43028C1963O42966C1973O43126C1976O43133C1989O43151C1997O44273C2000O44280C2013O44305C2021O45102C2024O45109C2037O45125C2045O46036C2048O46043C2061O46073C2069O46573C2072O46580C2084O46603C2097O46627C2105O46960C2111O46985C2132O47010C2144O47051C2156O46960C2166O47101C2172O47129C2189O47156C2201O47192C2213O47101C2223O47237C2226O47244C2239O47267C2247O47522C2250O47529C2263O47543C2271O47655C2274O47662C2287O47678C2295O47795C2297O47851C2298O47851C2300O47860C2311O47884C2312O47884C2314O47910C2323O48640C2328O48922C2338O48965C2348O49004C2358O49022C2368O49290C2378O49320C2388O49332C2398O49355C2408O49372C2418O49391C2428O49402C2438O49413C2448O49432C2503O48937C2512O49461,,
code-creation,Eval,10,140175,0x2efc082ec3e,5, node:internal/net:1:1,0x2efc082ea78,~
script-source,102,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x2efc082ec3e,102,0,1818,C0O0C4O1818,,
code-creation,Function,10,140262,0x2efc082f02e,617, node:internal/net:1:1,0x2efc082ebb8,~
code-source-info,0x2efc082f02e,102,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,140486,0x2efc0830986,5, node:internal/dtrace:1:1,0x2efc0830840,~
script-source,103,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x2efc0830986,103,0,589,C0O0C4O589,,
code-creation,Function,10,140529,0x2efc0830e5e,140, node:internal/dtrace:1:1,0x2efc0830900,~
code-source-info,0x2efc0830e5e,103,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,140727,0x2efc0831df6,34,protoGetter node:net:718:21,0x2efc08269e0,~
code-source-info,0x2efc0831df6,101,19348,19494,C0O19370C8O19398C13O19409C20O19476C27O19370C33O19493,,
code-creation,Eval,10,141443,0x2efc0837106,5, node:dgram:1:1,0x2efc0836ba0,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x2efc0837106,104,0,28325,C0O0C4O28325,,
code-creation,Function,10,142744,0x2efc0839016,1501, node:dgram:1:1,0x2efc0837080,~
code-source-info,0x2efc0839016,104,0,28325,C0O0C270O1183C276O1193C282O1210C288O1233C294O1259C300O1285C305O1310C310O1335C316O1385C322O1385C327O1482C333O1482C338O1425C344O1442C349O1466C355O1538C358O1538C363O1518C369O1871C374O1575C380O1604C386O1629C392O1650C398O1679C404O1710C410O1737C416O1771C422O1806C428O1839C434O1983C440O1983C445O1890C451O1902C457O1926C463O1945C469O1964C475O2035C481O2035C486O2024C492O2077C498O2077C503O2063C508O2134C514O2134C519O2112C525O2188C531O2188C535O2188C537O2298C543O2298C548O2219C559O2261C565O2278C571O2361C574O2361C579O2389C584O2340C590O2465C593O2465C598O2465C603O2421C609O2443C614O2451C620O2524C621O2524C623O2555C625O2555C627O2584C629O2584C631O2625C632O2625C634O2662C636O2662C638O2698C640O2698C642O2724C643O2724C645O2751C646O2751C648O2794C649O2794C651O2935C655O2928C657O2989C661O2982C663O4363C666O4391C674O4415C679O4363C684O4428C690O4428C695O6263C698O6270C707O6285C711O9872C714O9879C723O9897C727O11768C730O11775C739O11796C743O12198C746O12205C755O12222C759O15370C762O15377C771O15392C775O19825C778O19832C787O19848C791O20509C794O20516C803O20534C807O20741C810O20748C819O20772C823O21104C826O21111C835O21134C839O21296C842O21303C851O21320C855O21512C858O21519C867O21545C871O21755C874O21762C883O21793C887O22009C890O22016C899O22048C903O22325C906O22332C915O22356C919O22752C922O22759C931O22784C935O23181C938O23188C947O23226C951O23857C954O23864C963O23903C967O25159C970O25166C979O25180C983O25303C986O25310C995O25326C999O25451C1002O25458C1011O25486C1015O25554C1018O25561C1027O25589C1031O25657C1034O25664C1043O25692C1047O25760C1050O25767C1059O25795C1063O25892C1066O25920C1079O25952C1090O25952C1099O26082C1110O26082C1119O25892C1124O26215C1127O26243C1140O26278C1151O26278C1160O26414C1171O26414C1180O26215C1185O26553C1188O26581C1201O26616C1212O26616C1221O26752C1232O26752C1241O26553C1246O26891C1249O26919C1262O26950C1273O26950C1282O27078C1293O27078C1302O26891C1307O27209C1310O27237C1323O27272C1334O27272C1343O27408C1354O27408C1363O27209C1368O27547C1371O27554C1376O27579C1387O27579C1392O27577C1396O27694C1399O27701C1404O27728C1415O27728C1420O27726C1424O28024C1437O28049C1445O28090C1453O27999C1458O28142C1472O28185C1483O28296C1489O28313C1495O28157C1500O28324,,
code-creation,Eval,10,143070,0x2efc083c41e,5, node:internal/dgram:1:1,0x2efc083c218,~
script-source,105,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x2efc083c41e,105,0,1941,C0O0C4O1941,,
code-creation,Function,10,143168,0x2efc083c6e6,196, node:internal/dgram:1:1,0x2efc083c398,~
code-source-info,0x2efc083c6e6,105,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
new,MemoryChunk,0x2eb68240000,262144
code-creation,LazyCompile,10,143394,0x2efc083efb6,152,deprecate node:internal/util:96:19,0x201f83057f8,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x0d\n};\x0d\n
code-source-info,0x2efc083efb6,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,Function,11,143996,0x219c50440c0,1344,deprecate node:internal/util:96:19,0x201f83057f8,^
code-source-info,0x219c50440c0,16,2503,3720,,,
code-creation,Function,11,144020,0x219c5044660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x29c79f8fd30,^
code-source-info,0x219c5044660,9,10647,11000,,,
code-creation,Function,11,144043,0x219c5044960,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x29c79f8fc60,^
code-source-info,0x219c5044960,9,9827,10410,,,
code-creation,Function,11,144063,0x219c5044ec0,548,internalBinding node:internal/bootstrap/loaders:164:45,0x29c79f8f7b0,^
code-source-info,0x219c5044ec0,9,5278,5523,,,
code-creation,Eval,10,144253,0x2eb68243896,5, node:internal/socket_list:1:1,0x2eb68243740,~
script-source,106,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x2eb68243896,106,0,2813,C0O0C4O2813,,
code-creation,Function,10,144375,0x2eb68243ed6,126, node:internal/socket_list:1:1,0x2eb68243810,~
code-source-info,0x2eb68243ed6,106,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,144558,0x2eb68244896,14,customPromiseExecFunction node:child_process:230:35,0x2efc081a880,~
code-source-info,0x2eb68244896,99,6792,7172,C0O6792C9O6807C13O7169,,
code-creation,LazyCompile,10,144629,0x2eb682468ce,129,_forkChild node:child_process:169:20,0x2efc081a320,~
code-source-info,0x2eb682468ce,99,5047,5529,C0O5047C8O5111C19O5120C22O5134C29O5111C35O5145C40O5145C45O5160C50O5160C54O5188C72O5188C77O5188C79O5236C84O5244C97O5244C103O5379C108O5387C121O5387C128O5528,,
code-creation,LazyCompile,10,149311,0x2eb682472ce,396,setupChannel node:internal/child_process:571:22,0x2efc0820828,~
code-source-info,0x2eb682472ce
code-creation,LazyCompile,10,149412,0x2eb68249aa6,72,Control node:internal/child_process:529:14,0x2efc0821060,~
code-source-info,0x2eb68249aa6,100,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,149445,0x2eb68249bde,21,EventEmitter node:events:207:22,0x201f832aeb0,~
code-source-info,0x2eb68249bde,23,6453,6503,C0O6465C3O6478C8O6483C13O6483C20O6502,,
code-creation,LazyCompile,10,149495,0x2eb68249d26,149,EventEmitter.init node:events:326:29,0x201f832b2a8,~
code-source-info,0x2eb68249d26,23,9985,10593,C0O10008C6O10045C13O10057C16O10057C21O10083C25O10053C30O10100C32O10115C37O10115C41O10113C45O10140C46O10158C50O10199C60O10192C64O10234C71O10242C80O10270C85O10291C93O10270C98O10345C100O10350C105O10362C108O10375C113O10362C117O10360C123O10535C125O10540C131O10565C138O10575C140O10574C143O10550C148O10592,,
tick,0x7ff70142b5f3,149709,1,0x7ff700acd620,2,0x7ff7014160e0,0x219c5044b9b,0x219c50448e5,0x2eb68247394,0x2eb68246916,0x2efc08192ec,0x2efc08054de,0x106063bef45
code-creation,Eval,10,149780,0x2eb6824a5ae,5, node:internal/child_process/serialization:1:1,0x2eb6824a2c8,~
script-source,107,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x2eb6824a5ae,107,0,4335,C0O0C4O4335,,
code-creation,Function,10,150005,0x2eb6824ae16,369, node:internal/child_process/serialization:1:1,0x2eb6824a528,~
code-source-info,0x2eb6824ae16,107,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,150170,0x2eb6824bac6,23,initMessageChannel node:internal/child_process/serialization:100:21,0x2eb6824a810,~
code-source-info,0x2eb6824bac6,107,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,150250,0x2eb6824c11e,19,_getMaxListeners node:events:403:26,0x201f832b478,~
code-source-info,0x2eb6824c11e,23,12251,12379,C0O12272C6O12306C9O12326C13O12346C14O12362C18O12376,,
code-creation,LazyCompile,10,150284,0x2eb6824c216,5,get node:events:263:16,0x201f832b098,~
code-source-info,0x2eb6824c216,23,8022,8064,C0O8032C4O8059,,
code-creation,LazyCompile,10,150345,0x2eb6824c576,322,arrayClone node:events:883:20,0x201f832bd40,~
code-source-info,0x2eb6824c576,23,26206,26671,C0O26348C42O26371C50O26382C62O26390C71O26395C72O26409C80O26420C92O26428C104O26436C113O26441C114O26455C122O26466C134O26474C146O26482C158O26490C167O26495C168O26509C176O26520C188O26528C200O26536C212O26544C224O26552C233O26557C234O26571C242O26582C254O26590C266O26598C278O26606C290O26614C302O26622C311O26627C312O26636C317O26643C321O26668,,
code-creation,LazyCompile,10,150422,0x2eb6824c846,22, node:internal/child_process:706:36,0x2eb68246de8,~
code-source-info,0x2eb6824c846,100,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
code-creation,LazyCompile,10,150520,0x2eb6824cae6,368,nextTick node:internal/process/task_queues:104:18,0x12cf3bda9f0,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x2eb6824cae
code-creation,LazyCompile,10,150843,0x2eb6824d356,21, node:internal/validators:222:42,0x29c79fbcd50,~
code-source-info,0x2eb6824d356,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,150885,0x2eb6824d456,15,isEmpty node:internal/fixed_queue:95:10,0x12cf3bdfc20,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x2eb6824d456,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,151106,0x2eb6824d90e,13,isEmpty node:internal/fixed_queue:67:10,0x12cf3bdf9b0,~
code-source-info,0x2eb6824d90e,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,151137,0x2eb6824d9fe,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x12cf3bda900,~
code-source-info,0x2eb6824d9fe,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,151203,0x2eb6824daf6,23,newAsyncId node:internal/async_hooks:417:20,0x29c79fb8320,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x2eb6824daf6,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
code-creation,LazyCompile,10,152164,0x2eb6824efd6,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x29c79fb83c0,~
code-source-info,0x2eb6824efd6,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,152208,0x2eb6824f0e6,13,initHooksExist node:internal/async_hooks:479:24,0x29c79fb85b0,~
code-source-info,0x2eb6824f0e6,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
code-creation,LazyCompile,10,152237,0x2eb6824f1ce,16,hasHooks node:internal/async_hooks:471:18,0x29c79fb8510,~
code-source-info,0x2eb6824f1ce,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,152273,0x2eb6824f2de,59,push node:internal/fixed_queue:99:7,0x12cf3bdfc70,~
code-source-info,0x2eb6824f2de,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,152301,0x2eb6824f426,24,isFull node:internal/fixed_queue:71:9,0x12cf3bdfa00,~
code-source-info,0x2eb6824f426,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,152327,0x2eb6824f536,37,push node:internal/fixed_queue:75:7,0x12cf3bdfa68,~
code-source-info,0x2eb6824f536,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,152376,0x2eb6824f656,30,onNewListener node:child_process:175:51,0x2eb68246788,~
code-source-info,0x2eb6824f656,99,5284,5373,C0O5298C2O5307C9O5329C14O5347C19O5355C24O5355C29O5372,,
code-creation,LazyCompile,10,152471,0x2eb6824f9a6,455,initializePolicy node:internal/bootstrap/pre_execution:358:26,0x2efc0802478,~
code-source-info,0x2eb6824f9a
code-creation,LazyCompile,10,152546,0x2eb6824fd76,63,initializeClusterIPC node:internal/bootstrap/pre_execution:349:30,0x2efc0802428,~
code-source-info,0x2eb6824fd76,95,11150,11398,C0O11158C3O11170C10O11174C18O11189C23O11193C29O11232C35O11232C40O11265C45O11265C49O11356C52O11371C62O11397,,
code-creation,LazyCompile,10,152587,0x2eb6824fee6,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:453:38,0x2efc08025b8,~
code-source-info,0x2eb6824fee6,95,15053,15206,C0O15099C6O15099C11O15069C16O15151C21O15180C26O15205,,
code-creation,Eval,10,152769,0x2eb6825081e,5, node:internal/source_map/source_map_cache:1:1,0x2eb682504b8,~
script-source,108,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err.stack);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err.stack);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x2eb6825081e,108,0,7905,C0O0C4O7905,,
code-creation,Function,10,153045,0x2eb68250e96,435, node:internal/source_map/source_map_cache:1:1,0x2eb68250798,~
code-source-info,0x2eb68250e96,108,0,7905,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7762C399O7784C405O7802C411O7827C417O7852C423O7876C429O7777C434O7904,,
code-creation,Eval,10,153223,0x2eb68251ed6,5, node:internal/util/iterable_weak_map:1:1,0x2eb68251c88,~
script-source,109,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x2eb68251ed6,109,0,2042,C0O0C4O2042,,
code-creation,Function,10,153318,0x2eb68252636,196, node:internal/util/iterable_weak_map:1:1,0x2eb68251e50,~
code-source-info,0x2eb68252636,109,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,153335,0x2eb682527b6,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x2eb68252160,~
code-source-info,0x2eb682527b6,109,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,153559,0x2eb682533ee,5, node:internal/modules/cjs/helpers:1:1,0x2eb68253138,~
script-source,110,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x2eb682533ee,110,0,6975,C0O0C4O6975,,
code-creation,Function,10,153810,0x2eb6825396e,536, node:internal/modules/cjs/helpers:1:1,0x2eb68253368,~
code-source-info,0x2eb6825396e,110,0,6975,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6806C488O6828C494O6855C500O6873C506O6890C512O6911C518O6935C524O6960C530O6821C535O6974,,
code-creation,LazyCompile,10,153941,0x2eb682545ae,27,SafeSet node:internal/per_context/primordials:364:16,0x29c79f8a1a0,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(global[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x2eb682545ae,6,10890,10907,C3O10896C7O10902C11O10896C26O10906,,
code-creation,LazyCompile,10,154370,0x2eb682553ee,27,SafeMap node:internal/per_context/primordials:351:16,0x29c79f8a018,~
code-source-info,0x2eb682553ee,6,10550,10567,C3O10556C7O10562C11O10556C26O10566,,
code-creation,LazyCompile,10,154410,0x2eb68255586,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x2eb68251f58,~
code-source-info,0x2eb68255586,109,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,154436,0x2eb6825590e,27,SafeWeakMap node:internal/per_context/primordials:357:16,0x29c79f8a0d8,~
code-source-info,0x2eb6825590e,6,10727,10744,C3O10733C7O10739C11O10733C26O10743,,
code-creation,LazyCompile,10,154463,0x2eb68255a16,27,SafeFinalizationRegistry node:internal/per_context/primordials:378:16,0x29c79f8a328,~
code-source-info,0x2eb68255a16,6,11354,11399,C3O11374C7O11380C11O11374C26O11398,,
code-creation,LazyCompile,10,154571,0x2eb682561b6,492,initializeDeprecations node:internal/bootstrap/pre_execution:243:32,0x2efc0802348,~
code-source-info,0x2eb682561b
code-creation,LazyCompile,10,154662,0x2eb6825670e,53,initializeWASI node:internal/bootstrap/pre_execution:407:24,0x2efc08024c8,~
code-source-info,0x2eb6825670e,95,13299,13510,C0O13332C6O13332C11O13315C16O13399C21O13403C29O13403C35O13419C37O13451C43O13451C47O13444C52O13509,,
code-creation,LazyCompile,10,154708,0x2eb6825690e,66,initializeCJSLoader node:internal/bootstrap/pre_execution:414:29,0x2efc0802518,~
code-source-info,0x2eb6825690e,95,13542,13865,C0O13568C6O13568C11O13611C16O13616C20O13636C26O13675C31O13682C36O13682C40O13781C51O13803C56O13839C60O13796C65O13864,,
code-creation,Eval,10,155418,0x2eb68258876,5, node:internal/modules/cjs/loader:1:1,0x2eb68257f90,~
script-source,111,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x2eb68258876,111,0,41663,C0O0C4O41663,,
code-creation,Function,10,157265,0x2eb6825a616,2547, node:internal/modules/cjs/loader:1:1,0x2eb682587f0,~
code-source-info,0x2eb6825a
code-creation,Eval,10,157633,0x2eb6825e5c6,5, node:internal/modules/package_json_reader:1:1,0x2eb6825e420,~
script-source,112,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x2eb6825e5c6,112,0,1024,C0O0C4O1024,,
code-creation,Function,10,157709,0x2eb6825e716,113, node:internal/modules/package_json_reader:1:1,0x2eb6825e540,~
code-source-info,0x2eb6825e716,112,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,157854,0x2eb6825efae,5, node:internal/process/esm_loader:1:1,0x2eb6825edb8,~
script-source,113,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x2eb6825efae,113,0,2982,C0O0C4O2982,,
code-creation,Function,10,157971,0x2eb6825f24e,182, node:internal/process/esm_loader:1:1,0x2eb6825ef28,~
code-source-info,0x2eb6825f24e,113,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,158310,0x2eb682604be,5, node:internal/modules/esm/loader:1:1,0x2eb68260050,~
script-source,114,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C url\x2C importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const { format: finalFormat\x2C source } = await this.load(\x0d\n        url\x2C { format\x2C importAssertions });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n        url\x2C\x0d\n        dataUrl ? `has an unsupported MIME type "${dataUrl[1]}"` : ''\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(originalSpecifier\x2C parentURL\x2C\x0d\n                importAssertions = ObjectCreate(null)) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') { // non-strings can be coerced to a url string\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    new URL(url); // Intentionally trigger error if `url` is invalid\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x2eb682604be,114,0,17034,C0O0C4O17034,,
code-creation,Function,10,158924,0x2eb68260d06,624, node:internal/modules/esm/loader:1:1,0x2eb68260438,~
code-source-info,0x2eb68260d06,114,0,17034,C0O0C116O82C122O82C126O136C132O146C138O163C144O186C150O209C156O235C162O261C168O278C174O295C179O320C185O335C191O359C197O381C203O397C209O455C215O455C220O436C226O682C232O682C237O708C242O500C248O525C254O551C260O584C266O622C272O651C278O763C284O763C289O725C295O740C301O755C307O845C313O845C318O800C324O821C330O896C336O896C340O896C342O959C348O959C352O959C354O1061C360O1061C365O1017C371O1036C377O1140C383O1140C388O1114C394O1221C400O1221C405O1205C411O1284C417O1284C422O1268C428O1361C434O1361C439O1342C604O16981C611O16950C616O17002C618O17020C623O17033,,
code-creation,Function,10,158968,0x2eb6826117e,154,<instance_members_initializer> node:internal/modules/esm/loader:64:3,0x2eb68260860,~
code-source-info,0x2eb6826117e,114,1844,2727,C3O1864C17O2026C28O2033C45O2215C56O2222C73O2274C88O2373C95O2373C109O2496C119O2588C126O2588C140O2716C153O2727,,
code-creation,Eval,10,159168,0x2eb682629a6,5, node:internal/modules/esm/module_map:1:1,0x2eb682627b8,~
script-source,115,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x2eb682629a6,115,0,1487,C0O0C4O1487,,
code-creation,Function,10,159237,0x2eb68262dde,175, node:internal/modules/esm/module_map:1:1,0x2eb68262920,~
code-source-info,0x2eb68262dde,115,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,159456,0x2eb68263886,5, node:internal/modules/esm/module_job:1:1,0x2eb68263590,~
script-source,116,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x2eb68263886,116,0,8407,C0O0C4O8407,,
code-creation,Function,10,159756,0x2eb68263d7e,343, node:internal/modules/esm/module_job:1:1,0x2eb68263800,~
code-source-info,0x2eb68263d7e,116,0,8407,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8359C330O8328C335O8378C337O8393C342O8406,,
code-creation,Eval,10,159948,0x2eb682659ce,5, node:internal/modules/esm/assert:1:1,0x2eb682657d8,~
script-source,117,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x2eb682659ce,117,0,3734,C0O0C4O3734,,
code-creation,Function,10,160109,0x2eb68265ca6,201, node:internal/modules/esm/assert:1:1,0x2eb68265948,~
code-source-info,0x2eb68265ca6,117,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,160193,0x2eb682662b6,9, node:internal/modules/esm/assert:43:3,0x2eb68265aa0,~
code-source-info,0x2eb682662b6,117,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,160816,0x2eb68267cd6,5, node:internal/modules/esm/resolve:1:1,0x2eb682675b0,~
script-source,118,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   exports?: ExportConfig;\x0d\n *   name?: string;\x0d\n *   main?: string;\x0d\n *   type?: PackageType;\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap();  /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  const path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n    if (file !== undefined) return file;\x0d\n    if (!StringPrototypeEndsWith(path\x2C '/')) {\x0d\n      file = resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n      if (file !== undefined) return file;\x0d\n    } else {\x0d\n      return resolveDirectoryEntry(resolved) || resolved;\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0)\x0d\n      return null;\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET')\x0d\n          continue;\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined)\x0d\n        continue;\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag)\x0d\n      throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    url: `${url}`\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n
code-source-info,0x2eb68267cd6,118,0,37756,C0O0C4O37756,,
code-creation,Function,10,162138,0x2eb68268cde,1110, node:internal/modules/esm/resolve:1:1,0x2eb68267c50,~
code-source-info,0x2eb68268cde
code-creation,Eval,10,162458,0x2eb6826c0ee,5, node:internal/modules/esm/get_format:1:1,0x2eb6826bea8,~
script-source,119,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { extname } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst experimentalJsonModules = getOptionValue('--experimental-json-modules');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\nconst { getPackageType } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.mjs': 'module'\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x0d\n};\x0d\n\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n\x0d\nif (experimentalWasmModules)\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n\x0d\nif (experimentalJsonModules)\x0d\n  extensionFormatMap['.json'] = legacyExtensionFormatMap['.json'] = 'json';\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:'(parsed) {\x0d\n    const { 1: mime } = RegExpPrototypeExec(\x0d\n      /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n      parsed.pathname\x2C\x0d\n    ) || [\x2C null]; // eslint-disable-line no-sparse-arrays\x0d\n    const format = ({\x0d\n      '__proto__': null\x2C\x0d\n      'text/javascript': 'module'\x2C\x0d\n      'application/json': experimentalJsonModules ? 'json' : null\x2C\x0d\n      'application/wasm': experimentalWasmModules ? 'wasm' : null\x0d\n    })[mime] || null;\x0d\n\x0d\n    return format;\x0d\n  }\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  if (\x0d\n    experimentalSpecifierResolution === 'node' &&\x0d\n    !experimentalSpecifierResolutionWarned\x0d\n  ) {\x0d\n    process.emitWarning(\x0d\n      'The Node.js specifier resolution in ESM is experimental.'\x2C\x0d\n      'ExperimentalWarning');\x0d\n    experimentalSpecifierResolutionWarned = true;\x0d\n  }\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nfunction getFileProtocolModuleFormat(url\x2C ignoreErrors) {\x0d\n  const ext = extname(url.pathname);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors)\x0d\n      return undefined;\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C fileURLToPath(url));\x0d\n  }\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C true);\x0d\n}\x0d\n\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x2eb6826c0ee,119,0,3433,C0O0C4O3433,,
code-creation,Function,10,162610,0x2eb6826c5e6,340, node:internal/modules/esm/get_format:1:1,0x2eb6826c068,~
code-source-info,0x2eb6826c5e6,119,0,3433,C0O0C72O26C77O43C82O60C88O94C94O154C97O154C102O142C108O199C111O199C116O180C121O263C124O263C128O263C130O354C133O354C137O354C139O442C142O442C146O442C148O517C151O517C156O498C162O590C165O590C170O567C176O572C182O655C185O655C190O681C195O624C201O719C205O719C207O846C211O846C213O1034C214O1034C216O1044C220O1076C229O1140C235O1104C239O1153C243O1185C252O1249C258O1213C262O1287C264O1300C274O1325C284O1804C288O1836C296O1287C301O1287C303O3302C310O3324C316O3345C322O3379C328O3402C334O3317C339O3432,,
code-creation,Eval,10,162774,0x2eb6826cfee,5, node:internal/modules/esm/initialize_import_meta:1:1,0x2eb6826ce58,~
script-source,120,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\ngetOptionValue('--experimental-import-meta-resolve');\x0d\nconst { PromisePrototypeThen\x2C PromiseReject } = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  const url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve)\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x2eb6826cfee,120,0,932,C0O0C4O932,,
code-creation,Function,10,162846,0x2eb6826d1b6,90, node:internal/modules/esm/initialize_import_meta:1:1,0x2eb6826cf68,~
code-source-info,0x2eb6826d1b6,120,0,932,C0O0C28O44C31O44C36O25C41O113C44O113C48O113C50O176C56O198C62O247C65O247C69O247C71O884C78O906C84O899C89O931,,
code-creation,Eval,10,162943,0x2eb6826d676,5, node:internal/modules/esm/load:1:1,0x2eb6826d500,~
script-source,121,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n  const { importAssertions } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = defaultGetFormat(url);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C { format });\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x2eb6826d676,121,0,891,C0O0C4O891,,
code-creation,Function,10,162996,0x2eb6826d7be,80, node:internal/modules/esm/load:1:1,0x2eb6826d5f0,~
code-source-info,0x2eb6826d7be,121,0,891,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O851C68O873C74O866C79O890,,
code-creation,Eval,10,163142,0x2eb6826dd7e,5, node:internal/modules/esm/get_source:1:1,0x2eb6826dba8,~
script-source,122,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_INVALID_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C { format } = {}\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = Buffer.from(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else {\x0d\n    throw new ERR_INVALID_URL_SCHEME(['file'\x2C 'data']);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x2eb6826dd7e,122,0,1394,C0O0C4O1394,,
code-creation,Function,10,163211,0x2eb6826deee,169, node:internal/modules/esm/get_source:1:1,0x2eb6826dcf8,~
code-source-info,0x2eb6826deee,122,0,1394,C0O0C37O28C43O52C49O118C52O118C57O99C62O215C65O215C74O260C81O215C83O328C86O328C91O317C97O361C100O361C105O392C110O419C113O419C118O411C124O505C127O505C132O531C137O456C143O476C149O565C153O562C155O603C159O603C161O1348C163O1373C168O1393,,
code-creation,Eval,10,163776,0x2eb6826f236,5, node:internal/fs/promises:1:1,0x2eb6826ea98,~
script-source,123,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    if (bufferOrOptions === undefined) {\x0d\n      bufferOrOptions = {};\x0d\n    }\x0d\n    if (bufferOrOptions.buffer) {\x0d\n      buffer = bufferOrOptions.buffer;\x0d\n      validateBuffer(buffer);\x0d\n    } else {\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n    offset = bufferOrOptions.offset || 0;\x0d\n    length = bufferOrOptions.length ?? buffer.byteLength;\x0d\n    position = bufferOrOptions.position ?? null;\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x2eb6826f236,123,0,23741,C0O0C4O23741,,
code-creation,Function,10,164660,0x2eb6827196e,1659, node:internal/fs/promises:1:1,0x2eb6826f1b0,~
code-source-info,0x2eb6827196e
tick,0x7ff7019efeb7,165229,1,0x7ff700acd620,3,0x7ff7014160e0,0x219c5044b9b,0x219c50448e5,0x2eb6826df52,0x219c5044c63,0x219c50448e5,0x2eb6826d7e2,0x219c5044c63,0x219c50448e5,0x2eb68260e96,0x219c5044c63,0x219c50448e5,0x2eb6825f29c,0x219c5044c63,0x219c50448e5,0x2eb6825aac1,0x219c5044c63,0x219c50448e5,0x2eb68256914,0x2efc0805502,0x106063bef45
code-creation,Function,10,165283,0x2eb6827231e,27,<instance_members_initializer> node:internal/fs/promises:189:3,0x2eb68270810,~
code-source-info,0x2eb6827231e,123,4390,5219,C0O4390C12O4398C26O5219,,
code-creation,Eval,10,165681,0x2eb68274dbe,5, node:internal/fs/rimraf:1:1,0x2eb68274a58,~
script-source,124,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x2eb68274dbe,124,0,7392,C0O0C4O7392,,
code-creation,Function,10,166129,0x2eb682753be,409, node:internal/fs/rimraf:1:1,0x2eb68274d38,~
code-source-info,0x2eb682753be,124,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,166371,0x2eb68276256,188,from node:buffer:296:28,0x201f8336c40,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error(`Unable to transcode Buffer [${code}]`);\x0d\n    err.code = code;\x0d\n    err.errno = result;\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2eb68276256,24,8723,9706,C3O8762C9O8798C12O8805C17O8841C18O8847C28O8903C33O8907C39O8939C51O8946C56O8995C57O9025C63O9042C68O9042C73O9058C78O9098C95O9191C104O9198C109O9238C110O9263C113O9263C118O9287C120O9301C122O9310C123O9318C125O9335C127O9334C134O9397C136O9403C138O9402C145O9421C151O9440C155O9486C158O9493C163O9533C164O9560C182O9566C187O9560,,
code-creation,LazyCompile,10,167880,0x2eb68278c66,110,fromString node:buffer:432:20,0x201f8337028,~
code-source-info,0x2eb68278c66,24,12910,13359,C0O12938C2O12946C8O12991C14O12998C19O13023C25O13030C30O13044C35O13051C40O13068C41O13074C46O13092C51O13103C56O13142C59O13148C64O13179C66O13209C73O13215C78O13209C79O13267C85O13274C90O13288C95O13295C100O13312C101O13321C104O13328C109O13356,,
code-creation,LazyCompile,10,167944,0x2eb68278e1e,177,fromStringFast node:buffer:413:24,0x201f8336f88,~
code-source-info,0x2eb68278e1e,24,12347,12887,C0O12385C5O12385C11O12410C14O12432C18O12441C21O12421C26O12454C31O12490C36O12461C41O12503C42O12509C44O12523C49O12534C51O12532C54O12520C59O12552C62O12552C65O12577C72O12592C77O12603C85O12577C91O12646C110O12646C116O12678C118O12689C123O12775C130O12794C135O12805C143O12779C149O12834C156O12848C162O12845C168O12859C171O12859C174O12875C176O12884,,
code-creation,LazyCompile,10,167993,0x2eb6827900e,36,FastBuffer node:internal/buffer:958:14,0x12cf3bcbb00,~
code-source-info,0x2eb6827900e,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,168020,0x2eb6827910e,23,write node:buffer:593:12,0x201f8337398,~
code-source-info,0x2eb6827910e,24,17139,17203,C0O17173C17O17173C22O17203,,
code-creation,LazyCompile,10,168052,0x2eb682791fe,42,alignPool node:buffer:159:19,0x201f83369c0,~
code-source-info,0x2eb682791fe,24,4178,4288,C0O4214C4O4229C9O4243C19O4254C25O4267C34O4277C41O4287,,
code-creation,LazyCompile,10,168147,0x2eb682795be,251,promisify node:internal/util:324:19,0x201f8305f48,~
code-source-info,0x2eb682795be,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,168280,0x2eb68279b4e,65,EventEmitterMixin node:internal/event_target:966:27,0x10d2949e3a8,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x2eb68279b4e,44,26757,27191,C0O26810C23O27001C30O27033C33O27046C38O27001C43O27061C47O27095C52O27136C57O27095C62O27163C64O27188,,
code-creation,Eval,10,169564,0x2eb6827c876,5, node:internal/modules/esm/translators:1:1,0x2eb6827c410,~
script-source,125,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x2eb6827c876,125,0,11025,C0O0C4O11025,,
code-creation,Function,10,169934,0x2eb6827d016,715, node:internal/modules/esm/translators:1:1,0x2eb6827c7f0,~
code-source-info,0x2eb6827d
code-creation,Eval,10,170128,0x2eb6827e50e,5, node:internal/modules/esm/create_dynamic_module:1:1,0x2eb6827e338,~
script-source,126,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x2eb6827e50e,126,0,1828,C0O0C4O1828,,
code-creation,Function,10,170213,0x2eb6827e736,111, node:internal/modules/esm/create_dynamic_module:1:1,0x2eb6827e488,~
code-source-info,0x2eb6827e736,126,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
new,MemoryChunk,0x2b718d00000,262144
code-creation,Eval,10,170585,0x2eb6827f66e,5, node:internal/vm/module:1:1,0x2eb6827f128,~
script-source,127,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x2eb6827f66e,127,0,12768,C0O0C4O12768,,
code-creation,Function,10,171190,0x2efc083fa66,872, node:internal/vm/module:1:1,0x2eb6827f5e8,~
code-source-info,0x2efc083fa
code-creation,Function,10,171294,0x2efc083ffa6,30,<instance_members_initializer> node:internal/vm/module:256:3,0x2eb6827fc58,~
code-source-info,0x2efc083ffa6,127,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,171489,0x2b718d024d6,30,ESMLoader node:internal/modules/esm/loader:57:1,0x2eb68260540,~
code-source-info,0x2b718d024d6,114,1618,1618,C9O1618C29O1618,,
code-creation,LazyCompile,10,171546,0x2b718d037fe,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x2eb68262a28,~
code-source-info,0x2b718d037fe,115,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,171621,0x2b718d03aa6,13,desc.value node:internal/per_context/primordials:325:32,0x29c79f89f70,~
code-source-info,0x2b718d03aa6,6,9820,9881,C0O9838C7O9845C12O9868,,
code-creation,LazyCompile,10,171659,0x2b718d03bae,13,SafeIterator node:internal/per_context/primordials:270:16,0x29c79f899c0,~
code-source-info,0x2b718d03bae,6,8054,8116,C0O8074C3O8091C7O8089C12O8115,,
code-creation,LazyCompile,10,171699,0x2b718d03ce6,13,next node:internal/per_context/primordials:273:9,0x29c79f89a88,~
code-source-info,0x2b718d03ce6,6,8126,8173,C0O8138C3O8155C8O8145C12O8166,,
code-creation,LazyCompile,10,171904,0x2b718d0435e,28,getEmbedderOptions node:internal/options:32:28,0x2efc0804400,~
code-source-info,0x2b718d0435e,96,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,172067,0x2b718d04606,315,Module._initPaths node:internal/modules/cjs/loader:1231:29,0x2eb68259af8,~
code-source-info,0x2b718d
code-creation,Eval,10,172308,0x2b718d0750e,5, node:internal/modules/run_main:1:1,0x2b718d072e8,~
script-source,128,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x2b718d0750e,128,0,2621,C0O0C4O2621,,
code-creation,Function,10,172419,0x2b718d077f6,178, node:internal/modules/run_main:1:1,0x2b718d07488,~
code-source-info,0x2b718d077f6,128,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,172520,0x2b718d07de6,163,initializeESMLoader node:internal/bootstrap/pre_execution:424:29,0x2efc0802568,~
code-source-info,0x2b718d07de6,95,13897,15012,C0O13981C6O13981C13O14030C16O14026C21O14024C25O14050C30O14054C34O14074C40O14103C41O14110C42O14215C48O14215C53O14129C58O14170C63O14262C69O14262C74O14466C79O14424C83O14537C88O14498C92O14707C100O14711C106O14830C112O14830C117O14778C122O14786C127O14804C132O14877C138O14877C143O14897C145O14907C149O14922C151O14942C155O14967C157O14986C162O15011,,
code-creation,LazyCompile,10,172575,0x2b718d07ffe,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x2eb68258fe8,~
code-source-info,0x2b718d07ffe,111,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,172609,0x2b718d080e6,53,loadPreloadModules node:internal/bootstrap/pre_execution:467:28,0x2efc0802658,~
code-source-info,0x2b718d080e6,95,15504,15835,C0O15593C8O15593C13O15625C15O15662C21O15669C26O15750C32O15750C37O15750C42O15715C47O15795C52O15834,,
code-creation,LazyCompile,10,172642,0x2b718d082d6,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:459:36,0x2efc0802608,~
code-source-info,0x2b718d082d6,95,15245,15473,C0O15253C8O15257C14O15303C17O15311C28O15311C34O15425C40O15425C45O15462C49O15472,,
code-creation,LazyCompile,10,172686,0x2b718d083fe,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0x2b718d07680,~
code-source-info,0x2b718d083fe,128,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,172727,0x2b718d0882e,68,resolveMainPath node:internal/modules/run_main:15:25,0x2b718d07540,~
code-source-info,0x2b718d0882e,128,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,LazyCompile,10,172837,0x2b718d08a2e,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x2eb68259308,~
code-source-info,0x2b718d08a2e
code-creation,LazyCompile,10,172927,0x2b718d08dde,109,isAbsolute node:path:402:13,0x10d2948d5d0,~
code-source-info,0x2b718d08dde,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,173063,0x2b718d090b6,85,stat node:internal/modules/cjs/loader:151:14,0x2eb682588a8,~
code-source-info,0x2b718d090b6,111,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,173132,0x2b718d092c6,232,toNamespacedPath node:path:618:19,0x10d2948d6f8,~
code-source-info,0x2b718d092c6,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,173278,0x2b718d09526,42,toRealPath node:internal/modules/cjs/loader:393:20,0x2eb68258b78,~
code-source-info,0x2b718d09526,111,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,173526,0x2b718d0993e,1036,realpathSync node:fs:2412:22,0x3dc127d9320,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = {};\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength\x2C\x0d\n      position\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C buffer\x2C options)\x0d\n    const options = offset || {};\x0d\n\x0d\n    ({ offset = 0\x2C length = buffer.byteLength\x2C position } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      if (cache) cache.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      if (promises === null)\x0d\n        promises = require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2b718d0993e
code-creation,LazyCompile,10,176680,0x2b718d10006,123,getOptions node:internal/fs/utils:314:20,0x3dc127e1a88,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x2b718d10006,81,7531,8175,C0O7562C14O7656C16O7678C17O7689C23O7729C29O7774C31O7798C35O7814C42O7850C48O7890C66O7896C71O7890C72O7986C79O7995C84O8014C87O8037C92O8014C96O8065C102O8094C107O8122C115O8094C120O8157C122O8172,,
code-creation,LazyCompile,10,177597,0x2b718d11f5e,48,assertEncoding node:internal/fs/utils:151:24,0x3dc127e1490,~
code-source-info,0x2b718d11f5e,81,3677,3859,C0O3693C6O3710C9O3717C14O3717C21O3761C24O3789C40O3795C45O3789C47O3858,,
code-creation,LazyCompile,10,177684,0x2b718d12076,20,toPathIfFileURL node:internal/url:1496:25,0x12cf3bf9088,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: { enumerable: true }\x2C\x0d\n  delete: { enumerable: true }\x2C\x0d\n  get: { enumerable: true }\x2C\x0d\n  getAll: { enumerable: true }\x2C\x0d\n  has: { enumerable: true }\x2C\x0d\n  set: { enumerable: true }\x2C\x0d\n  sort: { enumerable: true }\x2C\x0d\n  entries: { enumerable: true }\x2C\x0d\n  forEach: { enumerable: true }\x2C\x0d\n  keys: { enumerable: true }\x2C\x0d\n  values: { enumerable: true }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(flags\x2C input) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  href: { enumerable: true }\x2C\x0d\n  origin: { enumerable: true }\x2C\x0d\n  protocol: { enumerable: true }\x2C\x0d\n  username: { enumerable: true }\x2C\x0d\n  password: { enumerable: true }\x2C\x0d\n  host: { enumerable: true }\x2C\x0d\n  hostname: { enumerable: true }\x2C\x0d\n  port: { enumerable: true }\x2C\x0d\n  pathname: { enumerable: true }\x2C\x0d\n  search: { enumerable: true }\x2C\x0d\n  searchParams: { enumerable: true }\x2C\x0d\n  hash: { enumerable: true }\x2C\x0d\n  toJSON: { enumerable: true }\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x2b718d12076,39,42956,43081,C0O42977C3O42982C9O43017C11O43038C12O43042C15O43049C19O43078,,
code-creation,LazyCompile,10,179187,0x2b718d151a6,17,isURLInstance node:internal/url:1492:23,0x12cf3bf9038,~
code-source-info,0x2b718d151a6,39,42829,42928,C0O42850C3O42871C6O42896C12O42918C16O42925,,
code-creation,LazyCompile,10,179232,0x2b718d15306,81, node:internal/fs/utils:668:38,0x3dc127e24b0,~
code-source-info,0x2b718d15306,81,18830,19110,C14O18864C22O18897C25O18897C31O18924C36O18955C49O18930C54O18924C55O19023C68O19023C74O19062C76O19092C78O19092C80O19109,,
code-creation,LazyCompile,10,179296,0x2b718d15516,110, node:internal/fs/utils:357:35,0x3dc127e1b28,~
code-source-info,0x2b718d15516,81,8925,9534,C16O8990C21O9044C26O9044C31O9141C37O9164C41O9193C45O9210C51O9210C60O9262C64O9283C69O9283C76O9329C77O9336C78O9359C94O9359C100O9478C104O9501C106O9501C107O9520C109O9531,,
code-creation,LazyCompile,10,179339,0x2b718d1568e,16,isUint8Array node:internal/util/types:13:22,0x201f8307088,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2b718d1568e,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,179472,0x2b718d15b36,23,splitRoot node:fs:2362:33,0x3dc127d91d8,~
code-source-info,0x2b718d15b36,80,65151,65217,C0O65164C9O65191C12O65171C19O65208C22O65212,,
code-creation,LazyCompile,10,179625,0x2b718d15d5e,63,handleErrorFromBinding node:internal/fs/utils:340:32,0x3dc127e1ad8,~
code-source-info,0x2b718d15d5e,81,8269,8780,C0O8288C6O8352C11O8352C16O8375C24O8375C29O8433C31O8433C32O8460C38O8692C43O8719C51O8692C56O8766C60O8756C62O8779,,
code-creation,LazyCompile,10,179676,0x2b718d15ed6,53,nextPart node:fs:2388:31,0x3dc127d92d0,~
code-source-info,0x2b718d15ed6,80,65908,66159,C0O65935C4O65931C9O65968C14O65968C20O66052C22O66063C24O66059C31O66093C33O66089C38O66122C40O66131C41O65945C47O65922C50O66144C52O66154,,
tick,0x7ff7010fe5b5,179726,0,0x0,0,0x7ff7014b579e,0x2b718d09ab2,0x2b718d09549,0x2b718d08b59,0x2b718d0884c,0x2b718d08417,0x106063bef69
code-creation,LazyCompile,10,179838,0x2b718d160ae,34,isFileType node:fs:205:20,0x3dc127d6f40,~
code-source-info,0x2b718d160ae,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,LazyCompile,10,180133,0x2b718d1633e,72,encodeRealpathResult node:fs:2375:30,0x3dc127d9280,~
code-source-info,0x2b718d1633e,80,65497,65763,C0O65520C4O65545C10O65565C17O65574C22O65591C24O65605C25O65626C30O65633C35O65633C41O65662C48O65671C53O65692C55O65708C56O65733C61O65750C66O65733C71O65760,,
code-creation,LazyCompile,10,180226,0x2b718d164ee,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0x2b718d07590,~
code-source-info,0x2b718d164ee,128,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,LazyCompile,10,180304,0x2b718d1670e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x2eb68258a88,~
code-source-info,0x2b718d1670e,111,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,180400,0x2b718d16a6e,234,readPackage node:internal/modules/cjs/loader:290:21,0x2eb68258a38,~
code-source-info,0x2b718d16a6e,111,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,Function,11,180562,0x219c5045160,6232,resolve node:path:158:10,0x10d2948d510,^
code-source-info,0x219c5045160,41,4875,9786,,,
code-creation,Function,11,180590,0x219c5046a20,432,getCLIOptionsFromBinding node:internal/options:18:34,0x2efc0804360,^
code-source-info,0x219c5046a20,96,514,620,,,
code-creation,Function,11,180607,0x219c5046c40,104,next node:internal/per_context/primordials:273:9,0x29c79f89a88,^
code-source-info,0x219c5046c40,6,8126,8173,,,
code-creation,Function,11,180626,0x219c5046d20,252,SafeMap node:internal/per_context/primordials:351:16,0x29c79f8a018,^
code-source-info,0x219c5046d20,6,10550,10567,,,
code-creation,Function,11,180648,0x219c5046e80,412,isWindowsDeviceRoot node:path:60:29,0x10d2948d408,^
code-source-info,0x219c5046e80,41,1991,2136,,,
code-creation,Function,11,180666,0x219c5047080,272,validateString node:internal/validators:118:24,0x29c79fbc958,^
code-source-info,0x219c5047080,15,3534,3646,,,
code-creation,Function,11,180686,0x219c5047200,544,nextPart node:fs:2388:31,0x3dc127d92d0,^
code-source-info,0x219c5047200,80,65908,66159,,,
code-creation,LazyCompile,10,180808,0x2b718d175f6,199,read node:internal/modules/package_json_reader:16:14,0x2eb6825e5f8,~
code-source-info,0x2b718d175f6,112,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,181069,0x2b718d182ae,70,runMainESM node:internal/modules/run_main:47:20,0x2b718d075e0,~
code-source-info,0x2b718d182ae,128,1468,1817,C0O1468C12O1504C20O1504C25O1492C30O1573C38O1573C43O1555C49O1603C54O1621C59O1621C64O1603C69O1816,,
code-creation,LazyCompile,10,181145,0x2b718d184ee,222,loadESM node:internal/process/esm_loader:85:41,0x2eb6825f110,~
code-source-info,0x2b718d184ee,113,2652,2979,C10O2652C21O2679C24O2685C35O2679C58O2710C60O2725C63O2716C75O2710C113O2761C120O2765C125O2813C130O2821C138O2821C143O2850C154O2857C155O2870C163O2870C168O2895C178O2896C197O2978,,
code-creation,LazyCompile,10,181225,0x2b718d18b0e,284,initializeLoader node:internal/process/esm_loader:50:32,0x2eb6825efe0,~
code-source-info,0x2b718d18b0e,113,1490,2608,C10O1490C18O1525C24O1525C29O1506C34O1690C37O1690C42O1755C48O1763C59O1770C60O1812C66O1812C71O1784C76O1841C79O1841C83O1900C88O1919C91O1933C96O1933C103O1939C110O1923C111O1964C114O2229C119O2229C125O2371C132O2404C135O2404C140O2422C147O2434C152O2434C163O2377C176O2347C202O2563C207O2579C212O2579C225O2563C259O2607,,
code-creation,LazyCompile,10,181298,0x2b718d18dfe,175,handleMainPromise node:internal/modules/run_main:58:33,0x2b718d07630,~
code-source-info,0x2b718d18dfe,128,1853,2010,C10O1853C18O1868C21O1876C31O1887C34O1876C43O1921C53O1928C90O1963C93O1971C103O1983C106O1971C150O2009,,
code-creation,LazyCompile,10,181398,0x2b718d1903e,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x12cf3bda9a0,~
code-source-info,0x2b718d1903e
code-creation,LazyCompile,10,181463,0x2b718d19316,43,shift node:internal/fixed_queue:108:8,0x12cf3bdfcc0,~
code-source-info,0x2b718d19316,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,181500,0x2b718d1945e,54,shift node:internal/fixed_queue:80:8,0x12cf3bdfad0,~
code-source-info,0x2b718d1945e,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,181542,0x2b718d19596,42,emitBeforeScript node:internal/async_hooks:510:26,0x29c79fb8760,~
code-source-info,0x2b718d19596,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,181584,0x2b718d196e6,180,pushAsyncContext node:internal/async_hooks:540:26,0x29c79fb8908,~
code-source-info,0x2b718d196e6,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,181654,0x2b718d198fe,125, node:internal/child_process:708:22,0x2eb6824c7a0,~
code-source-info,0x2b718d198fe,100,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,181705,0x2b718d19abe,31,listenerCount node:events:858:23,0x201f832bc80,~
code-source-info,0x2b718d19abe,23,25642,25924,C0O25674C5O25688C7O25740C9O25746C13O25761C17O25808C19O25817C20O25830C24O25887C28O25894C29O25912C30O25921,,
code-creation,LazyCompile,10,181733,0x2b718d19bc6,13,destroyHooksExist node:internal/async_hooks:487:27,0x29c79fb8670,~
code-source-info,0x2b718d19bc6,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,181757,0x2b718d19cb6,32,emitAfterScript node:internal/async_hooks:518:25,0x29c79fb87b0,~
code-source-info,0x2b718d19cb6,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,181797,0x2b718d19e1e,167,popAsyncContext node:internal/async_hooks:554:25,0x29c79fb8958,~
code-source-info,0x2b718d19e1e,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,181841,0x2b718d19ffe,13,enabledHooksExist node:internal/async_hooks:475:27,0x29c79fb8560,~
code-source-info,0x2b718d19ffe,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,181897,0x2b718d1a156,77, node:internal/modules/run_main:51:29,0x2b718d181e8,~
code-source-info,0x2b718d1a156,128,1629,1811,C0O1664C7O1669C15O1669C24O1699C30O1699C35O1722C44O1762C55O1786C60O1786C71O1768C76O1806,,
code-creation,LazyCompile,10,181969,0x2b718d1a3d6,283,pathToFileURL node:internal/url:1455:23,0x12cf3bf8fc8,~
code-source-info,0x2b718d1a3d
code-creation,LazyCompile,10,182039,0x2b718d1a6a6,117,URL node:internal/url:620:14,0x12cf3bf7de0,~
code-source-info,0x2b718d1a6a6,39,17608,17965,C13O17676C17O17705C19O17724C23O17757C30O17772C40O17786C42O17785C46O17808C50O17813C57O17828C60O17824C65O17822C69O17847C85O17900C93O17900C110O17847C116O17964,,
code-creation,LazyCompile,10,182080,0x2b718d1a876,51,URLContext node:internal/url:160:14,0x12cf3bf7580,~
code-source-info,0x2b718d1a876,39,3859,4081,C0O3869C1O3880C5O3890C7O3902C11O3914C13O3928C17O3939C19O3953C23O3964C24O3974C28O3987C29O3997C33O4010C35O4020C39O4031C40O4042C44O4055C45O4069C50O4080,,
code-creation,LazyCompile,10,182160,0x2b718d1aabe,190,onParseComplete node:internal/url:532:25,0x12cf3bf7b10,~
code-source-info,0x2b718d1aabe,39,14726,15412,C0O14842C2O14847C4O14846C8O14860C10O14870C14O14882C16O14893C20O14908C22O14932C24O14930C29O14956C43O14921C47O14982C49O15006C51O15004C56O15030C70O14995C74O15056C76O15065C80O15076C82O15096C84O15094C89O15116C101O15124C103O15085C107O15138C109O15148C113O15160C115O15173C119O15188C121O15197C125O15208C127O15218C129O15217C134O15272C136O15277C141O15297C144O15293C149O15291C153O15321C155O15326C157O15325C163O15340C168O15349C172O15365C177O15387C179O15386C183O15365C189O15411,,
code-creation,LazyCompile,10,182305,0x2b718d1af46,889,URLSearchParams node:internal/url:182:14,0x12cf3bf7620,~
code-source-info,0x2b718d1af
code-creation,LazyCompile,10,182399,0x2b718d1b526,35,initSearchParams node:internal/url:1016:26,0x12cf3bf8b28,~
code-source-info,0x2b718d1b526,39,28064,28185,C0O28081C4O28099C6O28103C11O28117C15O28128C16O28135C17O28144C19O28148C25O28164C29O28162C34O28184,,
code-creation,LazyCompile,10,182463,0x2b718d1b6d6,199,encodePathChars node:internal/url:1440:25,0x12cf3bf8f78,~
code-source-info,0x2b718d1b6d6,39,40808,41513,C0O40824C8O40828C15O40873C22O40917C31O40884C38O40999C46O41017C52O41017C59O41063C66O41107C75O41074C82O41134C90O41138C97O41184C104O41228C113O41195C120O41253C128O41257C135O41303C142O41347C151O41314C158O41379C166O41383C173O41429C180O41473C189O41440C196O41494C198O41510,,
code-creation,LazyCompile,10,182516,0x2b718d1b906,70,set pathname node:internal/url:884:15,0x12cf3bf8718,~
code-source-info,0x2b718d1b906,39,24508,24717,C0O24557C5O24580C9O24589C11O24588C16O24611C17O24618C18O24624C29O24636C38O24659C40O24658C49O24700C54O24700C63O24624C69O24716,,
code-creation,LazyCompile,10,182548,0x2b718d1ba56,31, node:internal/url:636:21,0x12cf3bf7eb8,~
code-source-info,0x2b718d1ba56,39,18078,18155,C0O18088C4O18101C6O18100C10O18110C19O18118C21O18116C26O18144C30O18150,,
code-creation,LazyCompile,10,182597,0x2b718d1bb86,108,onParsePathComplete node:internal/url:591:29,0x12cf3bf7cf0,~
code-source-info,0x2b718d1bb86,39,16744,17226,C0O16864C2O16869C4O16868C8O16882C10O16895C12O16893C17O16915C22O16929C24O16938C28O16951C35O16964C40O16961C46O17001C48O17010C52O17021C59O17035C61O17034C66O17031C70O17117C72O17130C74O17128C79O17150C84O17164C86O17173C90O17186C97O17199C102O17196C107O17225,,
code-creation,LazyCompile,10,182638,0x2b718d1bd26,18,get href node:internal/url:734:11,0x12cf3bf8048,~
code-source-info,0x2b718d1bd26,39,20841,20881,C0O20851C4O20863C6O20862C12O20871C17O20876,,
code-creation,LazyCompile,10,182714,0x2b718d1bff6,393, node:internal/url:682:12,0x12cf3bf7fa8,~
code-source-info,0x2b718d1bff
code-creation,LazyCompile,10,182790,0x2b718d1c3a6,99, node:internal/validators:154:3,0x29c79fbcb08,~
code-source-info,0x2b718d1c3a6,15,4537,5108,C0O4596C4O4637C9O4673C14O4712C21O4748C26O4785C33O4821C38O4836C46O4884C50O4898C53O4898C67O4975C75O5042C91O5048C96O5042C98O5107,,
code-creation,LazyCompile,10,182875,0x2b718d1c68e,308,import node:internal/modules/esm/loader:324:15,0x2eb682606d0,~
code-source-info,0x2b718d1c68e,114,9906,10476,C10O9906C18O9970C25O9970C30O10001C32O10014C41O10028C50O10073C55O10099C64O10099C70O10137C81O10332C90O10152C98O10142C100O10142C116O10180C123O10203C137O10180C143O10246C154O10247C160O10281C170O10282C175O10173C186O10124C201O10360C212O10381C217O10377C223O10366C235O10360C261O10414C270O10467C283O10471,,
code-creation,LazyCompile,10,182952,0x2b718d1c9f6,251,getModuleJob node:internal/modules/esm/loader:242:21,0x2eb68260680,~
code-source-info,0x2b718d1c9f6,114,6925,7774,C10O6925C18O6977C20O7010C22O7019C26O7028C33O7035C38O7202C49O7253C54O7253C59O7240C65O7346C82O7346C95O7335C118O7312C123O7320C128O7427C133O7437C138O7463C143O7437C150O7538C154O7583C159O7593C166O7619C176O7593C181O7641C185O7673C187O7684C208O7700C214O7758C226O7769,,
code-creation,LazyCompile,10,183042,0x2b718d1ce4e,425,resolve node:internal/modules/esm/loader:509:16,0x2eb68260810,~
code-source-info,0x2b718d1ce4e,114,15404,16943,C10O15404C32O15471C37O15471C75O15513C79O15545C91O15616C94O15616C100O15648C120O15654C125O15648C126O15778C133O15829C135O15834C140O15844C144O15873C146O15878C150O15889C157O15896C168O15941C174O15951C178O16003C185O16040C191O16061C197O16088C207O15986C220O15980C246O16148C252O16193C270O16199C275O16193C276O16328C281O16336C286O16363C297O16443C318O16449C323O16443C324O16594C330O16678C351O16684C356O16678C357O16823C366O16823C371O16895C378O16911C384O16926C400O16938,,
code-creation,LazyCompile,10,183219,0x2b718d1d396,577,defaultResolve node:internal/modules/esm/resolve:1039:24,0x2eb68268708,~
code-source-info,0x2b718d1d396,118,34944,37466,C7O34944C16O35003C21O35014C26O35041C32O35058C38O35064C47O35101C53O35108C59O35117C65O35117C71O35154C73O35186C78O35195C83O35246C85O35269C91O35265C98O35246C104O35312C106O35325C107O35341C112O35362C116O35393C120O35446C125O35461C133O35475C139O35482C140O35499C144O35523C146O35536C152O35624C158O35647C165O35624C180O35532C187O35523C191O35720C195O35748C197O35767C207O35804C213O35804C227O35779C233O35813C238O36233C244O36254C250O36260C255O36254C256O36304C260O36317C265O36354C270O36373C285O36452C289O36461C295O36484C299O36379C309O36377C320O36626C324O36636C332O36641C341O36686C349O36691C354O36734C366O36738C373O36798C381O36810C386O36866C392O36866C398O36914C400O37018C412O37045C422O37018C428O37081C434O37107C446O37126C454O37151C458O37151C466O37178C473O37185C480O37203C489O37223C497O37223C502O37210C505O37138C509O37265C525O37287C532O37279C536O37316C538O37316C539O37339C543O37339C547O37380C555O37402C562O37422C566O37422C576O37463,,
code-creation,LazyCompile,10,183343,0x2b718d1fb66,64,getConditionsSet node:internal/modules/esm/resolve:165:26,0x2eb68267df8,~
code-source-info,0x2b718d1fb66,118,5376,5712,C0O5394C6O5441C8O5437C13O5468C18O5473C24O5508C40O5514C45O5508C46O5639C53O5646C58O5670C59O5679C63O5709,,
code-creation,LazyCompile,10,183396,0x2b718d1fcd6,140,moduleResolve node:internal/modules/esm/resolve:966:23,0x2eb68268618,~
code-source-info,0x2b718d1fcd6,118,32400,33061,C0O32559C2O32572C5O32576C11O32635C24O32646C32O32682C33O32695C39O32699C44O32715C56O32731C62O32718C72O32814C79O32825C88O32823C89O32867C101O32878C107O32951C114O32960C119O32978C121O32994C122O32998C134O33005C139O33058,,
code-creation,LazyCompile,10,183433,0x2b718d1fe7e,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:953:49,0x2eb682685c8,~
code-source-info,0x2b718d1fe7e,118,32059,32198,C0O32076C2O32090C7O32098C8O32111C9O32115C10O32128C16O32132C21O32141C22O32153C23O32157C26O32164C30O32195,,
code-creation,LazyCompile,10,183473,0x2b718d1ff96,81,isRelativeSpecifier node:internal/modules/esm/resolve:943:29,0x2eb68268578,~
code-source-info,0x2b718d1ff96,118,31756,32007,C0O31773C1O31786C7O31790C12O31820C19O31827C26O31845C32O31849C37O31858C38O31870C39O31876C41O31889C47O31893C52O31925C59O31932C66O31950C72O31954C77O31963C78O31975C79O31991C80O32004,,
code-creation,LazyCompile,10,183516,0x2b718d20116,15,get protocol node:internal/url:769:15,0x12cf3bf8188,~
code-source-info,0x2b718d20116,39,21714,21757,C0O21724C4O21736C6O21735C10O21745C14O21752,,
code-creation,LazyCompile,10,183599,0x2b718d2032e,444,finalizeResolution node:internal/modules/esm/resolve:391:28,0x2eb68268078,~
code-source-info,0x2b718d2032e
code-creation,LazyCompile,10,183677,0x2b718d20716,78,get pathname node:internal/url:875:15,0x12cf3bf86a8,~
code-source-info,0x2b718d20716,39,24290,24490,C0O24312C4O24317C6O24316C10O24332C14O24341C16O24340C21O24374C27O24378C30O24382C31O24396C36O24401C42O24408C47O24422C49O24432C50O24438C57O24449C60O24472C68O24449C77O24485,,
code-creation,LazyCompile,10,183761,0x2b718d2096e,106,fileURLToPath node:internal/url:1413:23,0x12cf3bf8f28,~
code-source-info,0x2b718d2096e,39,39672,40005,C0O39684C6O39719C13O39726C22O39749C25O39754C31O39780C49O39786C54O39780C55O39857C62O39866C67O39884C77O39890C82O39884C83O39929C92O39948C101O39976C105O40002,,
code-creation,LazyCompile,10,183820,0x2b718d20ba6,150,get origin node:internal/url:746:13,0x12cf3bf8118,~
code-source-info,0x2b718d20ba6,39,21116,21696,C0O21200C4O21205C6O21204C10O21232C59O21280C64O21285C70O21292C78O21329C83O21349C89O21353C95O21337C101O21359C105O21366C110O21464C116O21485C117O21597C122O21629C127O21641C132O21651C137O21604C142O21657C143O21670C149O21691,,
code-creation,LazyCompile,10,183898,0x2b718d20e8e,261,getPathFromURLWin32 node:internal/url:1360:29,0x12cf3bf8e88,~
code-source-info,0x2b718d20e8e
code-creation,LazyCompile,10,183952,0x2b718d21136,19,get hostname node:internal/url:841:15,0x12cf3bf84f8,~
code-source-info,0x2b718d21136,39,23466,23513,C0O23476C4O23488C6O23487C10O23497C18O23508,,
code-creation,LazyCompile,10,184012,0x2b718d214ae,30,tryStatSync node:internal/modules/esm/resolve:184:3,0x2eb68268758,~
code-source-info,0x2b718d214ae,118,5926,5992,C0O5981C5O5945C10O5936C21O5985C24O5981C29O5992,,
code-creation,LazyCompile,10,184063,0x2b718d21666,123,statSync node:fs:1530:18,0x3dc127d8418,~
code-source-info,0x2b718d21666,80,40462,40876,C7O40462C16O40525C21O40532C26O40571C33O40573C40O40598C45O40606C52O40611C55O40622C60O40622C66O40684C76O40606C82O40724C88O40739C96O40752C102O40781C103O40798C104O40807C109O40807C113O40839C118O40846C122O40873,,
code-creation,LazyCompile,10,184132,0x2b718d21806,37, node:internal/fs/utils:680:42,0x3dc127e2500,~
code-source-info,0x2b718d21806,81,19157,19296,C14O19213C19O19213C24O19248C29O19248C34O19281C36O19293,,
code-creation,LazyCompile,10,184229,0x2b718d21946,64,hasNoEntryError node:fs:1467:25,0x3dc127d82e8,~
code-source-info,0x2b718d21946,80,38836,39038,C0O38855C6O38883C11O38899C16O38883C21O38912C27O38926C36O38930C39O38943C40O38962C46O38987C51O38993C58O38998C61O39011C62O39022C63O39035,,
code-creation,LazyCompile,10,184298,0x2b718d21a7e,576,getStatsFromBinding node:internal/fs/utils:530:29,0x3dc127e22d0,~
code-source-info,0x2b718d21a7e
code-creation,LazyCompile,10,184366,0x2b718d21eae,16,isBigUint64Array node:internal/util/types:53:26,0x201f83074f0,~
code-source-info,0x2b718d21eae,17,1423,1514,C0O1436C5O1443C12O1490C15O1511,,
code-creation,LazyCompile,10,184393,0x2b718d21fce,19,msFromTimeSpec node:internal/fs/utils:446:24,0x3dc127e1ff8,~
code-source-info,0x2b718d21fce,81,11451,11512,C0O11468C2O11481C4O11479C10O11500C12O11498C15O11491C18O11509,,
code-creation,LazyCompile,10,184435,0x2b718d2220e,116,Stats node:internal/fs/utils:495:15,0x3dc127e21f0,~
code-source-info,0x2b718d2220e,81,13243,13784,C0O13383C41O13383C46O13513C48O13526C52O13540C54O13553C58O13567C60O13580C64O13594C66O13611C70O13629C73O13642C77O13640C81O13666C84O13679C88O13677C92O13703C95O13716C99O13714C103O13740C106O13757C110O13755C115O13783,,
code-creation,LazyCompile,10,184473,0x2b718d223e6,62,StatsBase node:internal/fs/utils:400:19,0x3dc127e1bc8,~
code-source-info,0x2b718d223e6,81,10312,10613,C0O10400C2O10409C6O10419C8O10429C12O10440C14O10451C18O10463C20O10472C24O10482C26O10491C30O10501C32O10511C36O10522C38O10535C42O10549C44O10558C48O10568C50O10578C54O10589C56O10601C61O10612,,
code-creation,LazyCompile,10,184526,0x2b718d225de,29,dateFromMs node:internal/fs/utils:460:20,0x3dc127e2098,~
code-source-info,0x2b718d225de,81,11977,12024,C0O11987C7O12003C10O12003C17O12014C23O11994C28O12021,,
code-creation,LazyCompile,10,184560,0x2b718d226e6,16,StatsBase.isDirectory node:internal/fs/utils:414:43,0x3dc127e1c18,~
code-source-info,0x2b718d226e6,81,10659,10710,C0O10679C7O10698C10O10679C15O10707,,
code-creation,LazyCompile,10,184590,0x2b718d227fe,54,Stats._checkModeProperty node:internal/fs/utils:517:46,0x3dc127e2240,~
code-source-info,0x2b718d227fe,81,14142,14370,C0O14158C8O14189C10O14185C17O14213C19O14209C26O14242C28O14238C33O14260C34O14273C35O14339C42O14346C44O14344C50O14354C53O14367,,
code-creation,LazyCompile,10,184617,0x2b718d22936,16,StatsBase.isFile node:internal/fs/utils:418:38,0x3dc127e1ca8,~
code-source-info,0x2b718d22936,81,10752,10803,C0O10772C7O10791C10O10772C15O10800,,
code-creation,RegExp,3,184694,0x219c5047480,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,184831,0x219c5047b20,1936,toNamespacedPath node:path:618:19,0x10d2948d6f8,^
code-source-info,0x219c5047b20,41,20086,21201,,,
code-creation,Function,11,184851,0x219c5048320,152,hasHooks node:internal/async_hooks:471:18,0x29c79fb8510,^
code-source-info,0x219c5048320,13,16531,16579,,,
code-creation,Function,11,184883,0x219c5048420,1916,getPathFromURLWin32 node:internal/url:1360:29,0x12cf3bf8e88,^
code-source-info,0x219c5048420,39,37724,39122,,,
code-creation,LazyCompile,10,185096,0x2b718d22e8e,37,get search node:internal/url:893:13,0x12cf3bf8788,~
code-source-info,0x2b718d22e8e,39,24733,24864,C0O24761C4O24766C6O24765C10O24751C15O24781C19O24809C24O24824C26O24834C27O24840C32O24851C36O24859,,
code-creation,LazyCompile,10,185137,0x2b718d22fd6,37,get hash node:internal/url:923:11,0x12cf3bf88d8,~
code-source-info,0x2b718d22fd6,39,25495,25638,C0O25526C4O25531C6O25530C10O25513C15O25546C19O25580C24O25595C26O25605C27O25611C32O25622C36O25633,,
code-creation,LazyCompile,10,185218,0x2b718d23166,181,set search node:internal/url:900:13,0x12cf3bf87f8,~
code-source-info,0x2b718d23166,39,24880,25403,C0O24908C4O24913C6O24912C10O24928C17O24937C23O24963C25O24974C30O24991C31O25001C35O25016C44O25030C46O25029C51O25026C57O25072C58O25082C64O25086C69O25095C79O25104C86O25144C88O25154C92O25167C101O25180C106O25177C110O25208C114O25231C125O25245C134O25279C142O25279C154O25231C159O25353C168O25375C170O25374C174O25353C180O25402,,
code-creation,LazyCompile,10,185269,0x2b718d2335e,41,toUSVString node:internal/util:59:21,0x201f8304e60,~
code-source-info,0x2b718d2335e,16,1409,1709,C0O1432C4O1586C11O1606C14O1586C20O1636C22O1653C24O1664C25O1668C30O1699C35O1675C40O1706,,
code-creation,LazyCompile,10,185332,0x2b718d234d6,144,set hash node:internal/url:930:11,0x12cf3bf8940,~
code-source-info,0x2b718d234d6,39,25652,26099,C0O25678C4O25683C6O25682C10O25733C15O25756C17O25776C18O25789C22O25804C31O25818C33O25817C38O25814C42O25849C43O25856C44O25869C45O25877C51O25881C56O25890C66O25897C73O25933C75O25946C79O25957C88O25970C93O25967C97O25999C108O26011C117O26044C125O26044C137O25999C143O26098,,
code-creation,LazyCompile,10,185378,0x2b718d2369e,51,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:1032:39,0x2eb682686b8,~
code-source-info,0x2b718d2369e,118,34752,34917,C0O34771C7O34780C12O34799C19O34808C24O34834C31O34843C36O34863C43O34869C48O34863C50O34916,,
code-creation,LazyCompile,10,185411,0x2b718d237c6,18,toString node:internal/url:730:11,0x12cf3bf7ff8,~
code-source-info,0x2b718d237c6,39,20787,20827,C0O20797C4O20809C6O20808C12O20817C17O20822,,
code-creation,LazyCompile,10,185460,0x2b718d23926,59,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:92:39,0x2eb6826c1c0,~
code-source-info,0x2b718d23926,119,2872,3074,C0O2907C7O2907C13O2924C20O2959C23O2984C28O2929C35O3000C36O3012C37O3016C42O3047C46O3039C52O3056C58O3071,,
code-creation,LazyCompile,10,185527,0x2b718d23e36,119,getFileProtocolModuleFormat node:internal/modules/esm/get_format:75:37,0x2eb6826c170,~
code-source-info,0x2b718d23e36,119,2291,2830,C0O2328C5O2340C10O2328C15O2354C17O2362C22O2380C27O2387C34O2407C45O2444C46O2470C53O2488C57O2498C59O2510C61O2524C62O2528C69O2564C74O2663C78O2688C79O2705C80O2711C87O2753C90O2753C100O2717C105O2711C106O2782C109O2789C118O2827,,
code-creation,LazyCompile,10,185613,0x2b718d24076,275,extname node:path:836:10,0x10d2948d838,~
code-source-info,0x2b718d
code-creation,LazyCompile,10,185678,0x2b718d24306,13,getPackageType node:internal/modules/esm/resolve:826:24,0x2eb68268438,~
code-source-info,0x2b718d24306,118,27944,28037,C0O27977C3O27977C8O28029C12O28034,,
code-creation,LazyCompile,10,185762,0x2b718d2455e,173,getPackageScopeConfig node:internal/modules/esm/resolve:248:31,0x2eb68267e98,~
code-source-info,0x2b718d2455e,118,7630,8729,C0O7667C13O7667C19O7766C24O7781C32O7785C39O7863C41O7897C46O7914C49O7914C54O7897C60O8023C66O8031C68O8052C69O8087C72O8108C85O8125C91O8334C96O8366C100O8343C105O8376C107O7707C110O8415C115O8415C120O8471C127O8489C132O8537C137O8559C142O8603C147O8628C154O8648C159O8665C164O8665C170O8705C172O8726,,
code-creation,LazyCompile,10,185985,0x2b718d249be,331,getPackageConfig node:internal/modules/esm/resolve:192:26,0x2eb68267e48,~
code-source-info,0x2b718d249be,118,6159,7522,C0O6205C5O6222C10O6222C16O6236C18O6271C20O6287C21O6311C26O6329C31O6329C37O6339C42O6351C44O6406C51O6426C56O6467C61O6491C66O6539C71O6566C78O6590C83O6607C88O6607C94O6638C96O6659C97O6674C102O6701C107O6715C115O6713C125O6760C137O6819C144O6830C163O6857C168O6871C174O6857C178O6855C185O6904C192O6766C197O6760C198O6936C203O6945C208O6951C213O6957C218O6990C223O7018C233O7071C235O7095C241O7125C243O7146C249O7176C251O7251C253O7260C260O7281C265O7297C268O7339C275O7357C281O7387C287O7398C293O7409C299O7420C305O7434C312O7452C317O7469C322O7469C328O7498C330O7519,,
code-creation,LazyCompile,10,186108,0x2b718d24d4e,3, node:internal/per_context/primordials:276:21,0x29c79f89b30,~
code-source-info,0x2b718d24d4e,6,8195,8226,C0O8207C2O8219,,
code-creation,LazyCompile,10,186207,0x2b718d24e36,78,get node:internal/modules/esm/module_map:18:6,0x2eb68262a78,~
code-source-info,0x2b718d24e36,115,604,748,C11O617C18O645C28O645C33O678C43O678C48O713C50O726C61O726C71O736C77O743,,
code-creation,LazyCompile,10,186287,0x2b718d2502e,111,#createModuleJob node:internal/modules/esm/loader:278:19,0x2eb682604f0,~
code-source-info,0x2b718d2502e,114,8441,9245,C0O8441C17O8514C22O8914C31O8957C37O8957C42O9016C70O9016C76O9169C79O9174C84O9184C92O9210C103O9184C108O9229C110O9240,,
code-creation,LazyCompile,10,186391,0x2b718d25356,196,ModuleJob node:internal/modules/esm/module_job:56:14,0x2eb68263908,~
code-source-info,0x2b718d25356,116,1367,3214,C0O1367C27O1400C32O1400C50O1478C55O1490C59O1505C64O1527C68O1552C73O1564C77O1579C82O1595C86O1616C90O1628C94O1766C101O1787C104O1816C113O1825C122O1830C135O1787C140O1785C144O1937C149O2890C152O2904C155O2902C159O3014C169O3041C178O3049C181O3014C186O3179C190O3197C195O3213,,
code-creation,LazyCompile,10,186512,0x2b718d25dc6,187,moduleProvider node:internal/modules/esm/loader:279:28,0x2b718d24f58,~
code-source-info,0x2b718d25dc6,114,8514,8886,C10O8514C18O8586C21O8597C26O8612C33O8619C39O8627C43O8597C57O8586C80O8562C85O8575C90O8676C97O8688C102O8688C108O8715C110O8743C119O8749C124O8743C125O8811C147O8818C162O8879,,
code-creation,LazyCompile,10,186633,0x2b718d26216,410,load node:internal/modules/esm/loader:353:13,0x2eb68260720,~
code-source-info,0x2b718d26216,114,10854,12162,C10O10854C60O10903C62O10908C67O10916C71O10943C73O10948C77O10957C84O10964C95O11007C101O11015C105O11040C114O11046C127O11040C153O11090C159O11131C177O11137C182O11131C183O11266C188O11281C193O11313C198O11358C210O11358C216O11467C228O11530C235O11580C255O11473C260O11467C261O11616C267O11657C288O11663C293O11657C294O11808C309O11883C312O11883C322O11919C325O11919C331O11952C350O11958C355O11952C356O12111C363O12127C369O12142C385O12157,,
code-creation,LazyCompile,10,186729,0x2b718d2660e,201,defaultLoad node:internal/modules/esm/load:13:27,0x2eb6826d6a8,~
code-source-info,0x2b718d2660e,121,380,847,C10O380C18O411C23O424C28O459C33O494C38O521C43O530C48O563C62O563C67O619C69O636C76O665C81O692C85O717C90O744C95O776C102O783C106O759C119O753C147O804C154O818C160O831C176O844,,
code-creation,LazyCompile,10,186801,0x2b718d26976,150,validateAssertions node:internal/modules/esm/assert:55:28,0x2eb68265a00,~
code-source-info,0x2b718d26976,117,1835,2993,C12O1897C17O1897C26O1940C33O1953C37O1968C38O1999C48O2155C55O2505C66O2130C67O2142C68O2320C76O2325C83O2393C84O2405C85O2422C88O2469C93O2429C98O2475C99O2581C100O2593C101O2745C109O2750C116O2862C129O2868C134O2862C135O2939C138O2979C143O2939C149O2992,,
code-creation,LazyCompile,10,186912,0x2b718d26cb6,338,defaultGetSource node:internal/modules/esm/get_source:25:32,0x2eb6826ddb0,~
code-source-info,0x2b718d26cb6,122,686,1346,C10O686C31O694C70O747C77O747C83O768C85O790C92O799C97O819C102O834C114O828C144O878C151O887C156O921C163O941C166O966C171O921C177O982C179O1003C186O1009C191O1003C192O1058C199O1069C206O1090C211O1106C218O1111C221O1111C228O1137C237O1106C246O1183C258O1189C263O1183C264O1243C271O1253C280O1272C285O1279C290O1288C295O1288C301O1329C313O1343,,
code-creation,LazyCompile,10,187065,0x2b718d273de,196,readFile node:internal/fs/promises:786:24,0x2eb68270028,~
code-source-info,0x2b718d273de,123,22911,23257,C10O22911C18O22932C23O22953C28O22942C35O23002C44O23020C46O23040C48O23029C53O23057C56O23064C71O23094C72O23100C75O23121C80O23100C84O23146C98O23152C111O23146C137O23180C145O23215C151O23247C156O23187C171O23254,,
code-creation,LazyCompile,10,187126,0x2b718d29156,29,checkAborted node:internal/fs/promises:319:22,0x2eb6826f358,~
code-source-info,0x2b718d29156,123,7466,7532,C0O7480C7O7490C16O7506C21O7512C26O7506C28O7531,,
code-creation,LazyCompile,10,187179,0x2b718d292fe,182,open node:internal/fs/promises:449:20,0x2eb6826f538,~
code-source-info,0x2b718d292fe,123,11749,12062,C10O11749C18O11774C23O11781C29O11828C34O11828C39O11853C55O11860C62O11899C69O11933C72O11941C79O11956C82O11967C87O11967C95O12044C104O11941C117O11927C142O11906C157O12059,,
code-creation,LazyCompile,10,187293,0x2b718d29786,515,stringToFlags node:internal/fs/utils:555:23,0x3dc127e2320,~
code-source-info,0x2b718d
code-creation,LazyCompile,10,187382,0x2b718d29b76,97,parseFileMode node:internal/validators:59:23,0x29c79fbc7f8,~
code-source-info,0x2b718d29b76,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
code-creation,LazyCompile,10,187432,0x2b718d29d46,206, node:internal/validators:84:3,0x29c79fbc8b8,~
code-source-info,0x2b718d29d46,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,187467,0x2b718d29f0e,9,isInt32 node:internal/validators:36:17,0x29c79fbc298,~
code-source-info,0x2b718d29f0e,15,769,814,C0O782C2O806C5O795C8O811,,
code-creation,LazyCompile,10,187788,0x2b718d2a1be,263,link node:internal/modules/esm/module_job:69:18,0x2b718d251d8,~
code-source-info,0x2b718d2a1be,116,1937,2831,C4O1937C26O1958C36O1983C48O1972C73O1970C77O2005C89O2017C98O2035C100O2024C104O2005C108O2357C110O2357C112O2385C117O2390C122O2397C132O2397C138O2670C140O2707C151O2728C156O2724C162O2713C174O2707C199O2767C210O2789C218O2785C224O2774C238O2824,,
code-creation,LazyCompile,10,187854,0x2b718d2a446,19,primordials.PromisePrototypeCatch node:internal/per_context/primordials:397:37,0x29c79f8a4b8,~
code-source-info,0x2b718d2a446,6,11842,11930,C0O11874C13O11874C18O11930,,
code-creation,LazyCompile,10,187926,0x2b718d2a61e,216,set node:internal/modules/esm/module_map:23:6,0x2eb68262ac8,~
code-source-info,0x2b718d2a61e,115,755,1288,C11O768C21O801C31O801C36O834C46O834C51O869C55O888C57O877C62O898C73O955C91O961C96O955C97O1024C109O1041C124O1066C126O1062C137O1106C148O1024C152O1165C154O1171C165O1171C178O1183C183O1183C188O1208C190O1231C194O1243C196O1256C210O1256C215O1283,,
code-creation,LazyCompile,10,187995,0x2b718d2a81e,89,logger node:internal/util/debuglog:95:18,0x201f8321c20,~
code-source-info,0x2b718d2a81e,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,188056,0x2b718d2a986,140,debug node:internal/util/debuglog:76:15,0x201f8321b80,~
code-source-info,0x2b718d2a986,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,188105,0x2b718d2ab36,41,init node:internal/util/debuglog:72:16,0x201f8321b30,~
code-source-info,0x2b718d2ab36,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,188133,0x2b718d2ac26,2,testEnabled node:internal/util/debuglog:32:19,0x2efc0814ea0,~
code-source-info,0x2b718d2ac26,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,188189,0x2b718d2adbe,116,debuglogImpl node:internal/util/debuglog:49:22,0x201f8321980,~
code-source-info,0x2b718d2adbe,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,188234,0x2b718d2af76,10, node:internal/modules/esm/module_map:9:63,0x2eb682629d8,~
code-source-info,0x2b718d2af76,115,271,298,C0O284C2O290C9O297,,
code-creation,LazyCompile,10,188261,0x2b718d2b026,2,noop node:internal/util/debuglog:47:14,0x201f8321930,~
code-source-info,0x2b718d2b026,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,188289,0x2b718d2b0de,10, node:internal/modules/esm/loader:333:15,0x2b718d1c4f8,~
code-source-info,0x2b718d2b0de,114,10252,10270,C0O10265C5O10265C9O10270,,
code-creation,LazyCompile,10,188374,0x2b718d2b536,433,run node:internal/modules/esm/module_job:192:12,0x2eb682639f8,~
code-source-info,0x2b718d2b536,116,7119,8323,C10O7119C18O7140C23O7140C35O7129C58O7176C61O7207C66O7243C71O7250C76O7250C90O7232C128O7310C133O7315C143O7322C152O7357C158O7395C163O7357C169O7416C182O7426C186O7463C196O7495C204O7467C211O7530C224O7540C228O7630C235O7661C240O7668C248O7630C259O7700C267O7750C272O7757C277O7700C292O7778C297O7833C302O7861C307O7868C312O7834C318O7901C325O7906C330O7933C344O8082C358O8024C364O8105C370O8185C376O7943C380O8266C382O8266C383O8287C388O8309C408O8318,,
code-creation,LazyCompile,10,188444,0x2b718d2b866,24,instantiate node:internal/modules/esm/module_job:101:14,0x2eb68263958,~
code-source-info,0x2b718d2b866,116,3231,3370,C0O3250C6O3312C11O3312C15O3305C19O3352C23O3365,,
code-creation,LazyCompile,10,188599,0x2b718d2bf6e,935,_instantiate node:internal/modules/esm/module_job:108:21,0x2eb682639a8,~
code-source-info,0x2b718d2bf6e
code-creation,LazyCompile,10,188722,0x2b718d2c5e6,179,addJobsToDependencyGraph node:internal/modules/esm/module_job:110:38,0x2b718d2bcb0,~
code-source-info,0x2b718d2c5e6,116,3477,3782,C10O3477C18O3507C23O3523C28O3523C35O3550C46O3557C47O3574C52O3586C57O3586C62O3648C74O3632C100O3663C111O3685C118O3713C123O3747C126O3713C134O3681C140O3670C154O3775,,
code-creation,LazyCompile,10,188896,0x2b718d2c97e,627,processPromiseRejections node:internal/process/promises:211:34,0x12cf3bde3d8,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x2b718d2c97e
code-creation,LazyCompile,10,189438,0x2b718d2d8d6,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x12cf3bdd948,~
code-source-info,0x2b718d2d8d6,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
code-creation,LazyCompile,10,189492,0x2b718d2d9f6,112,FileHandle node:internal/fs/promises:116:14,0x2eb68270078,~
code-source-info,0x2b718d2d9f6,123,2962,3135,C3O2982C11O2982C40O2996C45O3001C50O3010C54O3029C59O3034C67O3041C69O3065C77O3039C81O3081C86O3086C91O3093C95O3103C100O3108C104O3123C111O3134,,
code-creation,LazyCompile,10,189531,0x2b718d2db76,63,MixedEventEmitter node:internal/event_target:968:16,0x2eb68279948,~
code-source-info,0x2b718d2db76,44,26839,26973,C0O26839C8O26858C15O26865C21O26901C25O26910C29O26901C41O26924C48O26946C54O26924C62O26972,,
code-creation,LazyCompile,10,189671,0x2b718d2de96,601,readFileHandle node:internal/fs/promises:359:30,0x2eb6826f3f8,~
code-source-info,0x2b718d2de
code-creation,LazyCompile,10,189785,0x2b718d2e2de,8,get fd node:internal/fs/promises:129:9,0x2eb68270130,~
code-source-info,0x2b718d2e2de,123,3212,3244,C0O3222C2O3234C4O3233C7O3239,,
code-creation,LazyCompile,10,189846,0x2b718d2e45e,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:409:43,0x29c79f8a570,~
code-source-info,0x2b718d2e45e,6,12438,12718,C0O12438C13O12574C27O12574C32O12718,,
code-creation,LazyCompile,10,189886,0x2b718d2e5ee,46, node:internal/per_context/primordials:412:15,0x2b718d2e3b0,~
code-source-info,0x2b718d2e5ee,6,12586,12713,C0O12703C14O12601C20O12676C28O12683C34O12702C39O12703C45O12713,,
code-creation,LazyCompile,10,189923,0x2b718d2e736,27,SafePromise node:internal/per_context/primordials:393:16,0x29c79f8a468,~
code-source-info,0x2b718d2e736,6,11762,11793,C3O11775C7O11781C11O11775C26O11792,,
code-creation,LazyCompile,10,189959,0x2b718d2e82e,22, node:internal/per_context/primordials:413:21,0x2b718d2e538,~
code-source-info,0x2b718d2e82e,6,12617,12666,C0O12627C16O12627C21O12666,,
code-creation,LazyCompile,10,190013,0x2b718d2e926,19,allocUnsafeSlow node:buffer:383:50,0x201f8336e58,~
code-source-info,0x2b718d2e926,24,11595,11663,C0O11607C5O11607C9O11628C14O11635C18O11660,,
code-creation,LazyCompile,10,190054,0x2b718d2ea36,54, node:buffer:349:36,0x201f8336d30,~
code-source-info,0x2b718d2ea36,24,10539,10699,C0O10554C8O10554C13O10587C14O10598C21O10614C23O10611C28O10634C33O10666C46O10640C51O10634C53O10698,,
code-creation,LazyCompile,10,190091,0x2b718d2eb5e,30,validateNumber node:internal/validators:123:24,0x29c79fbc9f8,~
code-source-info,0x2b718d2eb5e,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,190130,0x2b718d2ec8e,71,createUnsafeBuffer node:internal/buffer:1059:28,0x12cf3bcbd18,~
code-source-info,0x2b718d2ec8e,25,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
code-creation,LazyCompile,10,190271,0x2b718d2ef7e,248,close node:internal/fs/promises:189:11,0x2eb68272270,~
code-source-info,0x2b718d2ef7e,123,4398,5219,C0O4411C7O4420C9O4419C15O4425C20O4442C27O4449C30O4466C31O4481C38O4490C40O4489C45O4515C52O4527C54O4526C57O4542C58O4557C65O4562C73O4568C77O4577C84O4586C86O4585C91O4593C96O4609C103O4614C108O4619C112O4632C119O4637C126O4654C136O4697C138O4696C142O4706C147O4706C157O4654C162O4652C168O4798C175O4803C182O4820C189O4862C199O4858C210O4820C215O4818C219O5162C222O5167C230O5167C235O5187C242O5199C244O5198C247O5214,,
code-creation,LazyCompile,10,190387,0x2b718d2f2e6,17, node:internal/fs/promises:203:9,0x2b718d2ed68,~
code-source-info,0x2b718d2f2e6,123,4724,4766,C0O4732C7O4737C11O4752C16O4765,,
code-creation,LazyCompile,10,190501,0x2b718d2f67e,193,moduleStrategy node:internal/modules/esm/translators:110:56,0x2eb6827cb78,~
code-source-info,0x2b718d2f67e,125,3150,3602,C0O3150C23O3177C36O3177C41O3222C46O3231C52O3253C59O3253C64O3290C76O3326C81O3290C85O3352C106O3352C112O3401C119O3412C124O3424C129O3428C134O3465C146O3550C150O3424C156O3585C168O3599,,
code-creation,LazyCompile,10,190571,0x2b718d303e6,83,assertBufferSource node:internal/modules/esm/translators:74:28,0x2eb6827c948,~
code-source-info,0x2b718d303e6,125,2103,2510,C0O2138C10O2190C11O2197C12O2254C15O2254C19O2214C24O2233C29O2274C35O2301C41O2332C42O2339C43O2348C50O2401C77O2354C82O2348,,
code-creation,LazyCompile,10,190614,0x2b718d3053e,31,lazyTypes node:internal/modules/esm/translators:22:19,0x2eb6827c8a8,~
code-source-info,0x2b718d3053e,125,417,514,C0O425C6O446C10O460C11O464C17O480C24O478C30O511,,
code-creation,LazyCompile,10,190657,0x2b718d30656,72,stringify node:internal/modules/esm/translators:90:19,0x2eb6827c998,~
code-source-info,0x2b718d30656,125,2532,2737,C0O2544C6O2574C8O2586C9O2590C20O2590C25O2645C33O2678C36O2674C45O2694C50O2653C56O2706C61O2721C66O2721C71O2734,,
code-creation,LazyCompile,10,190776,0x2b718d30846,206,TextDecoder node:internal/encoding:379:16,0x12cf3bd3f88,~
script-source,27,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': { enumerable: true }\x2C\x0d\n    'encodeInto': { enumerable: true }\x2C\x0d\n    'encoding': { enumerable: true }\x2C\x0d\n    [SymbolToStringTag]: { configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      const handle = getConverter(enc\x2C flags);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kHandle] = handle;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n    }\x0d\n\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (!isArrayBufferView(input)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\x0d\n      if (typeof ret === 'number') {\x0d\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\x0d\n      }\x0d\n      return ret.toString('ucs2');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                  input.byteLength);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nObjectDefineProperties(\x0d\n  TextDecoder.prototype\x2C\x0d\n  ObjectGetOwnPropertyDescriptors({\x0d\n    get encoding() {\x0d\n      validateDecoder(this);\x0d\n      return this[kEncoding];\x0d\n    }\x2C\x0d\n\x0d\n    get fatal() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n    }\x2C\x0d\n\x0d\n    get ignoreBOM() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n    }\x2C\x0d\n\x0d\n    [inspect](depth\x2C opts) {\x0d\n      validateDecoder(this);\x0d\n      if (typeof depth === 'number' && depth < 0)\x0d\n        return this;\x0d\n      const constructor = getConstructorOf(this) || TextDecoder;\x0d\n      const obj = ObjectCreate({ constructor });\x0d\n      obj.encoding = this.encoding;\x0d\n      obj.fatal = this.fatal;\x0d\n      obj.ignoreBOM = this.ignoreBOM;\x0d\n      if (opts.showHidden) {\x0d\n        obj[kFlags] = this[kFlags];\x0d\n        obj[kHandle] = this[kHandle];\x0d\n      }\x0d\n      // Lazy to avoid circular dependency\x0d\n      const { inspect } = require('internal/util/inspect');\x0d\n      return `${constructor.name} ${inspect(obj)}`;\x0d\n    }\x0d\n  })\x0d\n);\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: { enumerable: true }\x2C\x0d\n  [inspect]: { enumerable: false }\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0x2b718d30846,27,10677,11487,C15O10677C21O10721C25O10754C35O10769C43O10754C48O10905C53O10905C58O10944C60O10976C69O10982C74O10976C75O11045C77O11055C81O11105C94O11113C103O11166C116O11178C125O11243C130O11243C136O11276C138O11311C147O11317C152O11311C153O11368C157O11373C161O11383C165O11398C169O11403C174O11412C178O11429C182O11434C187O11442C191O11458C195O11463C200O11474C205O11486,,
code-creation,LazyCompile,10,191589,0x2b718d31cc6,55,getEncodingFromLabel node:internal/encoding:313:30,0x12cf3bd3cc0,~
code-source-info,0x2b718d31cc6,27,8957,9111,C0O8982C5O8992C10O8992C16O9007C18O9030C20O9041C21O9045C26O9062C34O9092C39O9092C44O9066C49O9062C54O9108,,
code-creation,LazyCompile,10,191677,0x2b718d31fd6,227,decode node:internal/encoding:408:11,0x12cf3bd40a8,~
code-source-info,0x2b718d31fd6,27,11503,12349,C8O11512C25O11542C30O11542C34O11572C41O11576C47O11612C52O11620C56O11632C61O11633C69O11660C76O11665C82O11702C102O11708C107O11702C108O11882C118O11897C126O11882C131O12033C133O12043C137O12091C153O12104C159O12148C168O12161C170O12160C180O12148C186O12193C190O12233C197O12282C207O12239C212O12233C213O12325C221O12325C226O12342,,
code-creation,LazyCompile,10,191732,0x2b718d321fe,37,validateDecoder node:internal/encoding:64:25,0x12cf3bd3c20,~
code-source-info,0x2b718d321fe,27,1332,1436,C0O1343C7O1366C9O1365C14O1376C19O1391C29O1397C34O1391C36O1435,,
code-creation,LazyCompile,10,191799,0x2b718d32376,162,toString node:buffer:783:46,0x201f8338c70,~
code-source-info,0x2b718d32376,24,24068,24660,C0O24068C2O24110C8O24117C13O24143C20O24161C25O24143C31O24169C32O24197C37O24210C38O24220C43O24231C48O24250C50O24260C55O24273C57O24283C58O24297C65O24314C71O24343C76O24355C83O24379C90O24394C92O24402C97O24417C99O24427C100O24433C104O24478C109O24478C115O24500C116O24518C119O24518C124O24547C126O24575C133O24581C138O24575C139O24633C156O24633C161O24657,,
code-creation,LazyCompile,10,191891,0x2b718d32636,499,getEncodingOps node:buffer:679:24,0x201f8338ac8,~
code-source-info,0x2b718d
code-creation,LazyCompile,10,191981,0x2b718d32a1e,12,slice node:buffer:603:12,0x201f8337778,~
code-source-info,0x2b718d32a1e,24,17595,17641,C0O17620C5O17620C11O17641,,
code-creation,LazyCompile,10,192056,0x2b718d32cd6,229,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x2eb68250940,~
code-source-info,0x2b718d32cd6,108,2312,3381,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2655C69O2645C73O2668C74O2675C75O2698C80O2725C85O2698C91O2805C93O2836C96O2864C101O2871C106O2836C112O2907C117O2927C122O2934C127O2957C131O2989C136O3007C141O3011C148O3041C155O3073C165O3104C171O3119C175O3007C183O3250C188O3268C193O3272C201O3306C211O3337C217O3352C221O3268C228O3380,,
code-creation,LazyCompile,10,192107,0x2b718d33736,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x2eb682508a0,~
code-source-info,0x2b718d33736,108,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,192150,0x2b718d338ae,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x2eb682508f0,~
code-source-info,0x2b718d338ae,108,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,192185,0x2b718d33a26,30,validateBoolean node:internal/validators:139:25,0x29c79fbca98,~
code-source-info,0x2b718d33a26,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,192219,0x2b718d33b1e,10, node:internal/modules/esm/translators:42:63,0x2eb6827cb28,~
code-source-info,0x2b718d33b1e,125,1058,1085,C0O1071C2O1077C9O1084,,
code-creation,Script,10,192334,0x2b718d3407e,83, file:///F:/CoderHouse/BackEnd/clases/desafio-motores-plantillas/hbs/random.js:1:1,0x2b718d33d80,~
script-source,129,file:///F:/CoderHouse/BackEnd/clases/desafio-motores-plantillas/hbs/random.js,export function randomizar(cant) {\x0d\n  const arrRandom = []\x0d\n  let objRandom = []\x0d\n  \x0d\n  for (let i = 1; i <= cant; i++){\x0d\n      arrRandom.push(getRandomIntInclusive())\x0d\n  } \x0d\n\x0d\n\x0d\n  let count = 1;\x0d\n  arrRandom.sort(function(a\x2Cb){\x0d\n  return a-b})\x0d\n\x0d\n  let singleElements = []\x0d\n  let repeatedElements = []\x0d\n\x0d\n    for(let i = 0; i <= arrRandom.length; i++){\x0d\n    if(arrRandom[i + 1] === arrRandom[i]){\x0d\n      count++;\x0d\n    } else {\x0d\n      singleElements.push(arrRandom[i])\x0d\n      repeatedElements.push(count)\x0d\n      count = 1;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  for(let i = 0; i <= singleElements.length; i++){\x0d\n    // console.log(singleElements[i])\x0d\n    let elem = singleElements[i]\x0d\n    let repElem = repeatedElements[i]\x0d\n    \x0d\n    let newObj = {nroRandom: elem\x2C vecesRepetido: repElem}\x0d\n    \x0d\n    objRandom.push(newObj)\x0d\n    \x0d\n  }\x0d\n\x0d\n  return objRandom;\x0d\n}\x0d\n\x0d\nprocess.on('message'\x2C cant => {\x0d\n  console.log('mensaje desde el procesos principal:\\n');\x0d\n  console.log(cant);\x0d\n\x0d\n  const objetoRandom = randomizar(cant)\x0d\n  // console.log(objetoRandom)\x0d\n  process.send(objetoRandom)\x0d\n});\x0d\n\x0d\n\x0d\nfunction getRandomIntInclusive() {\x0d\n    let min = Math.ceil(1);\x0d\n    let max = Math.floor(1000);\x0d\n    return Math.floor(Math.random() * (max - min + 1) + min);\x0d\n}\x0d\n\x0d\n
code-source-info,0x2b718d3407e,129,0,1234,C10O0C34O0C54O0C58O841C62O849C75O849C82O1234,,
code-creation,LazyCompile,10,192467,0x2b718d34626,5,get node:internal/bootstrap/pre_execution:307:8,0x2eb68255d10,~
code-source-info,0x2b718d34626,95,10162,10197,C0O10174C4O10190,,
code-creation,Function,11,192514,0x219c5048c00,108,isEmpty node:internal/fixed_queue:67:10,0x12cf3bdf9b0,^
code-source-info,0x219c5048c00,34,3150,3197,,,
code-creation,Function,11,192534,0x219c5048ce0,320,isFileType node:fs:205:20,0x3dc127d6f40,^
code-source-info,0x219c5048ce0,80,5489,5737,,,
code-creation,Function,11,192549,0x219c5048e80,280, node:internal/url:636:21,0x12cf3bf7eb8,^
code-source-info,0x219c5048e80,39,18078,18155,,,
code-creation,Function,11,192566,0x219c5049000,340,URLContext node:internal/url:160:14,0x12cf3bf7580,^
code-source-info,0x219c5049000,39,3859,4081,,,
code-creation,Function,11,192589,0x219c50491c0,1468,onParseComplete node:internal/url:532:25,0x12cf3bf7b10,^
code-source-info,0x219c50491c0,39,14726,15412,,,
code-creation,Function,11,192604,0x219c50497e0,252,SafePromise node:internal/per_context/primordials:393:16,0x29c79f8a468,^
code-source-info,0x219c50497e0,6,11762,11793,,,
code-creation,LazyCompile,10,192653,0x2b718d34a2e,44,refCounted node:internal/child_process:539:13,0x2efc08210b0,~
code-source-info,0x2b718d34a2e,100,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,192702,0x2b718d34b4e,15, node:internal/modules/esm/loader:334:15,0x2b718d1c548,~
code-source-info,0x2b718d34b4e,114,10287,10324,C0O10290C5O10310C10O10310C14O10324,,
code-creation,LazyCompile,10,192789,0x2b718d34cfe,307,removeListener node:events:693:28,0x201f832b9d8,~
code-source-info,0x2b718d34cfe
code-creation,LazyCompile,10,192868,0x2b718d34fe6,64,stopListeningIfSignal node:internal/process/signal:43:31,0x3dc127ff870,~
code-source-info,0x2b718d34fe6,92,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
code-creation,LazyCompile,10,192904,0x2b718d3512e,30,onRemoveListener node:child_process:178:57,0x2eb682467d8,~
code-source-info,0x2b718d3512e,99,5433,5524,C0O5447C2O5456C9O5478C14O5496C19O5504C24O5504C29O5523,,
tick,0x7fff4326feb4,194738,0,0x0,8
tick,0x7fff4326feb4,209746,0,0x0,8
tick,0x7fff4326feb4,224772,0,0x0,8
tick,0x7fff4326feb4,240791,0,0x0,8
tick,0x7fff4326feb4,255794,0,0x0,8
tick,0x7fff4326feb4,270815,0,0x0,8
tick,0x7fff4326feb4,285820,0,0x0,8
tick,0x7fff4326feb4,301851,0,0x0,8
tick,0x7fff4326feb4,317017,0,0x0,8
tick,0x7fff4326feb4,332288,0,0x0,8
tick,0x7fff4326feb4,348397,0,0x0,8
tick,0x7fff4326feb4,363643,0,0x0,8
tick,0x7fff4326feb4,378576,0,0x0,8
tick,0x7fff4326feb4,393198,0,0x0,8
tick,0x7fff4326feb4,408401,0,0x0,8
tick,0x7fff4326feb4,423254,0,0x0,8
tick,0x7fff4326feb4,438555,0,0x0,8
tick,0x7fff4326feb4,453844,0,0x0,8
tick,0x7fff4326feb4,468990,0,0x0,8
tick,0x7fff4326feb4,485551,0,0x0,8
tick,0x7fff4326feb4,500300,0,0x0,8
tick,0x7fff4326feb4,515753,0,0x0,8
tick,0x7fff4326feb4,531053,0,0x0,8
tick,0x7fff4326feb4,547128,0,0x0,8
tick,0x7fff4326feb4,562562,0,0x0,8
tick,0x7fff4326feb4,577646,0,0x0,8
tick,0x7fff4326feb4,593064,0,0x0,8
tick,0x7fff4326feb4,607801,0,0x0,8
tick,0x7fff4326feb4,622927,0,0x0,8
tick,0x7fff4326feb4,638295,0,0x0,8
tick,0x7fff4326feb4,653461,0,0x0,8
tick,0x7fff4326feb4,668891,0,0x0,8
tick,0x7fff4326feb4,683623,0,0x0,8
tick,0x7fff4326feb4,699097,0,0x0,8
tick,0x7fff4326feb4,714312,0,0x0,8
tick,0x7fff4326feb4,729557,0,0x0,8
tick,0x7fff4326feb4,744697,0,0x0,8
tick,0x7fff4326feb4,759411,0,0x0,8
tick,0x7fff4326feb4,774293,0,0x0,8
tick,0x7fff4326feb4,789448,0,0x0,8
tick,0x7fff4326feb4,805306,0,0x0,8
tick,0x7fff4326feb4,820432,0,0x0,8
tick,0x7fff4326feb4,836198,0,0x0,8
tick,0x7fff4326feb4,852197,0,0x0,8
tick,0x7fff4326feb4,867173,0,0x0,8
tick,0x7fff4326feb4,882520,0,0x0,8
tick,0x7fff4326feb4,897771,0,0x0,8
tick,0x7fff4326feb4,913391,0,0x0,8
tick,0x7fff4326feb4,928259,0,0x0,8
tick,0x7fff4326feb4,943678,0,0x0,8
tick,0x7fff4326feb4,958698,0,0x0,8
tick,0x7fff4326feb4,974718,0,0x0,8
tick,0x7fff4326feb4,990031,0,0x0,8
tick,0x7fff4326feb4,1005661,0,0x0,8
tick,0x7fff4326feb4,1021485,0,0x0,8
tick,0x7fff4326feb4,1037497,0,0x0,8
tick,0x7fff4326feb4,1052275,0,0x0,8
tick,0x7fff4326feb4,1068182,0,0x0,8
tick,0x7fff4326feb4,1083561,0,0x0,8
tick,0x7fff4326feb4,1098579,0,0x0,8
tick,0x7fff4326feb4,1114145,0,0x0,8
tick,0x7fff4326feb4,1128766,0,0x0,8
tick,0x7fff4326feb4,1144373,0,0x0,8
tick,0x7fff4326feb4,1159547,0,0x0,8
tick,0x7fff4326feb4,1174794,0,0x0,8
tick,0x7fff4326feb4,1189453,0,0x0,8
tick,0x7fff4326feb4,1205138,0,0x0,8
tick,0x7fff4326feb4,1220178,0,0x0,8
tick,0x7fff4326feb4,1235186,0,0x0,8
tick,0x7fff4326feb4,1250199,0,0x0,8
tick,0x7fff4326feb4,1265204,0,0x0,8
tick,0x7fff4326feb4,1280973,0,0x0,8
tick,0x7fff4326feb4,1295993,0,0x0,8
tick,0x7fff4326feb4,1311003,0,0x0,8
tick,0x7fff4326feb4,1327019,0,0x0,8
tick,0x7fff4326feb4,1342032,0,0x0,8
tick,0x7fff4326feb4,1357051,0,0x0,8
tick,0x7fff4326feb4,1372066,0,0x0,8
tick,0x7fff4326feb4,1387085,0,0x0,8
tick,0x7fff4326feb4,1403096,0,0x0,8
tick,0x7fff4326feb4,1419292,0,0x0,8
tick,0x7fff4326feb4,1434120,0,0x0,8
tick,0x7fff4326feb4,1450639,0,0x0,8
tick,0x7fff4326feb4,1465696,0,0x0,8
tick,0x7fff4326feb4,1480658,0,0x0,8
tick,0x7fff4326feb4,1496176,0,0x0,8
tick,0x7fff4326feb4,1511192,0,0x0,8
tick,0x7fff4326feb4,1527197,0,0x0,8
tick,0x7fff4326feb4,1542214,0,0x0,8
tick,0x7fff4326feb4,1557121,0,0x0,8
tick,0x7fff4326feb4,1573577,0,0x0,8
tick,0x7fff4326feb4,1588447,0,0x0,8
tick,0x7fff4326feb4,1604079,0,0x0,8
tick,0x7fff4326feb4,1619247,0,0x0,8
tick,0x7fff4326feb4,1634454,0,0x0,8
tick,0x7fff4326feb4,1649671,0,0x0,8
tick,0x7fff4326feb4,1665680,0,0x0,8
tick,0x7fff4326feb4,1680967,0,0x0,8
tick,0x7fff4326feb4,1695654,0,0x0,8
tick,0x7fff4326feb4,1710409,0,0x0,8
tick,0x7fff4326feb4,1726068,0,0x0,8
tick,0x7fff4326feb4,1741676,0,0x0,8
tick,0x7fff4326feb4,1757078,0,0x0,8
tick,0x7fff4326feb4,1773069,0,0x0,8
tick,0x7fff4326feb4,1788251,0,0x0,8
tick,0x7fff4326feb4,1803109,0,0x0,8
tick,0x7fff4326feb4,1817879,0,0x0,8
tick,0x7fff4326feb4,1833386,0,0x0,8
tick,0x7fff4326feb4,1848310,0,0x0,8
tick,0x7fff4326feb4,1863501,0,0x0,8
tick,0x7fff4326feb4,1878879,0,0x0,8
tick,0x7fff4326feb4,1894662,0,0x0,8
tick,0x7fff4326feb4,1909945,0,0x0,8
tick,0x7fff4326feb4,1925734,0,0x0,8
tick,0x7fff4326feb4,1941493,0,0x0,8
tick,0x7fff4326feb4,1956904,0,0x0,8
tick,0x7fff4326feb4,1971799,0,0x0,8
tick,0x7fff4326feb4,1987202,0,0x0,8
tick,0x7fff4326feb4,2002246,0,0x0,8
tick,0x7fff4326feb4,2017284,0,0x0,8
tick,0x7fff4326feb4,2032468,0,0x0,8
tick,0x7fff4326feb4,2047696,0,0x0,8
tick,0x7fff4326feb4,2062365,0,0x0,8
tick,0x7fff4326feb4,2078400,0,0x0,8
tick,0x7fff4326feb4,2093111,0,0x0,8
tick,0x7fff4326feb4,2108611,0,0x0,8
tick,0x7fff4326feb4,2122894,0,0x0,8
tick,0x7fff4326feb4,2138154,0,0x0,8
tick,0x7fff4326feb4,2153355,0,0x0,8
tick,0x7fff4326feb4,2168992,0,0x0,8
tick,0x7fff4326feb4,2184808,0,0x0,8
tick,0x7fff4326feb4,2200866,0,0x0,8
tick,0x7fff4326feb4,2215797,0,0x0,8
tick,0x7fff4326feb4,2231101,0,0x0,8
tick,0x7fff4326feb4,2246025,0,0x0,8
tick,0x7fff4326feb4,2261307,0,0x0,8
tick,0x7fff4326feb4,2276516,0,0x0,8
tick,0x7fff4326feb4,2291770,0,0x0,8
tick,0x7fff4326feb4,2308147,0,0x0,8
tick,0x7fff4326feb4,2323253,0,0x0,8
tick,0x7fff4326feb4,2338268,0,0x0,8
tick,0x7fff4326feb4,2353734,0,0x0,8
tick,0x7fff4326feb4,2369352,0,0x0,8
tick,0x7fff4326feb4,2385499,0,0x0,8
tick,0x7fff4326feb4,2401320,0,0x0,8
tick,0x7fff4326feb4,2416737,0,0x0,8
tick,0x7fff4326feb4,2431976,0,0x0,8
tick,0x7fff4326feb4,2446864,0,0x0,8
tick,0x7fff4326feb4,2462113,0,0x0,8
tick,0x7fff4326feb4,2477330,0,0x0,8
tick,0x7fff4326feb4,2492976,0,0x0,8
tick,0x7fff4326feb4,2508409,0,0x0,8
tick,0x7fff4326feb4,2524392,0,0x0,8
tick,0x7fff4326feb4,2539892,0,0x0,8
tick,0x7fff4326feb4,2556018,0,0x0,8
tick,0x7fff4326feb4,2571836,0,0x0,8
tick,0x7fff4326feb4,2587044,0,0x0,8
tick,0x7fff4326feb4,2602646,0,0x0,8
tick,0x7fff4326feb4,2617658,0,0x0,8
tick,0x7fff4326feb4,2632692,0,0x0,8
tick,0x7fff4326feb4,2647695,0,0x0,8
tick,0x7fff4326feb4,2663708,0,0x0,8
tick,0x7fff4326feb4,2678673,0,0x0,8
tick,0x7fff4326feb4,2694700,0,0x0,8
tick,0x7fff4326feb4,2709690,0,0x0,8
tick,0x7fff4326feb4,2724701,0,0x0,8
tick,0x7fff4326feb4,2739784,0,0x0,8
tick,0x7fff4326feb4,2754744,0,0x0,8
tick,0x7fff4326feb4,2769753,0,0x0,8
tick,0x7fff4326feb4,2784775,0,0x0,8
tick,0x7fff4326feb4,2799774,0,0x0,8
tick,0x7fff4326feb4,2816081,0,0x0,8
tick,0x7fff4326feb4,2831795,0,0x0,8
tick,0x7fff4326feb4,2848211,0,0x0,8
tick,0x7fff4326feb4,2864189,0,0x0,8
tick,0x7fff4326feb4,2879835,0,0x0,8
tick,0x7fff4326feb4,2894858,0,0x0,8
tick,0x7fff4326feb4,2909882,0,0x0,8
tick,0x7fff4326feb4,2924888,0,0x0,8
tick,0x7fff4326feb4,2940896,0,0x0,8
tick,0x7fff4326feb4,2955912,0,0x0,8
tick,0x7fff4326feb4,2970729,0,0x0,8
tick,0x7fff4326feb4,2986724,0,0x0,8
tick,0x7fff4326feb4,3001309,0,0x0,8
tick,0x7fff4326feb4,3016915,0,0x0,8
tick,0x7fff4326feb4,3032713,0,0x0,8
tick,0x7fff4326feb4,3048183,0,0x0,8
tick,0x7fff4326feb4,3063750,0,0x0,8
tick,0x7fff4326feb4,3079195,0,0x0,8
tick,0x7fff4326feb4,3095205,0,0x0,8
tick,0x7fff4326feb4,3111729,0,0x0,8
tick,0x7fff4326feb4,3127236,0,0x0,8
tick,0x7fff4326feb4,3143256,0,0x0,8
tick,0x7fff4326feb4,3158270,0,0x0,8
tick,0x7fff4326feb4,3174277,0,0x0,8
tick,0x7fff4326feb4,3190765,0,0x0,8
tick,0x7fff4326feb4,3206751,0,0x0,8
tick,0x7fff4326feb4,3221734,0,0x0,8
tick,0x7fff4326feb4,3237337,0,0x0,8
tick,0x7fff4326feb4,3252352,0,0x0,8
tick,0x7fff4326feb4,3268359,0,0x0,8
tick,0x7fff4326feb4,3284380,0,0x0,8
tick,0x7fff4326feb4,3300403,0,0x0,8
tick,0x7fff4326feb4,3316728,0,0x0,8
tick,0x7fff4326feb4,3332802,0,0x0,8
tick,0x7fff4326feb4,3348791,0,0x0,8
tick,0x7fff4326feb4,3364799,0,0x0,8
tick,0x7fff4326feb4,3380772,0,0x0,8
tick,0x7fff4326feb4,3396773,0,0x0,8
tick,0x7fff4326feb4,3411815,0,0x0,8
tick,0x7fff4326feb4,3427364,0,0x0,8
tick,0x7fff4326feb4,3443732,0,0x0,8
tick,0x7fff4326feb4,3459770,0,0x0,8
tick,0x7fff4326feb4,3474756,0,0x0,8
tick,0x7fff4326feb4,3490294,0,0x0,8
tick,0x7fff4326feb4,3505758,0,0x0,8
tick,0x7fff4326feb4,3520772,0,0x0,8
tick,0x7fff4326feb4,3536749,0,0x0,8
tick,0x7fff4326feb4,3552230,0,0x0,8
tick,0x7fff4326feb4,3567863,0,0x0,8
tick,0x7fff4326feb4,3583888,0,0x0,8
tick,0x7fff4326feb4,3599907,0,0x0,8
tick,0x7fff4326feb4,3616261,0,0x0,8
tick,0x7fff4326feb4,3631940,0,0x0,8
tick,0x7fff4326feb4,3648373,0,0x0,8
tick,0x7fff4326feb4,3664379,0,0x0,8
tick,0x7fff4326feb4,3680373,0,0x0,8
tick,0x7fff4326feb4,3696366,0,0x0,8
tick,0x7fff4326feb4,3712050,0,0x0,8
tick,0x7fff4326feb4,3728016,0,0x0,8
tick,0x7fff4326feb4,3744038,0,0x0,8
tick,0x7fff4326feb4,3760046,0,0x0,8
tick,0x7fff4326feb4,3776071,0,0x0,8
tick,0x7fff4326feb4,3791074,0,0x0,8
tick,0x7fff4326feb4,3807089,0,0x0,8
tick,0x7fff4326feb4,3823099,0,0x0,8
tick,0x7fff4326feb4,3839117,0,0x0,8
tick,0x7fff4326feb4,3855138,0,0x0,8
tick,0x7fff4326feb4,3870149,0,0x0,8
tick,0x7fff4326feb4,3886502,0,0x0,8
tick,0x7fff4326feb4,3902176,0,0x0,8
tick,0x7fff4326feb4,3917753,0,0x0,8
tick,0x7fff4326feb4,3933757,0,0x0,8
tick,0x7fff4326feb4,3949764,0,0x0,8
tick,0x7fff4326feb4,3965783,0,0x0,8
tick,0x7fff4326feb4,3981799,0,0x0,8
tick,0x7fff4326feb4,3997670,0,0x0,8
tick,0x7fff4326feb4,4012472,0,0x0,8
tick,0x7fff4326feb4,4027872,0,0x0,8
tick,0x7fff4326feb4,4043571,0,0x0,8
tick,0x7fff4326feb4,4059258,0,0x0,8
tick,0x7fff4326feb4,4074323,0,0x0,8
tick,0x7fff4326feb4,4089535,0,0x0,8
tick,0x7fff4326feb4,4104728,0,0x0,8
tick,0x7fff4326feb4,4119940,0,0x0,8
tick,0x7fff4326feb4,4135510,0,0x0,8
tick,0x7fff4326feb4,4151504,0,0x0,8
tick,0x7fff4326feb4,4167527,0,0x0,8
tick,0x7fff4326feb4,4182536,0,0x0,8
tick,0x7fff4326feb4,4197809,0,0x0,8
tick,0x7fff4326feb4,4212883,0,0x0,8
tick,0x7fff4326feb4,4228025,0,0x0,8
tick,0x7fff4326feb4,4243285,0,0x0,8
tick,0x7fff4326feb4,4259334,0,0x0,8
tick,0x7fff4326feb4,4275083,0,0x0,8
tick,0x7fff4326feb4,4290323,0,0x0,8
tick,0x7fff4326feb4,4306341,0,0x0,8
tick,0x7fff4326feb4,4322334,0,0x0,8
tick,0x7fff4326feb4,4338325,0,0x0,8
tick,0x7fff4326feb4,4354330,0,0x0,8
tick,0x7fff4326feb4,4370341,0,0x0,8
tick,0x7fff4326feb4,4386357,0,0x0,8
tick,0x7fff4326feb4,4402858,0,0x0,8
tick,0x7fff4326feb4,4418389,0,0x0,8
tick,0x7fff4326feb4,4434457,0,0x0,8
tick,0x7fff4326feb4,4450816,0,0x0,8
tick,0x7fff4326feb4,4466444,0,0x0,8
tick,0x7fff4326feb4,4482455,0,0x0,8
tick,0x7fff4326feb4,4498466,0,0x0,8
tick,0x7fff4326feb4,4514477,0,0x0,8
tick,0x7fff4326feb4,4530515,0,0x0,8
tick,0x7fff4326feb4,4546521,0,0x0,8
tick,0x7fff4326feb4,4562533,0,0x0,8
tick,0x7fff4326feb4,4578865,0,0x0,8
tick,0x7fff4326feb4,4594909,0,0x0,8
tick,0x7fff4326feb4,4610572,0,0x0,8
tick,0x7fff4326feb4,4626941,0,0x0,8
tick,0x7fff4326feb4,4642955,0,0x0,8
tick,0x7fff4326feb4,4658955,0,0x0,8
tick,0x7fff4326feb4,4674627,0,0x0,8
tick,0x7fff4326feb4,4690997,0,0x0,8
tick,0x7fff4326feb4,4707002,0,0x0,8
tick,0x7fff4326feb4,4723049,0,0x0,8
tick,0x7fff4326feb4,4739082,0,0x0,8
tick,0x7fff4326feb4,4755059,0,0x0,8
tick,0x7fff4326feb4,4769718,0,0x0,8
tick,0x7fff4326feb4,4786090,0,0x0,8
tick,0x7fff4326feb4,4802110,0,0x0,8
tick,0x7fff4326feb4,4817761,0,0x0,8
tick,0x7fff4326feb4,4833774,0,0x0,8
tick,0x7fff4326feb4,4848789,0,0x0,8
tick,0x7fff4326feb4,4864799,0,0x0,8
tick,0x7fff4326feb4,4880810,0,0x0,8
tick,0x7fff4326feb4,4897189,0,0x0,8
tick,0x7fff4326feb4,4912840,0,0x0,8
tick,0x7fff4326feb4,4928860,0,0x0,8
tick,0x7fff4326feb4,4945236,0,0x0,8
tick,0x7fff4326feb4,4961251,0,0x0,8
tick,0x7fff4326feb4,4976903,0,0x0,8
tick,0x7fff4326feb4,4993274,0,0x0,8
tick,0x7fff4326feb4,5008929,0,0x0,8
tick,0x7fff4326feb4,5024946,0,0x0,8
tick,0x7fff4326feb4,5040957,0,0x0,8
tick,0x7fff4326feb4,5056969,0,0x0,8
tick,0x7fff4326feb4,5072986,0,0x0,8
tick,0x7fff4326feb4,5088001,0,0x0,8
tick,0x7fff4326feb4,5104031,0,0x0,8
tick,0x7fff4326feb4,5120039,0,0x0,8
tick,0x7fff4326feb4,5136070,0,0x0,8
tick,0x7fff4326feb4,5152059,0,0x0,8
tick,0x7fff4326feb4,5168433,0,0x0,8
tick,0x7fff4326feb4,5184098,0,0x0,8
tick,0x7fff4326feb4,5200106,0,0x0,8
tick,0x7fff4326feb4,5216117,0,0x0,8
tick,0x7fff4326feb4,5232160,0,0x0,8
tick,0x7fff4326feb4,5248143,0,0x0,8
tick,0x7fff4326feb4,5264163,0,0x0,8
tick,0x7fff4326feb4,5280181,0,0x0,8
tick,0x7fff4326feb4,5296189,0,0x0,8
tick,0x7fff4326feb4,5312202,0,0x0,8
tick,0x7fff4326feb4,5328224,0,0x0,8
tick,0x7fff4326feb4,5344256,0,0x0,8
tick,0x7fff4326feb4,5360244,0,0x0,8
tick,0x7fff4326feb4,5376271,0,0x0,8
tick,0x7fff4326feb4,5392898,0,0x0,8
tick,0x7fff4326feb4,5408297,0,0x0,8
tick,0x7fff4326feb4,5424879,0,0x0,8
tick,0x7fff4326feb4,5440318,0,0x0,8
tick,0x7fff4326feb4,5456857,0,0x0,8
tick,0x7fff4326feb4,5472353,0,0x0,8
tick,0x7fff4326feb4,5488852,0,0x0,8
tick,0x7fff4326feb4,5504380,0,0x0,8
tick,0x7fff4326feb4,5520391,0,0x0,8
tick,0x7fff4326feb4,5536415,0,0x0,8
tick,0x7fff4326feb4,5552427,0,0x0,8
tick,0x7fff4326feb4,5568435,0,0x0,8
tick,0x7fff4326feb4,5584447,0,0x0,8
tick,0x7fff4326feb4,5600480,0,0x0,8
tick,0x7fff4326feb4,5616485,0,0x0,8
tick,0x7fff4326feb4,5631505,0,0x0,8
tick,0x7fff4326feb4,5647510,0,0x0,8
tick,0x7fff4326feb4,5663537,0,0x0,8
tick,0x7fff4326feb4,5679535,0,0x0,8
tick,0x7fff4326feb4,5695553,0,0x0,8
tick,0x7fff4326feb4,5711569,0,0x0,8
tick,0x7fff4326feb4,5727592,0,0x0,8
tick,0x7fff4326feb4,5743620,0,0x0,8
tick,0x7fff4326feb4,5759610,0,0x0,8
tick,0x7fff4326feb4,5775618,0,0x0,8
tick,0x7fff4326feb4,5791646,0,0x0,8
tick,0x7fff4326feb4,5807660,0,0x0,8
tick,0x7fff4326feb4,5823669,0,0x0,8
tick,0x7fff4326feb4,5839691,0,0x0,8
tick,0x7fff4326feb4,5856072,0,0x0,8
tick,0x7fff4326feb4,5871710,0,0x0,8
tick,0x7fff4326feb4,5887732,0,0x0,8
tick,0x7fff4326feb4,5903741,0,0x0,8
tick,0x7fff4326feb4,5919747,0,0x0,8
tick,0x7fff4326feb4,5935774,0,0x0,8
tick,0x7fff4326feb4,5951787,0,0x0,8
tick,0x7fff4326feb4,5967803,0,0x0,8
tick,0x7fff4326feb4,5983817,0,0x0,8
tick,0x7fff4326feb4,5999823,0,0x0,8
tick,0x7fff4326feb4,6015835,0,0x0,8
tick,0x7fff4326feb4,6031850,0,0x0,8
tick,0x7fff4326feb4,6047879,0,0x0,8
tick,0x7fff4326feb4,6063882,0,0x0,8
tick,0x7fff4326feb4,6079905,0,0x0,8
tick,0x7fff4326feb4,6095922,0,0x0,8
tick,0x7fff4326feb4,6111931,0,0x0,8
tick,0x7fff4326feb4,6127942,0,0x0,8
tick,0x7fff4326feb4,6143961,0,0x0,8
tick,0x7fff4326feb4,6159980,0,0x0,8
tick,0x7fff4326feb4,6175989,0,0x0,8
tick,0x7fff4326feb4,6192009,0,0x0,8
tick,0x7fff4326feb4,6208376,0,0x0,8
tick,0x7fff4326feb4,6224031,0,0x0,8
tick,0x7fff4326feb4,6240069,0,0x0,8
tick,0x7fff4326feb4,6256504,0,0x0,8
tick,0x7fff4326feb4,6272085,0,0x0,8
tick,0x7fff4326feb4,6288093,0,0x0,8
tick,0x7fff4326feb4,6304533,0,0x0,8
tick,0x7fff4326feb4,6320124,0,0x0,8
tick,0x7fff4326feb4,6336146,0,0x0,8
tick,0x7fff4326feb4,6352515,0,0x0,8
tick,0x7fff4326feb4,6368571,0,0x0,8
tick,0x7fff4326feb4,6384174,0,0x0,8
tick,0x7fff4326feb4,6400190,0,0x0,8
tick,0x7fff4326feb4,6416223,0,0x0,8
tick,0x7fff4326feb4,6432218,0,0x0,8
tick,0x7fff4326feb4,6448242,0,0x0,8
tick,0x7fff4326feb4,6464255,0,0x0,8
tick,0x7fff4326feb4,6480261,0,0x0,8
tick,0x7fff4326feb4,6496282,0,0x0,8
tick,0x7fff4326feb4,6512302,0,0x0,8
tick,0x7fff4326feb4,6528307,0,0x0,8
tick,0x7fff4326feb4,6544329,0,0x0,8
tick,0x7fff4326feb4,6560348,0,0x0,8
tick,0x7fff4326feb4,6576350,0,0x0,8
tick,0x7fff4326feb4,6592365,0,0x0,8
tick,0x7fff4326feb4,6608388,0,0x0,8
tick,0x7fff4326feb4,6624436,0,0x0,8
tick,0x7fff4326feb4,6640404,0,0x0,8
tick,0x7fff4326feb4,6656425,0,0x0,8
tick,0x7fff4326feb4,6672434,0,0x0,8
tick,0x7fff4326feb4,6688459,0,0x0,8
tick,0x7fff4326feb4,6704475,0,0x0,8
tick,0x7fff4326feb4,6720479,0,0x0,8
tick,0x7fff4326feb4,6736495,0,0x0,8
tick,0x7fff4326feb4,6751507,0,0x0,8
tick,0x7fff4326feb4,6766845,0,0x0,8
tick,0x7fff4326feb4,6782760,0,0x0,8
tick,0x7fff4326feb4,6798762,0,0x0,8
tick,0x7fff4326feb4,6813780,0,0x0,8
tick,0x7fff4326feb4,6829783,0,0x0,8
tick,0x7fff4326feb4,6845802,0,0x0,8
tick,0x7fff4326feb4,6860825,0,0x0,8
tick,0x7fff4326feb4,6876822,0,0x0,8
tick,0x7fff4326feb4,6892838,0,0x0,8
tick,0x7fff4326feb4,6908856,0,0x0,8
tick,0x7fff4326feb4,6924882,0,0x0,8
tick,0x7fff4326feb4,6940885,0,0x0,8
tick,0x7fff4326feb4,6956899,0,0x0,8
tick,0x7fff4326feb4,6972933,0,0x0,8
tick,0x7fff4326feb4,6987928,0,0x0,8
tick,0x7fff4326feb4,7003891,0,0x0,8
tick,0x7fff4326feb4,7019899,0,0x0,8
tick,0x7fff4326feb4,7035904,0,0x0,8
tick,0x7fff4326feb4,7050926,0,0x0,8
tick,0x7fff4326feb4,7066944,0,0x0,8
tick,0x7fff4326feb4,7082959,0,0x0,8
tick,0x7fff4326feb4,7097980,0,0x0,8
tick,0x7fff4326feb4,7113985,0,0x0,8
tick,0x7fff4326feb4,7130003,0,0x0,8
tick,0x7fff4326feb4,7146019,0,0x0,8
tick,0x7fff4326feb4,7162037,0,0x0,8
tick,0x7fff4326feb4,7177051,0,0x0,8
tick,0x7fff4326feb4,7193059,0,0x0,8
tick,0x7fff4326feb4,7209071,0,0x0,8
tick,0x7fff4326feb4,7225087,0,0x0,8
tick,0x7fff4326feb4,7241098,0,0x0,8
tick,0x7fff4326feb4,7257115,0,0x0,8
tick,0x7fff4326feb4,7272193,0,0x0,8
tick,0x7fff4326feb4,7288147,0,0x0,8
tick,0x7fff4326feb4,7304149,0,0x0,8
tick,0x7fff4326feb4,7320169,0,0x0,8
tick,0x7fff4326feb4,7336181,0,0x0,8
tick,0x7fff4326feb4,7352534,0,0x0,8
tick,0x7fff4326feb4,7368555,0,0x0,8
tick,0x7fff4326feb4,7383607,0,0x0,8
tick,0x7fff4326feb4,7399635,0,0x0,8
tick,0x7fff4326feb4,7415590,0,0x0,8
tick,0x7fff4326feb4,7431605,0,0x0,8
tick,0x7fff4326feb4,7447653,0,0x0,8
tick,0x7fff4326feb4,7463637,0,0x0,8
tick,0x7fff4326feb4,7479330,0,0x0,8
tick,0x7fff4326feb4,7495941,0,0x0,8
tick,0x7fff4326feb4,7511956,0,0x0,8
tick,0x7fff4326feb4,7527529,0,0x0,8
tick,0x7fff4326feb4,7543123,0,0x0,8
tick,0x7fff4326feb4,7558528,0,0x0,8
tick,0x7fff4326feb4,7574140,0,0x0,8
tick,0x7fff4326feb4,7590568,0,0x0,8
tick,0x7fff4326feb4,7606171,0,0x0,8
tick,0x7fff4326feb4,7622192,0,0x0,8
tick,0x7fff4326feb4,7638212,0,0x0,8
tick,0x7fff4326feb4,7654536,0,0x0,8
tick,0x7fff4326feb4,7669558,0,0x0,8
tick,0x7fff4326feb4,7685244,0,0x0,8
tick,0x7fff4326feb4,7701586,0,0x0,8
tick,0x7fff4326feb4,7716264,0,0x0,8
tick,0x7fff4326feb4,7732289,0,0x0,8
tick,0x7fff4326feb4,7747300,0,0x0,8
tick,0x7fff4326feb4,7763634,0,0x0,8
tick,0x7fff4326feb4,7779712,0,0x0,8
tick,0x7fff4326feb4,7795348,0,0x0,8
tick,0x7fff4326feb4,7811355,0,0x0,8
tick,0x7fff4326feb4,7827371,0,0x0,8
tick,0x7fff4326feb4,7843382,0,0x0,8
tick,0x7fff4326feb4,7858738,0,0x0,8
tick,0x7fff4326feb4,7875108,0,0x0,8
tick,0x7fff4326feb4,7890144,0,0x0,8
tick,0x7fff4326feb4,7905212,0,0x0,8
tick,0x7fff4326feb4,7920413,0,0x0,8
tick,0x7fff4326feb4,7936320,0,0x0,8
tick,0x7fff4326feb4,7951614,0,0x0,8
tick,0x7fff4326feb4,7967192,0,0x0,8
tick,0x7fff4326feb4,7982430,0,0x0,8
tick,0x7fff4326feb4,7998026,0,0x0,8
tick,0x7fff4326feb4,8013180,0,0x0,8
tick,0x7fff4326feb4,8028680,0,0x0,8
tick,0x7fff4326feb4,8044040,0,0x0,8
tick,0x7fff4326feb4,8060070,0,0x0,8
tick,0x7fff4326feb4,8075913,0,0x0,8
tick,0x7fff4326feb4,8091747,0,0x0,8
tick,0x7fff4326feb4,8107764,0,0x0,8
tick,0x7fff4326feb4,8123772,0,0x0,8
tick,0x7fff4326feb4,8139772,0,0x0,8
tick,0x7fff4326feb4,8155793,0,0x0,8
tick,0x7fff4326feb4,8171799,0,0x0,8
tick,0x7fff4326feb4,8187834,0,0x0,8
tick,0x7fff4326feb4,8203832,0,0x0,8
tick,0x7fff4326feb4,8219840,0,0x0,8
tick,0x7fff4326feb4,8235862,0,0x0,8
tick,0x7fff4326feb4,8251873,0,0x0,8
tick,0x7fff4326feb4,8267897,0,0x0,8
tick,0x7fff4326feb4,8283930,0,0x0,8
tick,0x7fff4326feb4,8299232,0,0x0,8
tick,0x7fff4326feb4,8314752,0,0x0,8
tick,0x7fff4326feb4,8330476,0,0x0,8
tick,0x7fff4326feb4,8345720,0,0x0,8
tick,0x7fff4326feb4,8361402,0,0x0,8
tick,0x7fff4326feb4,8377195,0,0x0,8
tick,0x7fff4326feb4,8391848,0,0x0,8
tick,0x7fff4326feb4,8406997,0,0x0,8
tick,0x7fff4326feb4,8423236,0,0x0,8
tick,0x7fff4326feb4,8438764,0,0x0,8
tick,0x7fff4326feb4,8453832,0,0x0,8
tick,0x7fff4326feb4,8469040,0,0x0,8
tick,0x7fff4326feb4,8484416,0,0x0,8
tick,0x7fff4326feb4,8500150,0,0x0,8
tick,0x7fff4326feb4,8516235,0,0x0,8
tick,0x7fff4326feb4,8532348,0,0x0,8
tick,0x7fff4326feb4,8548439,0,0x0,8
tick,0x7fff4326feb4,8563746,0,0x0,8
tick,0x7fff4326feb4,8579845,0,0x0,8
tick,0x7fff4326feb4,8595004,0,0x0,8
tick,0x7fff4326feb4,8610361,0,0x0,8
tick,0x7fff4326feb4,8626672,0,0x0,8
tick,0x7fff4326feb4,8641716,0,0x0,8
tick,0x7fff4326feb4,8656900,0,0x0,8
tick,0x7fff4326feb4,8672640,0,0x0,8
tick,0x7fff4326feb4,8688220,0,0x0,8
tick,0x7fff4326feb4,8703865,0,0x0,8
tick,0x7fff4326feb4,8719001,0,0x0,8
tick,0x7fff4326feb4,8734521,0,0x0,8
tick,0x7fff4326feb4,8750369,0,0x0,8
tick,0x7fff4326feb4,8766135,0,0x0,8
tick,0x7fff4326feb4,8781618,0,0x0,8
tick,0x7fff4326feb4,8797643,0,0x0,8
tick,0x7fff4326feb4,8812603,0,0x0,8
tick,0x7fff4326feb4,8827743,0,0x0,8
tick,0x7fff4326feb4,8843186,0,0x0,8
tick,0x7fff4326feb4,8858424,0,0x0,8
tick,0x7fff4326feb4,8874136,0,0x0,8
tick,0x7fff4326feb4,8889789,0,0x0,8
tick,0x7fff4326feb4,8906057,0,0x0,8
tick,0x7fff4326feb4,8921050,0,0x0,8
tick,0x7fff4326feb4,8936757,0,0x0,8
tick,0x7fff4326feb4,8952904,0,0x0,8
tick,0x7fff4326feb4,8968765,0,0x0,8
tick,0x7fff4326feb4,8983779,0,0x0,8
tick,0x7fff4326feb4,8998846,0,0x0,8
tick,0x7fff4326feb4,9014499,0,0x0,8
tick,0x7fff4326feb4,9030475,0,0x0,8
tick,0x7fff4326feb4,9045935,0,0x0,8
tick,0x7fff4326feb4,9061974,0,0x0,8
tick,0x7fff4326feb4,9077840,0,0x0,8
tick,0x7fff4326feb4,9093288,0,0x0,8
tick,0x7fff4326feb4,9109205,0,0x0,8
tick,0x7fff4326feb4,9124061,0,0x0,8
tick,0x7fff4326feb4,9139233,0,0x0,8
tick,0x7fff4326feb4,9155244,0,0x0,8
tick,0x7fff4326feb4,9170136,0,0x0,8
tick,0x7fff4326feb4,9185241,0,0x0,8
tick,0x7fff4326feb4,9200603,0,0x0,8
tick,0x7fff4326feb4,9216237,0,0x0,8
tick,0x7fff4326feb4,9232061,0,0x0,8
tick,0x7fff4326feb4,9247217,0,0x0,8
tick,0x7fff4326feb4,9263226,0,0x0,8
tick,0x7fff4326feb4,9279030,0,0x0,8
tick,0x7fff4326feb4,9294218,0,0x0,8
tick,0x7fff4326feb4,9310253,0,0x0,8
tick,0x7fff4326feb4,9325705,0,0x0,8
tick,0x7fff4326feb4,9341677,0,0x0,8
tick,0x7fff4326feb4,9357718,0,0x0,8
tick,0x7fff4326feb4,9373598,0,0x0,8
tick,0x7fff4326feb4,9389609,0,0x0,8
tick,0x7fff4326feb4,9405643,0,0x0,8
tick,0x7fff4326feb4,9420670,0,0x0,8
tick,0x7fff4326feb4,9435981,0,0x0,8
tick,0x7fff4326feb4,9451385,0,0x0,8
tick,0x7fff4326feb4,9466378,0,0x0,8
tick,0x7fff4326feb4,9482312,0,0x0,8
tick,0x7fff4326feb4,9497595,0,0x0,8
tick,0x7fff4326feb4,9512610,0,0x0,8
tick,0x7fff4326feb4,9527935,0,0x0,8
tick,0x7fff4326feb4,9543896,0,0x0,8
tick,0x7fff4326feb4,9559598,0,0x0,8
tick,0x7fff4326feb4,9575615,0,0x0,8
tick,0x7fff4326feb4,9590573,0,0x0,8
tick,0x7fff4326feb4,9606688,0,0x0,8
tick,0x7fff4326feb4,9622003,0,0x0,8
tick,0x7fff4326feb4,9637618,0,0x0,8
tick,0x7fff4326feb4,9652918,0,0x0,8
tick,0x7fff4326feb4,9668605,0,0x0,8
tick,0x7fff4326feb4,9683277,0,0x0,8
tick,0x7fff4326feb4,9698284,0,0x0,8
tick,0x7fff4326feb4,9714300,0,0x0,8
tick,0x7fff4326feb4,9729597,0,0x0,8
tick,0x7fff4326feb4,9744915,0,0x0,8
tick,0x7fff4326feb4,9760255,0,0x0,8
tick,0x7fff4326feb4,9776263,0,0x0,8
tick,0x7fff4326feb4,9792289,0,0x0,8
tick,0x7fff4326feb4,9808309,0,0x0,8
tick,0x7fff4326feb4,9824332,0,0x0,8
tick,0x7fff4326feb4,9840318,0,0x0,8
tick,0x7fff4326feb4,9856333,0,0x0,8
tick,0x7fff4326feb4,9872223,0,0x0,8
tick,0x7fff4326feb4,9888185,0,0x0,8
tick,0x7fff4326feb4,9904208,0,0x0,8
tick,0x7fff4326feb4,9920209,0,0x0,8
tick,0x7fff4326feb4,9936228,0,0x0,8
tick,0x7fff4326feb4,9952242,0,0x0,8
tick,0x7fff4326feb4,9967643,0,0x0,8
tick,0x7fff4326feb4,9983078,0,0x0,8
tick,0x7fff4326feb4,9998030,0,0x0,8
tick,0x7fff4326feb4,10013589,0,0x0,8
tick,0x7fff4326feb4,10029587,0,0x0,8
tick,0x7fff4326feb4,10045591,0,0x0,8
tick,0x7fff4326feb4,10060605,0,0x0,8
tick,0x7fff4326feb4,10076628,0,0x0,8
tick,0x7fff4326feb4,10092690,0,0x0,8
tick,0x7fff4326feb4,10107920,0,0x0,8
tick,0x7fff4326feb4,10123196,0,0x0,8
tick,0x7fff4326feb4,10138543,0,0x0,8
tick,0x7fff4326feb4,10154246,0,0x0,8
tick,0x7fff4326feb4,10169821,0,0x0,8
tick,0x7fff4326feb4,10185149,0,0x0,8
tick,0x7fff4326feb4,10200535,0,0x0,8
tick,0x7fff4326feb4,10216064,0,0x0,8
tick,0x7fff4326feb4,10230971,0,0x0,8
tick,0x7fff4326feb4,10245979,0,0x0,8
tick,0x7fff4326feb4,10261667,0,0x0,8
tick,0x7fff4326feb4,10277692,0,0x0,8
tick,0x7fff4326feb4,10293601,0,0x0,8
tick,0x7fff4326feb4,10309604,0,0x0,8
tick,0x7fff4326feb4,10325647,0,0x0,8
tick,0x7fff4326feb4,10341588,0,0x0,8
tick,0x7fff4326feb4,10356627,0,0x0,8
tick,0x7fff4326feb4,10371930,0,0x0,8
tick,0x7fff4326feb4,10387354,0,0x0,8
tick,0x7fff4326feb4,10402586,0,0x0,8
tick,0x7fff4326feb4,10418019,0,0x0,8
tick,0x7fff4326feb4,10433939,0,0x0,8
tick,0x7fff4326feb4,10449250,0,0x0,8
tick,0x7fff4326feb4,10464858,0,0x0,8
tick,0x7fff4326feb4,10480851,0,0x0,8
tick,0x7fff4326feb4,10497128,0,0x0,8
tick,0x7fff4326feb4,10512680,0,0x0,8
tick,0x7fff4326feb4,10528149,0,0x0,8
tick,0x7fff4326feb4,10543816,0,0x0,8
tick,0x7fff4326feb4,10559393,0,0x0,8
tick,0x7fff4326feb4,10575115,0,0x0,8
tick,0x7fff4326feb4,10590824,0,0x0,8
tick,0x7fff4326feb4,10606277,0,0x0,8
tick,0x7fff4326feb4,10621935,0,0x0,8
tick,0x7fff4326feb4,10636593,0,0x0,8
tick,0x7fff4326feb4,10651831,0,0x0,8
tick,0x7fff4326feb4,10667925,0,0x0,8
tick,0x7fff4326feb4,10682786,0,0x0,8
tick,0x7fff4326feb4,10698299,0,0x0,8
tick,0x7fff4326feb4,10713638,0,0x0,8
tick,0x7fff4326feb4,10729016,0,0x0,8
tick,0x7fff4326feb4,10744598,0,0x0,8
tick,0x7fff4326feb4,10759629,0,0x0,8
tick,0x7fff4326feb4,10775613,0,0x0,8
tick,0x7fff4326feb4,10791630,0,0x0,8
tick,0x7fff4326feb4,10807625,0,0x0,8
tick,0x7fff4326feb4,10823660,0,0x0,8
tick,0x7fff4326feb4,10839091,0,0x0,8
tick,0x7fff4326feb4,10854633,0,0x0,8
tick,0x7fff4326feb4,10870635,0,0x0,8
tick,0x7fff4326feb4,10886052,0,0x0,8
tick,0x7fff4326feb4,10901605,0,0x0,8
tick,0x7fff4326feb4,10917605,0,0x0,8
tick,0x7fff4326feb4,10932505,0,0x0,8
tick,0x7fff4326feb4,10948091,0,0x0,8
tick,0x7fff4326feb4,10963586,0,0x0,8
tick,0x7fff4326feb4,10978747,0,0x0,8
tick,0x7fff4326feb4,10994696,0,0x0,8
tick,0x7fff4326feb4,11010414,0,0x0,8
tick,0x7fff4326feb4,11026321,0,0x0,8
tick,0x7fff4326feb4,11041624,0,0x0,8
tick,0x7fff4326feb4,11056720,0,0x0,8
tick,0x7fff4326feb4,11071890,0,0x0,8
tick,0x7fff4326feb4,11087020,0,0x0,8
tick,0x7fff4326feb4,11102036,0,0x0,8
tick,0x7fff4326feb4,11117192,0,0x0,8
tick,0x7fff4326feb4,11132582,0,0x0,8
tick,0x7fff4326feb4,11148191,0,0x0,8
tick,0x7fff4326feb4,11163590,0,0x0,8
tick,0x7fff4326feb4,11179603,0,0x0,8
tick,0x7fff4326feb4,11195348,0,0x0,8
tick,0x7fff4326feb4,11210623,0,0x0,8
tick,0x7fff4326feb4,11226596,0,0x0,8
tick,0x7fff4326feb4,11242619,0,0x0,8
tick,0x7fff4326feb4,11258274,0,0x0,8
tick,0x7fff4326feb4,11273923,0,0x0,8
tick,0x7fff4326feb4,11289637,0,0x0,8
tick,0x7fff4326feb4,11305009,0,0x0,8
tick,0x7fff4326feb4,11319955,0,0x0,8
tick,0x7fff4326feb4,11335972,0,0x0,8
tick,0x7fff4326feb4,11351664,0,0x0,8
tick,0x7fff4326feb4,11367055,0,0x0,8
tick,0x7fff4326feb4,11382614,0,0x0,8
tick,0x7fff4326feb4,11398053,0,0x0,8
tick,0x7fff4326feb4,11413595,0,0x0,8
tick,0x7fff4326feb4,11429600,0,0x0,8
tick,0x7fff4326feb4,11445604,0,0x0,8
tick,0x7fff4326feb4,11461586,0,0x0,8
tick,0x7fff4326feb4,11477685,0,0x0,8
tick,0x7fff4326feb4,11493692,0,0x0,8
tick,0x7fff4326feb4,11509594,0,0x0,8
tick,0x7fff4326feb4,11525621,0,0x0,8
tick,0x7fff4326feb4,11541598,0,0x0,8
tick,0x7fff4326feb4,11557587,0,0x0,8
tick,0x7fff4326feb4,11573637,0,0x0,8
tick,0x7fff4326feb4,11589614,0,0x0,8
tick,0x7fff4326feb4,11605609,0,0x0,8
tick,0x7fff4326feb4,11620621,0,0x0,8
tick,0x7fff4326feb4,11636126,0,0x0,8
tick,0x7fff4326feb4,11651441,0,0x0,8
tick,0x7fff4326feb4,11666248,0,0x0,8
tick,0x7fff4326feb4,11682115,0,0x0,8
tick,0x7fff4326feb4,11697450,0,0x0,8
tick,0x7fff4326feb4,11713119,0,0x0,8
tick,0x7fff4326feb4,11729104,0,0x0,8
tick,0x7fff4326feb4,11744216,0,0x0,8
tick,0x7fff4326feb4,11760281,0,0x0,8
tick,0x7fff4326feb4,11776288,0,0x0,8
tick,0x7fff4326feb4,11791616,0,0x0,8
tick,0x7fff4326feb4,11807216,0,0x0,8
tick,0x7fff4326feb4,11823351,0,0x0,8
tick,0x7fff4326feb4,11838974,0,0x0,8
tick,0x7fff4326feb4,11854449,0,0x0,8
tick,0x7fff4326feb4,11869793,0,0x0,8
tick,0x7fff4326feb4,11885590,0,0x0,8
tick,0x7fff4326feb4,11901602,0,0x0,8
tick,0x7fff4326feb4,11917641,0,0x0,8
tick,0x7fff4326feb4,11933581,0,0x0,8
tick,0x7fff4326feb4,11948284,0,0x0,8
tick,0x7fff4326feb4,11963576,0,0x0,8
tick,0x7fff4326feb4,11979385,0,0x0,8
tick,0x7fff4326feb4,11994070,0,0x0,8
tick,0x7fff4326feb4,12009629,0,0x0,8
tick,0x7fff4326feb4,12025684,0,0x0,8
tick,0x7fff4326feb4,12041157,0,0x0,8
tick,0x7fff4326feb4,12056654,0,0x0,8
tick,0x7fff4326feb4,12072021,0,0x0,8
tick,0x7fff4326feb4,12088003,0,0x0,8
tick,0x7fff4326feb4,12103388,0,0x0,8
tick,0x7fff4326feb4,12119219,0,0x0,8
tick,0x7fff4326feb4,12134363,0,0x0,8
tick,0x7fff4326feb4,12149541,0,0x0,8
tick,0x7fff4326feb4,12164928,0,0x0,8
tick,0x7fff4326feb4,12180369,0,0x0,8
tick,0x7fff4326feb4,12196020,0,0x0,8
tick,0x7fff4326feb4,12211341,0,0x0,8
tick,0x7fff4326feb4,12226779,0,0x0,8
tick,0x7fff4326feb4,12242150,0,0x0,8
tick,0x7fff4326feb4,12257554,0,0x0,8
tick,0x7fff4326feb4,12273133,0,0x0,8
tick,0x7fff4326feb4,12289137,0,0x0,8
tick,0x7fff4326feb4,12304735,0,0x0,8
tick,0x7fff4326feb4,12320231,0,0x0,8
tick,0x7fff4326feb4,12336477,0,0x0,8
tick,0x7fff4326feb4,12352296,0,0x0,8
tick,0x7fff4326feb4,12367818,0,0x0,8
tick,0x7fff4326feb4,12383248,0,0x0,8
tick,0x7fff4326feb4,12398697,0,0x0,8
tick,0x7fff4326feb4,12414242,0,0x0,8
tick,0x7fff4326feb4,12430264,0,0x0,8
tick,0x7fff4326feb4,12445616,0,0x0,8
tick,0x7fff4326feb4,12461586,0,0x0,8
tick,0x7fff4326feb4,12477669,0,0x0,8
tick,0x7fff4326feb4,12493027,0,0x0,8
tick,0x7fff4326feb4,12508418,0,0x0,8
tick,0x7fff4326feb4,12524020,0,0x0,8
tick,0x7fff4326feb4,12539027,0,0x0,8
tick,0x7fff4326feb4,12554656,0,0x0,8
tick,0x7fff4326feb4,12570264,0,0x0,8
tick,0x7fff4326feb4,12585691,0,0x0,8
tick,0x7fff4326feb4,12601303,0,0x0,8
tick,0x7fff4326feb4,12616671,0,0x0,8
tick,0x7fff4326feb4,12632694,0,0x0,8
tick,0x7fff4326feb4,12648687,0,0x0,8
tick,0x7fff4326feb4,12664747,0,0x0,8
tick,0x7fff4326feb4,12680896,0,0x0,8
tick,0x7fff4326feb4,12696242,0,0x0,8
tick,0x7fff4326feb4,12711256,0,0x0,8
tick,0x7fff4326feb4,12726926,0,0x0,8
tick,0x7fff4326feb4,12742269,0,0x0,8
tick,0x7fff4326feb4,12758512,0,0x0,8
tick,0x7fff4326feb4,12774541,0,0x0,8
tick,0x7fff4326feb4,12790907,0,0x0,8
tick,0x7fff4326feb4,12806757,0,0x0,8
tick,0x7fff4326feb4,12822640,0,0x0,8
tick,0x7fff4326feb4,12838242,0,0x0,8
tick,0x7fff4326feb4,12853926,0,0x0,8
tick,0x7fff4326feb4,12869988,0,0x0,8
tick,0x7fff4326feb4,12885912,0,0x0,8
tick,0x7fff4326feb4,12901888,0,0x0,8
tick,0x7fff4326feb4,12918073,0,0x0,8
tick,0x7fff4326feb4,12934033,0,0x0,8
tick,0x7fff4326feb4,12950043,0,0x0,8
tick,0x7fff4326feb4,12965590,0,0x0,8
tick,0x7fff4326feb4,12981592,0,0x0,8
tick,0x7fff4326feb4,12997588,0,0x0,8
tick,0x7fff4326feb4,13012578,0,0x0,8
tick,0x7fff4326feb4,13028613,0,0x0,8
tick,0x7fff4326feb4,13044602,0,0x0,8
tick,0x7fff4326feb4,13060690,0,0x0,8
tick,0x7fff4326feb4,13076613,0,0x0,8
tick,0x7fff4326feb4,13092022,0,0x0,8
tick,0x7fff4326feb4,13107305,0,0x0,8
tick,0x7fff4326feb4,13122391,0,0x0,8
tick,0x7fff4326feb4,13138663,0,0x0,8
tick,0x7fff4326feb4,13154161,0,0x0,8
tick,0x7fff4326feb4,13169705,0,0x0,8
tick,0x7fff4326feb4,13185684,0,0x0,8
tick,0x7fff4326feb4,13201495,0,0x0,8
tick,0x7fff4326feb4,13217791,0,0x0,8
tick,0x7fff4326feb4,13233812,0,0x0,8
tick,0x7fff4326feb4,13249173,0,0x0,8
tick,0x7fff4326feb4,13265149,0,0x0,8
tick,0x7fff4326feb4,13281144,0,0x0,8
tick,0x7fff4326feb4,13297147,0,0x0,8
tick,0x7fff4326feb4,13311834,0,0x0,8
tick,0x7fff4326feb4,13327699,0,0x0,8
tick,0x7fff4326feb4,13343584,0,0x0,8
tick,0x7fff4326feb4,13359175,0,0x0,8
tick,0x7fff4326feb4,13375169,0,0x0,8
tick,0x7fff4326feb4,13390109,0,0x0,8
tick,0x7fff4326feb4,13406351,0,0x0,8
tick,0x7fff4326feb4,13422338,0,0x0,8
tick,0x7fff4326feb4,13437817,0,0x0,8
tick,0x7fff4326feb4,13453612,0,0x0,8
tick,0x7fff4326feb4,13469286,0,0x0,8
tick,0x7fff4326feb4,13485358,0,0x0,8
tick,0x7fff4326feb4,13501662,0,0x0,8
tick,0x7fff4326feb4,13517359,0,0x0,8
tick,0x7fff4326feb4,13532559,0,0x0,8
tick,0x7fff4326feb4,13548094,0,0x0,8
tick,0x7fff4326feb4,13563431,0,0x0,8
tick,0x7fff4326feb4,13579303,0,0x0,8
tick,0x7fff4326feb4,13594621,0,0x0,8
tick,0x7fff4326feb4,13610087,0,0x0,8
tick,0x7fff4326feb4,13625173,0,0x0,8
tick,0x7fff4326feb4,13641456,0,0x0,8
tick,0x7fff4326feb4,13656457,0,0x0,8
tick,0x7fff4326feb4,13672504,0,0x0,8
tick,0x7fff4326feb4,13687812,0,0x0,8
tick,0x7fff4326feb4,13703736,0,0x0,8
tick,0x7fff4326feb4,13719228,0,0x0,8
tick,0x7fff4326feb4,13734613,0,0x0,8
tick,0x7fff4326feb4,13750279,0,0x0,8
tick,0x7fff4326feb4,13765934,0,0x0,8
tick,0x7fff4326feb4,13781658,0,0x0,8
tick,0x7fff4326feb4,13797291,0,0x0,8
tick,0x7fff4326feb4,13812634,0,0x0,8
tick,0x7fff4326feb4,13828318,0,0x0,8
tick,0x7fff4326feb4,13843703,0,0x0,8
tick,0x7fff4326feb4,13860118,0,0x0,8
tick,0x7fff4326feb4,13875739,0,0x0,8
tick,0x7fff4326feb4,13891117,0,0x0,8
tick,0x7fff4326feb4,13906338,0,0x0,8
tick,0x7fff4326feb4,13922664,0,0x0,8
tick,0x7fff4326feb4,13939005,0,0x0,8
tick,0x7fff4326feb4,13955202,0,0x0,8
tick,0x7fff4326feb4,13970228,0,0x0,8
tick,0x7fff4326feb4,13985862,0,0x0,8
tick,0x7fff4326feb4,14001016,0,0x0,8
tick,0x7fff4326feb4,14016387,0,0x0,8
tick,0x7fff4326feb4,14031634,0,0x0,8
tick,0x7fff4326feb4,14047588,0,0x0,8
tick,0x7fff4326feb4,14063646,0,0x0,8
tick,0x7fff4326feb4,14079131,0,0x0,8
tick,0x7fff4326feb4,14094676,0,0x0,8
tick,0x7fff4326feb4,14110261,0,0x0,8
tick,0x7fff4326feb4,14126136,0,0x0,8
tick,0x7fff4326feb4,14141661,0,0x0,8
tick,0x7fff4326feb4,14157570,0,0x0,8
tick,0x7fff4326feb4,14173595,0,0x0,8
tick,0x7fff4326feb4,14189592,0,0x0,8
tick,0x7fff4326feb4,14205601,0,0x0,8
tick,0x7fff4326feb4,14221100,0,0x0,8
tick,0x7fff4326feb4,14236347,0,0x0,8
tick,0x7fff4326feb4,14251506,0,0x0,8
tick,0x7fff4326feb4,14267335,0,0x0,8
tick,0x7fff4326feb4,14282634,0,0x0,8
tick,0x7fff4326feb4,14298247,0,0x0,8
tick,0x7fff4326feb4,14313619,0,0x0,8
tick,0x7fff4326feb4,14329612,0,0x0,8
tick,0x7fff4326feb4,14344831,0,0x0,8
tick,0x7fff4326feb4,14360541,0,0x0,8
tick,0x7fff4326feb4,14376045,0,0x0,8
tick,0x7fff4326feb4,14391448,0,0x0,8
tick,0x7fff4326feb4,14406673,0,0x0,8
tick,0x7fff4326feb4,14422116,0,0x0,8
tick,0x7fff4326feb4,14437618,0,0x0,8
tick,0x7fff4326feb4,14452626,0,0x0,8
tick,0x7fff4326feb4,14467840,0,0x0,8
tick,0x7fff4326feb4,14484103,0,0x0,8
tick,0x7fff4326feb4,14500058,0,0x0,8
tick,0x7fff4326feb4,14516348,0,0x0,8
tick,0x7fff4326feb4,14531977,0,0x0,8
tick,0x7fff4326feb4,14547737,0,0x0,8
tick,0x7fff4326feb4,14563173,0,0x0,8
tick,0x7fff4326feb4,14578500,0,0x0,8
tick,0x7fff4326feb4,14594105,0,0x0,8
tick,0x7fff4326feb4,14610423,0,0x0,8
tick,0x7fff4326feb4,14626073,0,0x0,8
tick,0x7fff4326feb4,14641045,0,0x0,8
tick,0x7fff4326feb4,14656044,0,0x0,8
tick,0x7fff4326feb4,14671041,0,0x0,8
tick,0x7fff4326feb4,14686497,0,0x0,8
tick,0x7fff4326feb4,14701593,0,0x0,8
tick,0x7fff4326feb4,14717587,0,0x0,8
tick,0x7fff4326feb4,14733258,0,0x0,8
tick,0x7fff4326feb4,14749238,0,0x0,8
tick,0x7fff4326feb4,14764314,0,0x0,8
tick,0x7fff4326feb4,14779629,0,0x0,8
tick,0x7fff4326feb4,14794858,0,0x0,8
tick,0x7fff4326feb4,14810482,0,0x0,8
tick,0x7fff4326feb4,14826134,0,0x0,8
tick,0x7fff4326feb4,14841834,0,0x0,8
tick,0x7fff4326feb4,14856995,0,0x0,8
tick,0x7fff4326feb4,14872776,0,0x0,8
tick,0x7fff4326feb4,14887999,0,0x0,8
tick,0x7fff4326feb4,14903677,0,0x0,8
tick,0x7fff4326feb4,14919916,0,0x0,8
tick,0x7fff4326feb4,14935377,0,0x0,8
tick,0x7fff4326feb4,14951104,0,0x0,8
tick,0x7fff4326feb4,14966795,0,0x0,8
tick,0x7fff4326feb4,14982223,0,0x0,8
tick,0x7fff4326feb4,14998289,0,0x0,8
tick,0x7fff4326feb4,15013804,0,0x0,8
tick,0x7fff4326feb4,15028897,0,0x0,8
tick,0x7fff4326feb4,15044435,0,0x0,8
tick,0x7fff4326feb4,15059753,0,0x0,8
tick,0x7fff4326feb4,15074996,0,0x0,8
tick,0x7fff4326feb4,15090300,0,0x0,8
tick,0x7fff4326feb4,15106002,0,0x0,8
tick,0x7fff4326feb4,15121309,0,0x0,8
tick,0x7fff4326feb4,15136485,0,0x0,8
tick,0x7fff4326feb4,15152745,0,0x0,8
tick,0x7fff4326feb4,15167999,0,0x0,8
tick,0x7fff4326feb4,15183506,0,0x0,8
tick,0x7fff4326feb4,15198772,0,0x0,8
tick,0x7fff4326feb4,15214147,0,0x0,8
tick,0x7fff4326feb4,15230097,0,0x0,8
tick,0x7fff4326feb4,15245705,0,0x0,8
tick,0x7fff4326feb4,15261753,0,0x0,8
tick,0x7fff4326feb4,15277519,0,0x0,8
tick,0x7fff4326feb4,15293422,0,0x0,8
tick,0x7fff4326feb4,15309015,0,0x0,8
tick,0x7fff4326feb4,15324534,0,0x0,8
tick,0x7fff4326feb4,15339999,0,0x0,8
tick,0x7fff4326feb4,15356316,0,0x0,8
tick,0x7fff4326feb4,15372614,0,0x0,8
tick,0x7fff4326feb4,15388134,0,0x0,8
tick,0x7fff4326feb4,15403595,0,0x0,8
tick,0x7fff4326feb4,15419850,0,0x0,8
tick,0x7fff4326feb4,15435576,0,0x0,8
tick,0x7fff4326feb4,15451121,0,0x0,8
tick,0x7fff4326feb4,15467432,0,0x0,8
tick,0x7fff4326feb4,15483005,0,0x0,8
tick,0x7fff4326feb4,15499035,0,0x0,8
tick,0x7fff4326feb4,15515300,0,0x0,8
tick,0x7fff4326feb4,15530050,0,0x0,8
tick,0x7fff4326feb4,15546029,0,0x0,8
tick,0x7fff4326feb4,15561440,0,0x0,8
tick,0x7fff4326feb4,15576865,0,0x0,8
tick,0x7fff4326feb4,15592906,0,0x0,8
tick,0x7fff4326feb4,15609259,0,0x0,8
tick,0x7fff4326feb4,15625082,0,0x0,8
tick,0x7fff4326feb4,15641006,0,0x0,8
tick,0x7fff4326feb4,15656480,0,0x0,8
tick,0x7fff4326feb4,15672592,0,0x0,8
tick,0x7fff4326feb4,15688600,0,0x0,8
tick,0x7fff4326feb4,15704272,0,0x0,8
tick,0x7fff4326feb4,15719519,0,0x0,8
tick,0x7fff4326feb4,15735164,0,0x0,8
tick,0x7fff4326feb4,15750876,0,0x0,8
tick,0x7fff4326feb4,15766580,0,0x0,8
tick,0x7fff4326feb4,15782351,0,0x0,8
tick,0x7fff4326feb4,15798013,0,0x0,8
tick,0x7fff4326feb4,15813640,0,0x0,8
tick,0x7fff4326feb4,15829025,0,0x0,8
tick,0x7fff4326feb4,15845133,0,0x0,8
tick,0x7fff4326feb4,15860031,0,0x0,8
tick,0x7fff4326feb4,15875635,0,0x0,8
tick,0x7fff4326feb4,15892035,0,0x0,8
tick,0x7fff4326feb4,15908035,0,0x0,8
tick,0x7fff4326feb4,15923785,0,0x0,8
tick,0x7fff4326feb4,15939885,0,0x0,8
tick,0x7fff4326feb4,15955102,0,0x0,8
tick,0x7fff4326feb4,15971345,0,0x0,8
tick,0x7fff4326feb4,15987654,0,0x0,8
tick,0x7fff4326feb4,16003902,0,0x0,8
tick,0x7fff4326feb4,16019236,0,0x0,8
tick,0x7fff4326feb4,16034904,0,0x0,8
tick,0x7fff4326feb4,16051043,0,0x0,8
tick,0x7fff4326feb4,16066652,0,0x0,8
tick,0x7fff4326feb4,16083040,0,0x0,8
tick,0x7fff4326feb4,16099353,0,0x0,8
tick,0x7fff4326feb4,16114753,0,0x0,8
tick,0x7fff4326feb4,16130476,0,0x0,8
tick,0x7fff4326feb4,16146720,0,0x0,8
tick,0x7fff4326feb4,16162772,0,0x0,8
tick,0x7fff4326feb4,16178088,0,0x0,8
tick,0x7fff4326feb4,16193618,0,0x0,8
tick,0x7fff4326feb4,16209052,0,0x0,8
tick,0x7fff4326feb4,16224148,0,0x0,8
tick,0x7fff4326feb4,16240141,0,0x0,8
tick,0x7fff4326feb4,16255672,0,0x0,8
tick,0x7fff4326feb4,16271049,0,0x0,8
tick,0x7fff4326feb4,16286535,0,0x0,8
tick,0x7fff4326feb4,16302462,0,0x0,8
tick,0x7fff4326feb4,16318134,0,0x0,8
tick,0x7fff4326feb4,16334356,0,0x0,8
tick,0x7fff4326feb4,16349903,0,0x0,8
tick,0x7fff4326feb4,16366167,0,0x0,8
tick,0x7fff4326feb4,16381500,0,0x0,8
tick,0x7fff4326feb4,16397255,0,0x0,8
tick,0x7fff4326feb4,16413241,0,0x0,8
tick,0x7fff4326feb4,16429527,0,0x0,8
tick,0x7fff4326feb4,16445367,0,0x0,8
tick,0x7fff4326feb4,16461050,0,0x0,8
tick,0x7fff4326feb4,16476679,0,0x0,8
tick,0x7fff4326feb4,16492641,0,0x0,8
tick,0x7fff4326feb4,16507957,0,0x0,8
tick,0x7fff4326feb4,16524050,0,0x0,8
tick,0x7fff4326feb4,16540425,0,0x0,8
tick,0x7fff4326feb4,16556072,0,0x0,8
tick,0x7fff4326feb4,16571425,0,0x0,8
tick,0x7fff4326feb4,16586832,0,0x0,8
tick,0x7fff4326feb4,16602887,0,0x0,8
tick,0x7fff4326feb4,16618474,0,0x0,8
tick,0x7fff4326feb4,16634169,0,0x0,8
tick,0x7fff4326feb4,16649766,0,0x0,8
tick,0x7fff4326feb4,16665930,0,0x0,8
tick,0x7fff4326feb4,16682260,0,0x0,8
tick,0x7fff4326feb4,16697849,0,0x0,8
tick,0x7fff4326feb4,16712806,0,0x0,8
tick,0x7fff4326feb4,16728666,0,0x0,8
tick,0x7fff4326feb4,16744121,0,0x0,8
tick,0x7fff4326feb4,16760235,0,0x0,8
tick,0x7fff4326feb4,16776068,0,0x0,8
tick,0x7fff4326feb4,16791784,0,0x0,8
tick,0x7fff4326feb4,16807268,0,0x0,8
tick,0x7fff4326feb4,16822732,0,0x0,8
tick,0x7fff4326feb4,16838372,0,0x0,8
tick,0x7fff4326feb4,16854445,0,0x0,8
tick,0x7fff4326feb4,16870060,0,0x0,8
tick,0x7fff4326feb4,16886356,0,0x0,8
tick,0x7fff4326feb4,16902117,0,0x0,8
tick,0x7fff4326feb4,16918065,0,0x0,8
tick,0x7fff4326feb4,16933749,0,0x0,8
tick,0x7fff4326feb4,16949873,0,0x0,8
tick,0x7fff4326feb4,16965889,0,0x0,8
tick,0x7fff4326feb4,16981750,0,0x0,8
tick,0x7fff4326feb4,16997347,0,0x0,8
tick,0x7fff4326feb4,17012600,0,0x0,8
tick,0x7fff4326feb4,17027895,0,0x0,8
tick,0x7fff4326feb4,17043495,0,0x0,8
tick,0x7fff4326feb4,17059805,0,0x0,8
tick,0x7fff4326feb4,17075235,0,0x0,8
tick,0x7fff4326feb4,17090820,0,0x0,8
tick,0x7fff4326feb4,17106866,0,0x0,8
tick,0x7fff4326feb4,17122483,0,0x0,8
tick,0x7fff4326feb4,17138718,0,0x0,8
tick,0x7fff4326feb4,17154451,0,0x0,8
tick,0x7fff4326feb4,17170714,0,0x0,8
tick,0x7fff4326feb4,17186093,0,0x0,8
tick,0x7fff4326feb4,17201941,0,0x0,8
tick,0x7fff4326feb4,17217098,0,0x0,8
tick,0x7fff4326feb4,17232571,0,0x0,8
tick,0x7fff4326feb4,17248701,0,0x0,8
tick,0x7fff4326feb4,17264467,0,0x0,8
tick,0x7fff4326feb4,17280716,0,0x0,8
tick,0x7fff4326feb4,17296481,0,0x0,8
tick,0x7fff4326feb4,17312706,0,0x0,8
tick,0x7fff4326feb4,17328679,0,0x0,8
tick,0x7fff4326feb4,17344705,0,0x0,8
tick,0x7fff4326feb4,17360464,0,0x0,8
tick,0x7fff4326feb4,17376495,0,0x0,8
tick,0x7fff4326feb4,17392098,0,0x0,8
tick,0x7fff4326feb4,17408398,0,0x0,8
tick,0x7fff4326feb4,17424167,0,0x0,8
tick,0x7fff4326feb4,17440207,0,0x0,8
tick,0x7fff4326feb4,17456275,0,0x0,8
tick,0x7fff4326feb4,17472087,0,0x0,8
tick,0x7fff4326feb4,17488157,0,0x0,8
tick,0x7fff4326feb4,17503775,0,0x0,8
tick,0x7fff4326feb4,17519322,0,0x0,8
tick,0x7fff4326feb4,17534745,0,0x0,8
tick,0x7fff4326feb4,17549680,0,0x0,8
tick,0x7fff4326feb4,17565769,0,0x0,8
tick,0x7fff4326feb4,17581355,0,0x0,8
tick,0x7fff4326feb4,17596695,0,0x0,8
tick,0x7fff4326feb4,17612102,0,0x0,8
tick,0x7fff4326feb4,17628454,0,0x0,8
tick,0x7fff4326feb4,17644334,0,0x0,8
tick,0x7fff4326feb4,17659807,0,0x0,8
tick,0x7fff4326feb4,17675475,0,0x0,8
tick,0x7fff4326feb4,17691284,0,0x0,8
tick,0x7fff4326feb4,17706568,0,0x0,8
tick,0x7fff4326feb4,17722330,0,0x0,8
tick,0x7fff4326feb4,17738343,0,0x0,8
tick,0x7fff4326feb4,17754359,0,0x0,8
tick,0x7fff4326feb4,17770380,0,0x0,8
tick,0x7fff4326feb4,17786397,0,0x0,8
tick,0x7fff4326feb4,17802407,0,0x0,8
tick,0x7fff4326feb4,17817845,0,0x0,8
tick,0x7fff4326feb4,17833444,0,0x0,8
tick,0x7fff4326feb4,17849080,0,0x0,8
tick,0x7fff4326feb4,17865232,0,0x0,8
tick,0x7fff4326feb4,17879893,0,0x0,8
tick,0x7fff4326feb4,17895474,0,0x0,8
tick,0x7fff4326feb4,17911134,0,0x0,8
tick,0x7fff4326feb4,17926597,0,0x0,8
tick,0x7fff4326feb4,17942561,0,0x0,8
tick,0x7fff4326feb4,17958702,0,0x0,8
tick,0x7fff4326feb4,17974660,0,0x0,8
tick,0x7fff4326feb4,17990932,0,0x0,8
tick,0x7fff4326feb4,18006122,0,0x0,8
tick,0x7fff4326feb4,18021352,0,0x0,8
tick,0x7fff4326feb4,18037123,0,0x0,8
tick,0x7fff4326feb4,18052719,0,0x0,8
tick,0x7fff4326feb4,18068453,0,0x0,8
tick,0x7fff4326feb4,18083927,0,0x0,8
tick,0x7fff4326feb4,18099360,0,0x0,8
tick,0x7fff4326feb4,18114682,0,0x0,8
tick,0x7fff4326feb4,18130644,0,0x0,8
tick,0x7fff4326feb4,18146700,0,0x0,8
tick,0x7fff4326feb4,18162693,0,0x0,8
tick,0x7fff4326feb4,18178157,0,0x0,8
tick,0x7fff4326feb4,18193713,0,0x0,8
tick,0x7fff4326feb4,18209259,0,0x0,8
tick,0x7fff4326feb4,18224506,0,0x0,8
tick,0x7fff4326feb4,18240721,0,0x0,8
tick,0x7fff4326feb4,18256144,0,0x0,8
tick,0x7fff4326feb4,18271635,0,0x0,8
tick,0x7fff4326feb4,18287759,0,0x0,8
tick,0x7fff4326feb4,18302907,0,0x0,8
tick,0x7fff4326feb4,18318503,0,0x0,8
tick,0x7fff4326feb4,18334460,0,0x0,8
tick,0x7fff4326feb4,18349359,0,0x0,8
tick,0x7fff4326feb4,18364482,0,0x0,8
tick,0x7fff4326feb4,18379995,0,0x0,8
tick,0x7fff4326feb4,18395407,0,0x0,8
tick,0x7fff4326feb4,18410715,0,0x0,8
tick,0x7fff4326feb4,18426378,0,0x0,8
tick,0x7fff4326feb4,18441970,0,0x0,8
tick,0x7fff4326feb4,18457262,0,0x0,8
tick,0x7fff4326feb4,18472406,0,0x0,8
tick,0x7fff4326feb4,18487873,0,0x0,8
tick,0x7fff4326feb4,18502953,0,0x0,8
tick,0x7fff4326feb4,18518607,0,0x0,8
tick,0x7fff4326feb4,18534195,0,0x0,8
tick,0x7fff4326feb4,18549597,0,0x0,8
tick,0x7fff4326feb4,18565580,0,0x0,8
tick,0x7fff4326feb4,18580375,0,0x0,8
tick,0x7fff4326feb4,18595880,0,0x0,8
tick,0x7fff4326feb4,18611489,0,0x0,8
tick,0x7fff4326feb4,18626772,0,0x0,8
tick,0x7fff4326feb4,18642174,0,0x0,8
tick,0x7fff4326feb4,18657858,0,0x0,8
tick,0x7fff4326feb4,18673546,0,0x0,8
tick,0x7fff4326feb4,18689620,0,0x0,8
tick,0x7fff4326feb4,18705364,0,0x0,8
tick,0x7fff4326feb4,18720893,0,0x0,8
tick,0x7fff4326feb4,18736453,0,0x0,8
tick,0x7fff4326feb4,18751612,0,0x0,8
tick,0x7fff4326feb4,18766724,0,0x0,8
tick,0x7fff4326feb4,18782616,0,0x0,8
tick,0x7fff4326feb4,18798053,0,0x0,8
tick,0x7fff4326feb4,18813627,0,0x0,8
tick,0x7fff4326feb4,18829675,0,0x0,8
tick,0x7fff4326feb4,18845355,0,0x0,8
tick,0x7fff4326feb4,18860565,0,0x0,8
tick,0x7fff4326feb4,18875973,0,0x0,8
tick,0x7fff4326feb4,18891909,0,0x0,8
tick,0x7fff4326feb4,18907910,0,0x0,8
tick,0x7fff4326feb4,18923465,0,0x0,8
tick,0x7fff4326feb4,18939157,0,0x0,8
tick,0x7fff4326feb4,18955142,0,0x0,8
tick,0x7fff4326feb4,18970764,0,0x0,8
tick,0x7fff4326feb4,18986612,0,0x0,8
tick,0x7fff4326feb4,19001880,0,0x0,8
tick,0x7fff4326feb4,19017146,0,0x0,8
tick,0x7fff4326feb4,19032629,0,0x0,8
tick,0x7fff4326feb4,19048902,0,0x0,8
tick,0x7fff4326feb4,19064300,0,0x0,8
tick,0x7fff4326feb4,19079305,0,0x0,8
tick,0x7fff4326feb4,19094640,0,0x0,8
tick,0x7fff4326feb4,19110237,0,0x0,8
tick,0x7fff4326feb4,19125578,0,0x0,8
tick,0x7fff4326feb4,19141564,0,0x0,8
tick,0x7fff4326feb4,19157623,0,0x0,8
tick,0x7fff4326feb4,19172593,0,0x0,8
tick,0x7fff4326feb4,19188065,0,0x0,8
tick,0x7fff4326feb4,19203373,0,0x0,8
tick,0x7fff4326feb4,19218624,0,0x0,8
tick,0x7fff4326feb4,19234696,0,0x0,8
tick,0x7fff4326feb4,19250728,0,0x0,8
tick,0x7fff4326feb4,19266779,0,0x0,8
tick,0x7fff4326feb4,19282331,0,0x0,8
tick,0x7fff4326feb4,19297835,0,0x0,8
tick,0x7fff4326feb4,19313162,0,0x0,8
tick,0x7fff4326feb4,19328804,0,0x0,8
tick,0x7fff4326feb4,19345168,0,0x0,8
tick,0x7fff4326feb4,19360690,0,0x0,8
tick,0x7fff4326feb4,19376204,0,0x0,8
tick,0x7fff4326feb4,19392471,0,0x0,8
tick,0x7fff4326feb4,19408539,0,0x0,8
tick,0x7fff4326feb4,19424616,0,0x0,8
tick,0x7fff4326feb4,19440645,0,0x0,8
tick,0x7fff4326feb4,19456257,0,0x0,8
tick,0x7fff4326feb4,19472169,0,0x0,8
tick,0x7fff4326feb4,19487982,0,0x0,8
tick,0x7fff4326feb4,19503641,0,0x0,8
tick,0x7fff4326feb4,19519316,0,0x0,8
tick,0x7fff4326feb4,19534757,0,0x0,8
tick,0x7fff4326feb4,19550705,0,0x0,8
tick,0x7fff4326feb4,19566229,0,0x0,8
tick,0x7fff4326feb4,19581773,0,0x0,8
tick,0x7fff4326feb4,19597179,0,0x0,8
tick,0x7fff4326feb4,19612628,0,0x0,8
tick,0x7fff4326feb4,19628482,0,0x0,8
tick,0x7fff4326feb4,19643844,0,0x0,8
tick,0x7fff4326feb4,19659181,0,0x0,8
tick,0x7fff4326feb4,19673843,0,0x0,8
tick,0x7fff4326feb4,19689903,0,0x0,8
tick,0x7fff4326feb4,19705739,0,0x0,8
tick,0x7fff4326feb4,19721405,0,0x0,8
tick,0x7fff4326feb4,19736713,0,0x0,8
tick,0x7fff4326feb4,19752339,0,0x0,8
tick,0x7fff4326feb4,19768333,0,0x0,8
tick,0x7fff4326feb4,19783638,0,0x0,8
tick,0x7fff4326feb4,19798973,0,0x0,8
tick,0x7fff4326feb4,19815006,0,0x0,8
tick,0x7fff4326feb4,19830090,0,0x0,8
tick,0x7fff4326feb4,19846316,0,0x0,8
tick,0x7fff4326feb4,19861997,0,0x0,8
tick,0x7fff4326feb4,19877548,0,0x0,8
tick,0x7fff4326feb4,19893556,0,0x0,8
tick,0x7fff4326feb4,19909227,0,0x0,8
tick,0x7fff4326feb4,19924674,0,0x0,8
tick,0x7fff4326feb4,19940510,0,0x0,8
tick,0x7fff4326feb4,19955569,0,0x0,8
tick,0x7fff4326feb4,19971048,0,0x0,8
tick,0x7fff4326feb4,19986899,0,0x0,8
tick,0x7fff4326feb4,20003001,0,0x0,8
tick,0x7fff4326feb4,20018491,0,0x0,8
tick,0x7fff4326feb4,20033579,0,0x0,8
tick,0x7fff4326feb4,20048823,0,0x0,8
tick,0x7fff4326feb4,20064196,0,0x0,8
tick,0x7fff4326feb4,20079866,0,0x0,8
tick,0x7fff4326feb4,20096194,0,0x0,8
tick,0x7fff4326feb4,20112245,0,0x0,8
tick,0x7fff4326feb4,20127683,0,0x0,8
tick,0x7fff4326feb4,20143391,0,0x0,8
tick,0x7fff4326feb4,20158375,0,0x0,8
tick,0x7fff4326feb4,20174665,0,0x0,8
tick,0x7fff4326feb4,20190213,0,0x0,8
tick,0x7fff4326feb4,20205820,0,0x0,8
tick,0x7fff4326feb4,20221200,0,0x0,8
tick,0x7fff4326feb4,20237069,0,0x0,8
tick,0x7fff4326feb4,20252551,0,0x0,8
tick,0x7fff4326feb4,20267997,0,0x0,8
tick,0x7fff4326feb4,20282989,0,0x0,8
tick,0x7fff4326feb4,20298653,0,0x0,8
tick,0x7fff4326feb4,20314265,0,0x0,8
tick,0x7fff4326feb4,20330197,0,0x0,8
tick,0x7fff4326feb4,20345328,0,0x0,8
tick,0x7fff4326feb4,20360810,0,0x0,8
tick,0x7fff4326feb4,20377255,0,0x0,8
tick,0x7fff4326feb4,20393514,0,0x0,8
tick,0x7fff4326feb4,20408818,0,0x0,8
tick,0x7fff4326feb4,20425013,0,0x0,8
tick,0x7fff4326feb4,20441332,0,0x0,8
tick,0x7fff4326feb4,20457428,0,0x0,8
tick,0x7fff4326feb4,20472607,0,0x0,8
tick,0x7fff4326feb4,20488207,0,0x0,8
tick,0x7fff4326feb4,20503998,0,0x0,8
tick,0x7fff4326feb4,20519646,0,0x0,8
tick,0x7fff4326feb4,20535605,0,0x0,8
tick,0x7fff4326feb4,20551322,0,0x0,8
tick,0x7fff4326feb4,20567115,0,0x0,8
tick,0x7fff4326feb4,20583064,0,0x0,8
tick,0x7fff4326feb4,20598796,0,0x0,8
tick,0x7fff4326feb4,20614378,0,0x0,8
tick,0x7fff4326feb4,20629345,0,0x0,8
tick,0x7fff4326feb4,20644820,0,0x0,8
tick,0x7fff4326feb4,20660317,0,0x0,8
tick,0x7fff4326feb4,20676573,0,0x0,8
tick,0x7fff4326feb4,20692647,0,0x0,8
tick,0x7fff4326feb4,20708972,0,0x0,8
tick,0x7fff4326feb4,20724226,0,0x0,8
tick,0x7fff4326feb4,20740367,0,0x0,8
tick,0x7fff4326feb4,20755622,0,0x0,8
tick,0x7fff4326feb4,20771706,0,0x0,8
tick,0x7fff4326feb4,20787755,0,0x0,8
tick,0x7fff4326feb4,20803907,0,0x0,8
tick,0x7fff4326feb4,20819616,0,0x0,8
tick,0x7fff4326feb4,20835528,0,0x0,8
tick,0x7fff4326feb4,20851219,0,0x0,8
tick,0x7fff4326feb4,20867519,0,0x0,8
tick,0x7fff4326feb4,20883218,0,0x0,8
tick,0x7fff4326feb4,20898515,0,0x0,8
tick,0x7fff4326feb4,20913970,0,0x0,8
tick,0x7fff4326feb4,20929827,0,0x0,8
tick,0x7fff4326feb4,20945599,0,0x0,8
tick,0x7fff4326feb4,20961329,0,0x0,8
tick,0x7fff4326feb4,20977625,0,0x0,8
tick,0x7fff4326feb4,20993075,0,0x0,8
tick,0x7fff4326feb4,21008712,0,0x0,8
tick,0x7fff4326feb4,21024234,0,0x0,8
tick,0x7fff4326feb4,21040168,0,0x0,8
tick,0x7fff4326feb4,21055902,0,0x0,8
tick,0x7fff4326feb4,21071878,0,0x0,8
tick,0x7fff4326feb4,21087566,0,0x0,8
tick,0x7fff4326feb4,21103228,0,0x0,8
tick,0x7fff4326feb4,21118624,0,0x0,8
tick,0x7fff4326feb4,21134399,0,0x0,8
tick,0x7fff4326feb4,21150418,0,0x0,8
tick,0x7fff4326feb4,21165908,0,0x0,8
tick,0x7fff4326feb4,21181568,0,0x0,8
tick,0x7fff4326feb4,21197879,0,0x0,8
tick,0x7fff4326feb4,21213619,0,0x0,8
tick,0x7fff4326feb4,21229636,0,0x0,8
tick,0x7fff4326feb4,21245371,0,0x0,8
tick,0x7fff4326feb4,21261029,0,0x0,8
tick,0x7fff4326feb4,21276639,0,0x0,8
tick,0x7fff4326feb4,21292646,0,0x0,8
tick,0x7fff4326feb4,21308399,0,0x0,8
tick,0x7fff4326feb4,21323623,0,0x0,8
tick,0x7fff4326feb4,21339358,0,0x0,8
tick,0x7fff4326feb4,21355347,0,0x0,8
tick,0x7fff4326feb4,21370244,0,0x0,8
tick,0x7fff4326feb4,21386565,0,0x0,8
tick,0x7fff4326feb4,21402891,0,0x0,8
tick,0x7fff4326feb4,21418572,0,0x0,8
tick,0x7fff4326feb4,21434511,0,0x0,8
tick,0x7fff4326feb4,21450008,0,0x0,8
tick,0x7fff4326feb4,21465829,0,0x0,8
tick,0x7fff4326feb4,21481332,0,0x0,8
tick,0x7fff4326feb4,21497369,0,0x0,8
tick,0x7fff4326feb4,21512954,0,0x0,8
tick,0x7fff4326feb4,21528878,0,0x0,8
tick,0x7fff4326feb4,21544733,0,0x0,8
tick,0x7fff4326feb4,21560745,0,0x0,8
tick,0x7fff4326feb4,21576765,0,0x0,8
tick,0x7fff4326feb4,21593064,0,0x0,8
tick,0x7fff4326feb4,21608496,0,0x0,8
tick,0x7fff4326feb4,21624556,0,0x0,8
tick,0x7fff4326feb4,21640103,0,0x0,8
tick,0x7fff4326feb4,21655774,0,0x0,8
tick,0x7fff4326feb4,21671571,0,0x0,8
tick,0x7fff4326feb4,21687867,0,0x0,8
tick,0x7fff4326feb4,21703820,0,0x0,8
tick,0x7fff4326feb4,21719129,0,0x0,8
tick,0x7fff4326feb4,21735402,0,0x0,8
tick,0x7fff4326feb4,21750682,0,0x0,8
tick,0x7fff4326feb4,21765948,0,0x0,8
tick,0x7fff4326feb4,21781394,0,0x0,8
tick,0x7fff4326feb4,21796656,0,0x0,8
tick,0x7fff4326feb4,21812502,0,0x0,8
tick,0x7fff4326feb4,21827567,0,0x0,8
tick,0x7fff4326feb4,21843869,0,0x0,8
tick,0x7fff4326feb4,21859567,0,0x0,8
tick,0x7fff4326feb4,21875866,0,0x0,8
tick,0x7fff4326feb4,21892263,0,0x0,8
tick,0x7fff4326feb4,21908609,0,0x0,8
tick,0x7fff4326feb4,21923939,0,0x0,8
tick,0x7fff4326feb4,21939895,0,0x0,8
tick,0x7fff4326feb4,21955314,0,0x0,8
tick,0x7fff4326feb4,21971531,0,0x0,8
tick,0x7fff4326feb4,21987748,0,0x0,8
tick,0x7fff4326feb4,22002812,0,0x0,8
tick,0x7fff4326feb4,22018553,0,0x0,8
tick,0x7fff4326feb4,22034423,0,0x0,8
tick,0x7fff4326feb4,22049808,0,0x0,8
tick,0x7fff4326feb4,22066031,0,0x0,8
tick,0x7fff4326feb4,22081399,0,0x0,8
tick,0x7fff4326feb4,22096762,0,0x0,8
tick,0x7fff4326feb4,22111826,0,0x0,8
tick,0x7fff4326feb4,22127348,0,0x0,8
tick,0x7fff4326feb4,22143368,0,0x0,8
tick,0x7fff4326feb4,22159374,0,0x0,8
tick,0x7fff4326feb4,22175395,0,0x0,8
tick,0x7fff4326feb4,22191442,0,0x0,8
tick,0x7fff4326feb4,22207410,0,0x0,8
tick,0x7fff4326feb4,22223430,0,0x0,8
tick,0x7fff4326feb4,22239467,0,0x0,8
tick,0x7fff4326feb4,22255503,0,0x0,8
tick,0x7fff4326feb4,22271480,0,0x0,8
tick,0x7fff4326feb4,22287490,0,0x0,8
tick,0x7fff4326feb4,22303594,0,0x0,8
tick,0x7fff4326feb4,22318590,0,0x0,8
tick,0x7fff4326feb4,22334626,0,0x0,8
tick,0x7fff4326feb4,22350637,0,0x0,8
tick,0x7fff4326feb4,22366647,0,0x0,8
tick,0x7fff4326feb4,22382671,0,0x0,8
tick,0x7fff4326feb4,22398691,0,0x0,8
tick,0x7fff4326feb4,22413827,0,0x0,8
tick,0x7fff4326feb4,22429845,0,0x0,8
tick,0x7fff4326feb4,22445862,0,0x0,8
tick,0x7fff4326feb4,22461412,0,0x0,8
tick,0x7fff4326feb4,22477419,0,0x0,8
tick,0x7fff4326feb4,22493433,0,0x0,8
tick,0x7fff4326feb4,22509452,0,0x0,8
tick,0x7fff4326feb4,22525499,0,0x0,8
tick,0x7fff4326feb4,22541472,0,0x0,8
tick,0x7fff4326feb4,22557515,0,0x0,8
tick,0x7fff4326feb4,22573514,0,0x0,8
tick,0x7fff4326feb4,22589527,0,0x0,8
tick,0x7fff4326feb4,22605550,0,0x0,8
tick,0x7fff4326feb4,22620557,0,0x0,8
tick,0x7fff4326feb4,22636560,0,0x0,8
tick,0x7fff4326feb4,22652586,0,0x0,8
tick,0x7fff4326feb4,22668612,0,0x0,8
tick,0x7fff4326feb4,22684625,0,0x0,8
tick,0x7fff4326feb4,22700646,0,0x0,8
tick,0x7fff4326feb4,22716649,0,0x0,8
tick,0x7fff4326feb4,22732661,0,0x0,8
tick,0x7fff4326feb4,22748691,0,0x0,8
tick,0x7fff4326feb4,22764693,0,0x0,8
tick,0x7fff4326feb4,22779701,0,0x0,8
tick,0x7fff4326feb4,22794706,0,0x0,8
tick,0x7fff4326feb4,22810729,0,0x0,8
tick,0x7fff4326feb4,22826743,0,0x0,8
tick,0x7fff4326feb4,22842746,0,0x0,8
tick,0x7fff4326feb4,22858768,0,0x0,8
tick,0x7fff4326feb4,22874800,0,0x0,8
tick,0x7fff4326feb4,22890788,0,0x0,8
tick,0x7fff4326feb4,22906806,0,0x0,8
tick,0x7fff4326feb4,22922836,0,0x0,8
tick,0x7fff4326feb4,22938863,0,0x0,8
tick,0x7fff4326feb4,22954850,0,0x0,8
tick,0x7fff4326feb4,22970889,0,0x0,8
tick,0x7fff4326feb4,22986888,0,0x0,8
tick,0x7fff4326feb4,23002893,0,0x0,8
tick,0x7fff4326feb4,23018927,0,0x0,8
tick,0x7fff4326feb4,23034987,0,0x0,8
tick,0x7fff4326feb4,23050941,0,0x0,8
tick,0x7fff4326feb4,23066963,0,0x0,8
tick,0x7fff4326feb4,23082981,0,0x0,8
tick,0x7fff4326feb4,23098988,0,0x0,8
tick,0x7fff4326feb4,23115021,0,0x0,8
tick,0x7fff4326feb4,23131029,0,0x0,8
tick,0x7fff4326feb4,23147039,0,0x0,8
tick,0x7fff4326feb4,23163040,0,0x0,8
tick,0x7fff4326feb4,23179074,0,0x0,8
tick,0x7fff4326feb4,23195117,0,0x0,8
tick,0x7fff4326feb4,23211144,0,0x0,8
tick,0x7fff4326feb4,23227111,0,0x0,8
tick,0x7fff4326feb4,23243126,0,0x0,8
tick,0x7fff4326feb4,23259141,0,0x0,8
tick,0x7fff4326feb4,23275152,0,0x0,8
tick,0x7fff4326feb4,23291169,0,0x0,8
tick,0x7fff4326feb4,23307183,0,0x0,8
tick,0x7fff4326feb4,23323194,0,0x0,8
tick,0x7fff4326feb4,23339218,0,0x0,8
tick,0x7fff4326feb4,23355248,0,0x0,8
tick,0x7fff4326feb4,23371248,0,0x0,8
tick,0x7fff4326feb4,23387244,0,0x0,8
tick,0x7fff4326feb4,23403282,0,0x0,8
tick,0x7fff4326feb4,23419302,0,0x0,8
tick,0x7fff4326feb4,23435289,0,0x0,8
tick,0x7fff4326feb4,23451340,0,0x0,8
tick,0x7fff4326feb4,23467346,0,0x0,8
tick,0x7fff4326feb4,23483365,0,0x0,8
tick,0x7fff4326feb4,23499378,0,0x0,8
tick,0x7fff4326feb4,23515383,0,0x0,8
tick,0x7fff4326feb4,23531398,0,0x0,8
tick,0x7fff4326feb4,23547476,0,0x0,8
tick,0x7fff4326feb4,23563424,0,0x0,8
tick,0x7fff4326feb4,23579449,0,0x0,8
tick,0x7fff4326feb4,23595460,0,0x0,8
tick,0x7fff4326feb4,23611475,0,0x0,8
tick,0x7fff4326feb4,23627485,0,0x0,8
tick,0x7fff4326feb4,23643511,0,0x0,8
tick,0x7fff4326feb4,23659514,0,0x0,8
tick,0x7fff4326feb4,23675531,0,0x0,8
tick,0x7fff4326feb4,23691554,0,0x0,8
tick,0x7fff4326feb4,23707569,0,0x0,8
tick,0x7fff4326feb4,23723608,0,0x0,8
tick,0x7fff4326feb4,23739591,0,0x0,8
tick,0x7fff4326feb4,23755609,0,0x0,8
tick,0x7fff4326feb4,23771636,0,0x0,8
tick,0x7fff4326feb4,23787638,0,0x0,8
tick,0x7fff4326feb4,23803655,0,0x0,8
tick,0x7fff4326feb4,23819670,0,0x0,8
tick,0x7fff4326feb4,23835687,0,0x0,8
tick,0x7fff4326feb4,23851691,0,0x0,8
tick,0x7fff4326feb4,23867718,0,0x0,8
tick,0x7fff4326feb4,23883740,0,0x0,8
tick,0x7fff4326feb4,23899773,0,0x0,8
tick,0x7fff4326feb4,23915751,0,0x0,8
tick,0x7fff4326feb4,23931762,0,0x0,8
tick,0x7fff4326feb4,23947784,0,0x0,8
tick,0x7fff4326feb4,23963814,0,0x0,8
tick,0x7fff4326feb4,23979804,0,0x0,8
tick,0x7fff4326feb4,23995826,0,0x0,8
tick,0x7fff4326feb4,24011847,0,0x0,8
tick,0x7fff4326feb4,24027866,0,0x0,8
tick,0x7fff4326feb4,24043872,0,0x0,8
tick,0x7fff4326feb4,24059957,0,0x0,8
tick,0x7fff4326feb4,24075901,0,0x0,8
tick,0x7fff4326feb4,24091914,0,0x0,8
tick,0x7fff4326feb4,24107925,0,0x0,8
tick,0x7fff4326feb4,24123962,0,0x0,8
tick,0x7fff4326feb4,24139999,0,0x0,8
tick,0x7fff4326feb4,24155976,0,0x0,8
tick,0x7fff4326feb4,24172107,0,0x0,8
tick,0x7fff4326feb4,24188026,0,0x0,8
tick,0x7fff4326feb4,24204028,0,0x0,8
tick,0x7fff4326feb4,24220042,0,0x0,8
tick,0x7fff4326feb4,24236050,0,0x0,8
tick,0x7fff4326feb4,24252051,0,0x0,8
tick,0x7fff4326feb4,24268086,0,0x0,8
tick,0x7fff4326feb4,24284102,0,0x0,8
tick,0x7fff4326feb4,24300109,0,0x0,8
tick,0x7fff4326feb4,24316112,0,0x0,8
tick,0x7fff4326feb4,24332118,0,0x0,8
tick,0x7fff4326feb4,24348136,0,0x0,8
tick,0x7fff4326feb4,24364143,0,0x0,8
tick,0x7fff4326feb4,24380156,0,0x0,8
tick,0x7fff4326feb4,24396180,0,0x0,8
tick,0x7fff4326feb4,24411193,0,0x0,8
tick,0x7fff4326feb4,24427233,0,0x0,8
tick,0x7fff4326feb4,24443226,0,0x0,8
tick,0x7fff4326feb4,24459246,0,0x0,8
tick,0x7fff4326feb4,24475253,0,0x0,8
tick,0x7fff4326feb4,24490532,0,0x0,8
tick,0x7fff4326feb4,24506246,0,0x0,8
tick,0x7fff4326feb4,24521968,0,0x0,8
tick,0x7fff4326feb4,24537499,0,0x0,8
tick,0x7fff4326feb4,24552081,0,0x0,8
tick,0x7fff4326feb4,24568135,0,0x0,8
tick,0x7fff4326feb4,24584109,0,0x0,8
tick,0x7fff4326feb4,24600131,0,0x0,8
tick,0x7fff4326feb4,24616131,0,0x0,8
tick,0x7fff4326feb4,24632140,0,0x0,8
tick,0x7fff4326feb4,24648163,0,0x0,8
tick,0x7fff4326feb4,24663511,0,0x0,8
tick,0x7fff4326feb4,24679536,0,0x0,8
tick,0x7fff4326feb4,24695768,0,0x0,8
tick,0x7fff4326feb4,24711252,0,0x0,8
tick,0x7fff4326feb4,24727280,0,0x0,8
tick,0x7fff4326feb4,24743292,0,0x0,8
tick,0x7fff4326feb4,24758307,0,0x0,8
tick,0x7fff4326feb4,24774349,0,0x0,8
tick,0x7fff4326feb4,24790330,0,0x0,8
tick,0x7fff4326feb4,24806337,0,0x0,8
tick,0x7fff4326feb4,24822351,0,0x0,8
tick,0x7fff4326feb4,24838487,0,0x0,8
tick,0x7fff4326feb4,24853518,0,0x0,8
tick,0x7fff4326feb4,24869534,0,0x0,8
tick,0x7fff4326feb4,24885545,0,0x0,8
tick,0x7fff4326feb4,24901576,0,0x0,8
tick,0x7fff4326feb4,24917572,0,0x0,8
tick,0x7fff4326feb4,24933583,0,0x0,8
tick,0x7fff4326feb4,24948595,0,0x0,8
tick,0x7fff4326feb4,24964695,0,0x0,8
tick,0x7fff4326feb4,24979748,0,0x0,8
tick,0x7fff4326feb4,24995765,0,0x0,8
tick,0x7fff4326feb4,25010773,0,0x0,8
tick,0x7fff4326feb4,25026801,0,0x0,8
tick,0x7fff4326feb4,25042792,0,0x0,8
tick,0x7fff4326feb4,25058813,0,0x0,8
tick,0x7fff4326feb4,25074839,0,0x0,8
tick,0x7fff4326feb4,25090164,0,0x0,8
tick,0x7fff4326feb4,25105845,0,0x0,8
tick,0x7fff4326feb4,25120943,0,0x0,8
tick,0x7fff4326feb4,25136949,0,0x0,8
tick,0x7fff4326feb4,25151959,0,0x0,8
tick,0x7fff4326feb4,25167974,0,0x0,8
tick,0x7fff4326feb4,25183981,0,0x0,8
tick,0x7fff4326feb4,25200005,0,0x0,8
tick,0x7fff4326feb4,25216004,0,0x0,8
tick,0x7fff4326feb4,25232024,0,0x0,8
tick,0x7fff4326feb4,25248042,0,0x0,8
tick,0x7fff4326feb4,25263943,0,0x0,8
tick,0x7fff4326feb4,25279951,0,0x0,8
tick,0x7fff4326feb4,25295973,0,0x0,8
tick,0x7fff4326feb4,25311980,0,0x0,8
tick,0x7fff4326feb4,25328017,0,0x0,8
tick,0x7fff4326feb4,25344007,0,0x0,8
tick,0x7fff4326feb4,25360013,0,0x0,8
tick,0x7fff4326feb4,25376028,0,0x0,8
tick,0x7fff4326feb4,25391504,0,0x0,8
tick,0x7fff4326feb4,25406570,0,0x0,8
tick,0x7fff4326feb4,25422584,0,0x0,8
tick,0x7fff4326feb4,25438596,0,0x0,8
tick,0x7fff4326feb4,25454619,0,0x0,8
tick,0x7fff4326feb4,25470624,0,0x0,8
tick,0x7fff4326feb4,25486666,0,0x0,8
tick,0x7fff4326feb4,25502642,0,0x0,8
tick,0x7fff4326feb4,25518934,0,0x0,8
tick,0x7fff4326feb4,25534682,0,0x0,8
tick,0x7fff4326feb4,25550688,0,0x0,8
tick,0x7fff4326feb4,25566719,0,0x0,8
tick,0x7fff4326feb4,25582800,0,0x0,8
tick,0x7fff4326feb4,25597745,0,0x0,8
tick,0x7fff4326feb4,25612768,0,0x0,8
tick,0x7fff4326feb4,25628765,0,0x0,8
tick,0x7fff4326feb4,25644778,0,0x0,8
tick,0x7fff4326feb4,25660730,0,0x0,8
tick,0x7fff4326feb4,25676137,0,0x0,8
tick,0x7fff4326feb4,25691513,0,0x0,8
tick,0x7fff4326feb4,25706551,0,0x0,8
tick,0x7fff4326feb4,25722553,0,0x0,8
tick,0x7fff4326feb4,25738572,0,0x0,8
tick,0x7fff4326feb4,25754575,0,0x0,8
tick,0x7fff4326feb4,25770570,0,0x0,8
tick,0x7fff4326feb4,25786591,0,0x0,8
tick,0x7fff4326feb4,25802610,0,0x0,8
tick,0x7fff4326feb4,25818510,0,0x0,8
tick,0x7fff4326feb4,25833613,0,0x0,8
tick,0x7fff4326feb4,25848635,0,0x0,8
tick,0x7fff4326feb4,25864424,0,0x0,8
tick,0x7fff4326feb4,25879440,0,0x0,8
tick,0x7fff4326feb4,25895464,0,0x0,8
tick,0x7fff4326feb4,25911477,0,0x0,8
tick,0x7fff4326feb4,25927498,0,0x0,8
tick,0x7fff4326feb4,25942502,0,0x0,8
tick,0x7fff4326feb4,25958534,0,0x0,8
tick,0x7fff4326feb4,25974520,0,0x0,8
tick,0x7fff4326feb4,25990573,0,0x0,8
tick,0x7fff4326feb4,26006587,0,0x0,8
tick,0x7fff4326feb4,26022595,0,0x0,8
tick,0x7fff4326feb4,26038602,0,0x0,8
tick,0x7fff4326feb4,26053625,0,0x0,8
tick,0x7fff4326feb4,26069638,0,0x0,8
tick,0x7fff4326feb4,26085666,0,0x0,8
tick,0x7fff4326feb4,26101648,0,0x0,8
tick,0x7fff4326feb4,26117159,0,0x0,8
tick,0x7fff4326feb4,26132189,0,0x0,8
tick,0x7fff4326feb4,26148213,0,0x0,8
tick,0x7fff4326feb4,26164221,0,0x0,8
tick,0x7fff4326feb4,26179237,0,0x0,8
tick,0x7fff4326feb4,26195237,0,0x0,8
tick,0x7fff4326feb4,26211257,0,0x0,8
tick,0x7fff4326feb4,26227277,0,0x0,8
tick,0x7fff4326feb4,26242567,0,0x0,8
tick,0x7fff4326feb4,26258018,0,0x0,8
tick,0x7fff4326feb4,26273073,0,0x0,8
tick,0x7fff4326feb4,26288309,0,0x0,8
tick,0x7fff4326feb4,26303336,0,0x0,8
tick,0x7fff4326feb4,26319343,0,0x0,8
tick,0x7fff4326feb4,26335339,0,0x0,8
tick,0x7fff4326feb4,26351367,0,0x0,8
tick,0x7fff4326feb4,26367372,0,0x0,8
tick,0x7fff4326feb4,26383382,0,0x0,8
tick,0x7fff4326feb4,26399440,0,0x0,8
tick,0x7fff4326feb4,26415433,0,0x0,8
tick,0x7fff4326feb4,26431435,0,0x0,8
tick,0x7fff4326feb4,26447452,0,0x0,8
tick,0x7fff4326feb4,26463469,0,0x0,8
tick,0x7fff4326feb4,26479492,0,0x0,8
tick,0x7fff4326feb4,26495512,0,0x0,8
tick,0x7fff4326feb4,26511510,0,0x0,8
tick,0x7fff4326feb4,26527522,0,0x0,8
tick,0x7fff4326feb4,26543555,0,0x0,8
tick,0x7fff4326feb4,26559568,0,0x0,8
tick,0x7fff4326feb4,26575576,0,0x0,8
tick,0x7fff4326feb4,26591598,0,0x0,8
tick,0x7fff4326feb4,26607600,0,0x0,8
tick,0x7fff4326feb4,26623616,0,0x0,8
tick,0x7fff4326feb4,26639636,0,0x0,8
tick,0x7fff4326feb4,26655640,0,0x0,8
tick,0x7fff4326feb4,26671675,0,0x0,8
tick,0x7fff4326feb4,26687669,0,0x0,8
tick,0x7fff4326feb4,26703688,0,0x0,8
tick,0x7fff4326feb4,26719708,0,0x0,8
tick,0x7fff4326feb4,26735988,0,0x0,8
tick,0x7fff4326feb4,26751735,0,0x0,8
tick,0x7fff4326feb4,26767741,0,0x0,8
tick,0x7fff4326feb4,26783756,0,0x0,8
tick,0x7fff4326feb4,26799777,0,0x0,8
tick,0x7fff4326feb4,26815796,0,0x0,8
tick,0x7fff4326feb4,26831806,0,0x0,8
tick,0x7fff4326feb4,26847812,0,0x0,8
tick,0x7fff4326feb4,26863832,0,0x0,8
tick,0x7fff4326feb4,26879852,0,0x0,8
tick,0x7fff4326feb4,26895863,0,0x0,8
tick,0x7fff4326feb4,26911880,0,0x0,8
tick,0x7fff4326feb4,26927921,0,0x0,8
tick,0x7fff4326feb4,26943908,0,0x0,8
tick,0x7fff4326feb4,26959909,0,0x0,8
tick,0x7fff4326feb4,26975937,0,0x0,8
tick,0x7fff4326feb4,26991966,0,0x0,8
tick,0x7fff4326feb4,27007971,0,0x0,8
tick,0x7fff4326feb4,27024012,0,0x0,8
tick,0x7fff4326feb4,27039998,0,0x0,8
tick,0x7fff4326feb4,27056022,0,0x0,8
tick,0x7fff4326feb4,27072011,0,0x0,8
tick,0x7fff4326feb4,27088136,0,0x0,8
tick,0x7fff4326feb4,27104098,0,0x0,8
tick,0x7fff4326feb4,27120082,0,0x0,8
tick,0x7fff4326feb4,27136083,0,0x0,8
tick,0x7fff4326feb4,27152101,0,0x0,8
tick,0x7fff4326feb4,27168107,0,0x0,8
tick,0x7fff4326feb4,27183133,0,0x0,8
tick,0x7fff4326feb4,27199178,0,0x0,8
tick,0x7fff4326feb4,27215158,0,0x0,8
tick,0x7fff4326feb4,27231162,0,0x0,8
tick,0x7fff4326feb4,27247213,0,0x0,8
tick,0x7fff4326feb4,27263210,0,0x0,8
tick,0x7fff4326feb4,27280236,0,0x0,8
tick,0x7fff4326feb4,27295233,0,0x0,8
tick,0x7fff4326feb4,27311262,0,0x0,8
tick,0x7fff4326feb4,27327253,0,0x0,8
tick,0x7fff4326feb4,27343279,0,0x0,8
tick,0x7fff4326feb4,27359283,0,0x0,8
tick,0x7fff4326feb4,27375301,0,0x0,8
tick,0x7fff4326feb4,27391320,0,0x0,8
tick,0x7fff4326feb4,27407347,0,0x0,8
tick,0x7fff4326feb4,27423338,0,0x0,8
tick,0x7fff4326feb4,27439360,0,0x0,8
tick,0x7fff4326feb4,27455387,0,0x0,8
tick,0x7fff4326feb4,27471399,0,0x0,8
tick,0x7fff4326feb4,27487409,0,0x0,8
tick,0x7fff4326feb4,27503417,0,0x0,8
tick,0x7fff4326feb4,27519467,0,0x0,8
tick,0x7fff4326feb4,27535452,0,0x0,8
tick,0x7fff4326feb4,27551454,0,0x0,8
tick,0x7fff4326feb4,27567477,0,0x0,8
tick,0x7fff4326feb4,27583484,0,0x0,8
tick,0x7fff4326feb4,27598494,0,0x0,8
tick,0x7fff4326feb4,27614530,0,0x0,8
tick,0x7fff4326feb4,27630530,0,0x0,8
tick,0x7fff4326feb4,27646545,0,0x0,8
tick,0x7fff4326feb4,27662560,0,0x0,8
tick,0x7fff4326feb4,27678569,0,0x0,8
tick,0x7fff4326feb4,27694587,0,0x0,8
tick,0x7fff4326feb4,27710605,0,0x0,8
tick,0x7fff4326feb4,27726606,0,0x0,8
tick,0x7fff4326feb4,27742635,0,0x0,8
tick,0x7fff4326feb4,27758672,0,0x0,8
tick,0x7fff4326feb4,27774693,0,0x0,8
tick,0x7fff4326feb4,27790690,0,0x0,8
tick,0x7fff4326feb4,27805694,0,0x0,8
tick,0x7fff4326feb4,27820699,0,0x0,8
tick,0x7fff4326feb4,27836714,0,0x0,8
tick,0x7fff4326feb4,27852727,0,0x0,8
tick,0x7fff4326feb4,27868745,0,0x0,8
tick,0x7fff4326feb4,27884757,0,0x0,8
tick,0x7fff4326feb4,27900778,0,0x0,8
tick,0x7fff4326feb4,27916829,0,0x0,8
tick,0x7fff4326feb4,27932810,0,0x0,8
tick,0x7fff4326feb4,27948818,0,0x0,8
tick,0x7fff4326feb4,27964829,0,0x0,8
tick,0x7fff4326feb4,27980848,0,0x0,8
tick,0x7fff4326feb4,27996863,0,0x0,8
tick,0x7fff4326feb4,28012883,0,0x0,8
tick,0x7fff4326feb4,28028923,0,0x0,8
tick,0x7fff4326feb4,28044903,0,0x0,8
tick,0x7fff4326feb4,28060918,0,0x0,8
tick,0x7fff4326feb4,28076938,0,0x0,8
tick,0x7fff4326feb4,28092954,0,0x0,8
tick,0x7fff4326feb4,28108963,0,0x0,8
tick,0x7fff4326feb4,28125027,0,0x0,8
tick,0x7fff4326feb4,28141035,0,0x0,8
tick,0x7fff4326feb4,28156003,0,0x0,8
tick,0x7fff4326feb4,28172024,0,0x0,8
tick,0x7fff4326feb4,28188032,0,0x0,8
tick,0x7fff4326feb4,28204116,0,0x0,8
tick,0x7fff4326feb4,28220077,0,0x0,8
tick,0x7fff4326feb4,28236076,0,0x0,8
tick,0x7fff4326feb4,28252104,0,0x0,8
tick,0x7fff4326feb4,28267103,0,0x0,8
tick,0x7fff4326feb4,28283131,0,0x0,8
tick,0x7fff4326feb4,28299143,0,0x0,8
tick,0x7fff4326feb4,28315163,0,0x0,8
tick,0x7fff4326feb4,28331168,0,0x0,8
tick,0x7fff4326feb4,28347187,0,0x0,8
tick,0x7fff4326feb4,28362192,0,0x0,8
tick,0x7fff4326feb4,28378279,0,0x0,8
tick,0x7fff4326feb4,28394268,0,0x0,8
tick,0x7fff4326feb4,28410256,0,0x0,8
tick,0x7fff4326feb4,28426253,0,0x0,8
tick,0x7fff4326feb4,28442275,0,0x0,8
tick,0x7fff4326feb4,28458504,0,0x0,8
tick,0x7fff4326feb4,28474297,0,0x0,8
tick,0x7fff4326feb4,28489324,0,0x0,8
tick,0x7fff4326feb4,28505317,0,0x0,8
tick,0x7fff4326feb4,28521356,0,0x0,8
tick,0x7fff4326feb4,28537383,0,0x0,8
tick,0x7fff4326feb4,28553375,0,0x0,8
tick,0x7fff4326feb4,28569388,0,0x0,8
tick,0x7fff4326feb4,28585392,0,0x0,8
tick,0x7fff4326feb4,28601409,0,0x0,8
tick,0x7fff4326feb4,28617417,0,0x0,8
tick,0x7fff4326feb4,28633480,0,0x0,8
tick,0x7fff4326feb4,28649463,0,0x0,8
tick,0x7fff4326feb4,28665467,0,0x0,8
tick,0x7fff4326feb4,28681503,0,0x0,8
tick,0x7fff4326feb4,28697506,0,0x0,8
tick,0x7fff4326feb4,28712531,0,0x0,8
tick,0x7fff4326feb4,28728526,0,0x0,8
tick,0x7fff4326feb4,28744540,0,0x0,8
tick,0x7fff4326feb4,28760553,0,0x0,8
tick,0x7fff4326feb4,28776567,0,0x0,8
tick,0x7fff4326feb4,28792597,0,0x0,8
tick,0x7fff4326feb4,28808601,0,0x0,8
tick,0x7fff4326feb4,28824608,0,0x0,8
tick,0x7fff4326feb4,28840683,0,0x0,8
tick,0x7fff4326feb4,28856676,0,0x0,8
tick,0x7fff4326feb4,28872659,0,0x0,8
tick,0x7fff4326feb4,28888664,0,0x0,8
tick,0x7fff4326feb4,28904692,0,0x0,8
tick,0x7fff4326feb4,28920700,0,0x0,8
tick,0x7fff4326feb4,28936712,0,0x0,8
tick,0x7fff4326feb4,28952720,0,0x0,8
tick,0x7fff4326feb4,28968759,0,0x0,8
tick,0x7fff4326feb4,28984764,0,0x0,8
tick,0x7fff4326feb4,29000772,0,0x0,8
tick,0x7fff4326feb4,29016777,0,0x0,8
tick,0x7fff4326feb4,29032795,0,0x0,8
tick,0x7fff4326feb4,29048836,0,0x0,8
tick,0x7fff4326feb4,29064828,0,0x0,8
tick,0x7fff4326feb4,29080836,0,0x0,8
tick,0x7fff4326feb4,29096857,0,0x0,8
tick,0x7fff4326feb4,29112891,0,0x0,8
tick,0x7fff4326feb4,29128931,0,0x0,8
tick,0x7fff4326feb4,29144942,0,0x0,8
tick,0x7fff4326feb4,29160921,0,0x0,8
tick,0x7fff4326feb4,29176952,0,0x0,8
tick,0x7fff4326feb4,29192945,0,0x0,8
tick,0x7fff4326feb4,29208961,0,0x0,8
tick,0x7fff4326feb4,29224971,0,0x0,8
tick,0x7fff4326feb4,29240992,0,0x0,8
tick,0x7fff4326feb4,29257013,0,0x0,8
tick,0x7fff4326feb4,29273019,0,0x0,8
tick,0x7fff4326feb4,29289037,0,0x0,8
tick,0x7fff4326feb4,29305041,0,0x0,8
tick,0x7fff4326feb4,29321064,0,0x0,8
tick,0x7fff4326feb4,29337074,0,0x0,8
tick,0x7fff4326feb4,29353081,0,0x0,8
tick,0x7fff4326feb4,29369105,0,0x0,8
tick,0x7fff4326feb4,29385112,0,0x0,8
tick,0x7fff4326feb4,29401140,0,0x0,8
tick,0x7fff4326feb4,29417210,0,0x0,8
tick,0x7fff4326feb4,29433161,0,0x0,8
tick,0x7fff4326feb4,29449172,0,0x0,8
tick,0x7fff4326feb4,29464197,0,0x0,8
tick,0x7fff4326feb4,29480207,0,0x0,8
tick,0x7fff4326feb4,29496222,0,0x0,8
tick,0x7fff4326feb4,29512234,0,0x0,8
tick,0x7fff4326feb4,29528245,0,0x0,8
tick,0x7fff4326feb4,29544272,0,0x0,8
tick,0x7fff4326feb4,29560281,0,0x0,8
tick,0x7fff4326feb4,29576294,0,0x0,8
tick,0x7fff4326feb4,29592310,0,0x0,8
tick,0x7fff4326feb4,29608322,0,0x0,8
tick,0x7fff4326feb4,29624331,0,0x0,8
tick,0x7fff4326feb4,29640348,0,0x0,8
tick,0x7fff4326feb4,29656457,0,0x0,8
tick,0x7fff4326feb4,29672382,0,0x0,8
tick,0x7fff4326feb4,29688390,0,0x0,8
tick,0x7fff4326feb4,29704410,0,0x0,8
tick,0x7fff4326feb4,29720426,0,0x0,8
tick,0x7fff4326feb4,29736440,0,0x0,8
tick,0x7fff4326feb4,29752456,0,0x0,8
tick,0x7fff4326feb4,29768467,0,0x0,8
tick,0x7fff4326feb4,29784495,0,0x0,8
tick,0x7fff4326feb4,29800503,0,0x0,8
tick,0x7fff4326feb4,29816521,0,0x0,8
tick,0x7fff4326feb4,29832523,0,0x0,8
tick,0x7fff4326feb4,29848576,0,0x0,8
tick,0x7fff4326feb4,29864556,0,0x0,8
tick,0x7fff4326feb4,29880591,0,0x0,8
tick,0x7fff4326feb4,29896586,0,0x0,8
tick,0x7fff4326feb4,29912590,0,0x0,8
tick,0x7fff4326feb4,29928630,0,0x0,8
tick,0x7fff4326feb4,29944645,0,0x0,8
tick,0x7fff4326feb4,29960634,0,0x0,8
tick,0x7fff4326feb4,29976651,0,0x0,8
tick,0x7fff4326feb4,29992681,0,0x0,8
tick,0x7fff4326feb4,30008684,0,0x0,8
tick,0x7fff4326feb4,30024702,0,0x0,8
tick,0x7fff4326feb4,30040716,0,0x0,8
tick,0x7fff4326feb4,30056731,0,0x0,8
tick,0x7fff4326feb4,30072903,0,0x0,8
tick,0x7fff4326feb4,30088760,0,0x0,8
tick,0x7fff4326feb4,30104766,0,0x0,8
tick,0x7fff4326feb4,30120806,0,0x0,8
tick,0x7fff4326feb4,30136805,0,0x0,8
tick,0x7fff4326feb4,30152821,0,0x0,8
tick,0x7fff4326feb4,30168892,0,0x0,8
tick,0x7fff4326feb4,30184872,0,0x0,8
tick,0x7fff4326feb4,30200873,0,0x0,8
tick,0x7fff4326feb4,30216905,0,0x0,8
tick,0x7fff4326feb4,30232902,0,0x0,8
tick,0x7fff4326feb4,30248914,0,0x0,8
tick,0x7fff4326feb4,30264925,0,0x0,8
tick,0x7fff4326feb4,30280927,0,0x0,8
tick,0x7fff4326feb4,30296956,0,0x0,8
tick,0x7fff4326feb4,30312988,0,0x0,8
tick,0x7fff4326feb4,30328993,0,0x0,8
tick,0x7fff4326feb4,30344986,0,0x0,8
tick,0x7fff4326feb4,30361025,0,0x0,8
tick,0x7fff4326feb4,30377045,0,0x0,8
tick,0x7fff4326feb4,30393036,0,0x0,8
tick,0x7fff4326feb4,30409048,0,0x0,8
tick,0x7fff4326feb4,30425062,0,0x0,8
tick,0x7fff4326feb4,30441091,0,0x0,8
tick,0x7fff4326feb4,30457096,0,0x0,8
tick,0x7fff4326feb4,30473110,0,0x0,8
tick,0x7fff4326feb4,30489126,0,0x0,8
tick,0x7fff4326feb4,30505145,0,0x0,8
tick,0x7fff4326feb4,30521168,0,0x0,8
tick,0x7fff4326feb4,30537181,0,0x0,8
tick,0x7fff4326feb4,30553174,0,0x0,8
tick,0x7fff4326feb4,30569202,0,0x0,8
tick,0x7fff4326feb4,30585226,0,0x0,8
tick,0x7fff4326feb4,30601224,0,0x0,8
tick,0x7fff4326feb4,30617233,0,0x0,8
tick,0x7fff4326feb4,30633254,0,0x0,8
tick,0x7fff4326feb4,30649268,0,0x0,8
tick,0x7fff4326feb4,30665282,0,0x0,8
tick,0x7fff4326feb4,30681414,0,0x0,8
tick,0x7fff4326feb4,30697312,0,0x0,8
tick,0x7fff4326feb4,30712328,0,0x0,8
tick,0x7fff4326feb4,30728354,0,0x0,8
tick,0x7fff4326feb4,30744368,0,0x0,8
tick,0x7fff4326feb4,30760378,0,0x0,8
tick,0x7fff4326feb4,30776386,0,0x0,8
tick,0x7fff4326feb4,30792393,0,0x0,8
tick,0x7fff4326feb4,30808415,0,0x0,8
tick,0x7fff4326feb4,30824423,0,0x0,8
tick,0x7fff4326feb4,30840451,0,0x0,8
tick,0x7fff4326feb4,30856453,0,0x0,8
tick,0x7fff4326feb4,30872473,0,0x0,8
tick,0x7fff4326feb4,30888526,0,0x0,8
tick,0x7fff4326feb4,30904508,0,0x0,8
tick,0x7fff4326feb4,30920507,0,0x0,8
tick,0x7fff4326feb4,30936525,0,0x0,8
tick,0x7fff4326feb4,30952552,0,0x0,8
tick,0x7fff4326feb4,30968561,0,0x0,8
tick,0x7fff4326feb4,30984581,0,0x0,8
tick,0x7fff4326feb4,31000591,0,0x0,8
tick,0x7fff4326feb4,31016613,0,0x0,8
tick,0x7fff4326feb4,31032629,0,0x0,8
tick,0x7fff4326feb4,31048641,0,0x0,8
tick,0x7fff4326feb4,31064640,0,0x0,8
tick,0x7fff4326feb4,31080665,0,0x0,8
tick,0x7fff4326feb4,31096687,0,0x0,8
tick,0x7fff4326feb4,31111689,0,0x0,8
tick,0x7fff4326feb4,31127704,0,0x0,8
tick,0x7fff4326feb4,31143720,0,0x0,8
tick,0x7fff4326feb4,31159733,0,0x0,8
tick,0x7fff4326feb4,31175773,0,0x0,8
tick,0x7fff4326feb4,31191799,0,0x0,8
tick,0x7fff4326feb4,31207797,0,0x0,8
tick,0x7fff4326feb4,31223793,0,0x0,8
tick,0x7fff4326feb4,31239801,0,0x0,8
tick,0x7fff4326feb4,31255821,0,0x0,8
tick,0x7fff4326feb4,31271832,0,0x0,8
tick,0x7fff4326feb4,31287851,0,0x0,8
tick,0x7fff4326feb4,31303864,0,0x0,8
tick,0x7fff4326feb4,31319870,0,0x0,8
tick,0x7fff4326feb4,31335901,0,0x0,8
tick,0x7fff4326feb4,31351931,0,0x0,8
tick,0x7fff4326feb4,31367916,0,0x0,8
tick,0x7fff4326feb4,31383944,0,0x0,8
tick,0x7fff4326feb4,31399949,0,0x0,8
tick,0x7fff4326feb4,31415959,0,0x0,8
tick,0x7fff4326feb4,31431972,0,0x0,8
tick,0x7fff4326feb4,31448004,0,0x0,8
tick,0x7fff4326feb4,31464053,0,0x0,8
tick,0x7fff4326feb4,31480024,0,0x0,8
tick,0x7fff4326feb4,31496032,0,0x0,8
tick,0x7fff4326feb4,31512060,0,0x0,8
tick,0x7fff4326feb4,31528082,0,0x0,8
tick,0x7fff4326feb4,31544073,0,0x0,8
tick,0x7fff4326feb4,31560092,0,0x0,8
tick,0x7fff4326feb4,31576116,0,0x0,8
tick,0x7fff4326feb4,31592128,0,0x0,8
tick,0x7fff4326feb4,31608140,0,0x0,8
tick,0x7fff4326feb4,31624150,0,0x0,8
tick,0x7fff4326feb4,31640161,0,0x0,8
tick,0x7fff4326feb4,31656191,0,0x0,8
tick,0x7fff4326feb4,31672206,0,0x0,8
tick,0x7fff4326feb4,31688206,0,0x0,8
tick,0x7fff4326feb4,31704296,0,0x0,8
tick,0x7fff4326feb4,31720313,0,0x0,8
tick,0x7fff4326feb4,31736261,0,0x0,8
tick,0x7fff4326feb4,31752266,0,0x0,8
tick,0x7fff4326feb4,31768288,0,0x0,8
tick,0x7fff4326feb4,31783399,0,0x0,8
tick,0x7fff4326feb4,31799315,0,0x0,8
tick,0x7fff4326feb4,31815080,0,0x0,8
tick,0x7fff4326feb4,31830271,0,0x0,8
tick,0x7fff4326feb4,31845675,0,0x0,8
tick,0x7fff4326feb4,31861158,0,0x0,8
tick,0x7fff4326feb4,31877033,0,0x0,8
tick,0x7fff4326feb4,31892912,0,0x0,8
tick,0x7fff4326feb4,31909172,0,0x0,8
tick,0x7fff4326feb4,31924855,0,0x0,8
tick,0x7fff4326feb4,31940370,0,0x0,8
tick,0x7fff4326feb4,31956276,0,0x0,8
tick,0x7fff4326feb4,31971768,0,0x0,8
tick,0x7fff4326feb4,31986891,0,0x0,8
tick,0x7fff4326feb4,32002177,0,0x0,8
tick,0x7fff4326feb4,32017992,0,0x0,8
tick,0x7fff4326feb4,32034083,0,0x0,8
tick,0x7fff4326feb4,32049952,0,0x0,8
tick,0x7fff4326feb4,32065902,0,0x0,8
tick,0x7fff4326feb4,32081036,0,0x0,8
tick,0x7fff4326feb4,32097269,0,0x0,8
tick,0x7fff4326feb4,32112534,0,0x0,8
tick,0x7fff4326feb4,32127846,0,0x0,8
tick,0x7fff4326feb4,32142868,0,0x0,8
tick,0x7fff4326feb4,32158878,0,0x0,8
tick,0x7fff4326feb4,32174464,0,0x0,8
tick,0x7fff4326feb4,32190006,0,0x0,8
tick,0x7fff4326feb4,32206018,0,0x0,8
tick,0x7fff4326feb4,32221225,0,0x0,8
tick,0x7fff4326feb4,32236985,0,0x0,8
tick,0x7fff4326feb4,32252448,0,0x0,8
tick,0x7fff4326feb4,32268347,0,0x0,8
tick,0x7fff4326feb4,32284187,0,0x0,8
tick,0x7fff4326feb4,32299195,0,0x0,8
tick,0x7fff4326feb4,32314200,0,0x0,8
tick,0x7fff4326feb4,32330220,0,0x0,8
tick,0x7fff4326feb4,32346261,0,0x0,8
tick,0x7fff4326feb4,32361685,0,0x0,8
tick,0x7fff4326feb4,32377955,0,0x0,8
tick,0x7fff4326feb4,32393028,0,0x0,8
tick,0x7fff4326feb4,32408789,0,0x0,8
tick,0x7fff4326feb4,32423795,0,0x0,8
tick,0x7fff4326feb4,32439452,0,0x0,8
tick,0x7fff4326feb4,32454815,0,0x0,8
tick,0x7fff4326feb4,32470791,0,0x0,8
tick,0x7fff4326feb4,32485799,0,0x0,8
tick,0x7fff4326feb4,32502080,0,0x0,8
tick,0x7fff4326feb4,32517796,0,0x0,8
tick,0x7fff4326feb4,32532937,0,0x0,8
tick,0x7fff4326feb4,32548843,0,0x0,8
tick,0x7fff4326feb4,32563390,0,0x0,8
tick,0x7fff4326feb4,32578735,0,0x0,8
tick,0x7fff4326feb4,32594145,0,0x0,8
tick,0x7fff4326feb4,32610234,0,0x0,8
tick,0x7fff4326feb4,32625054,0,0x0,8
tick,0x7fff4326feb4,32641456,0,0x0,8
tick,0x7fff4326feb4,32656822,0,0x0,8
tick,0x7fff4326feb4,32672842,0,0x0,8
tick,0x7fff4326feb4,32688793,0,0x0,8
tick,0x7fff4326feb4,32704738,0,0x0,8
tick,0x7fff4326feb4,32720283,0,0x0,8
tick,0x7fff4326feb4,32735289,0,0x0,8
tick,0x7fff4326feb4,32751332,0,0x0,8
tick,0x7fff4326feb4,32767661,0,0x0,8
tick,0x7fff4326feb4,32783289,0,0x0,8
tick,0x7fff4326feb4,32798956,0,0x0,8
tick,0x7fff4326feb4,32814331,0,0x0,8
tick,0x7fff4326feb4,32829167,0,0x0,8
tick,0x7fff4326feb4,32844115,0,0x0,8
tick,0x7fff4326feb4,32859442,0,0x0,8
tick,0x7fff4326feb4,32875484,0,0x0,8
tick,0x7fff4326feb4,32890949,0,0x0,8
tick,0x7fff4326feb4,32906359,0,0x0,8
tick,0x7fff4326feb4,32921286,0,0x0,8
tick,0x7fff4326feb4,32936654,0,0x0,8
tick,0x7fff4326feb4,32952046,0,0x0,8
tick,0x7fff4326feb4,32967864,0,0x0,8
tick,0x7fff4326feb4,32982293,0,0x0,8
tick,0x7fff4326feb4,32997467,0,0x0,8
tick,0x7fff4326feb4,33012826,0,0x0,8
tick,0x7fff4326feb4,33028846,0,0x0,8
tick,0x7fff4326feb4,33044806,0,0x0,8
tick,0x7fff4326feb4,33060755,0,0x0,8
tick,0x7fff4326feb4,33076826,0,0x0,8
tick,0x7fff4326feb4,33091921,0,0x0,8
tick,0x7fff4326feb4,33108221,0,0x0,8
tick,0x7fff4326feb4,33123838,0,0x0,8
tick,0x7fff4326feb4,33139790,0,0x0,8
tick,0x7fff4326feb4,33155786,0,0x0,8
tick,0x7fff4326feb4,33171612,0,0x0,8
tick,0x7fff4326feb4,33186770,0,0x0,8
tick,0x7fff4326feb4,33202770,0,0x0,8
tick,0x7fff4326feb4,33218198,0,0x0,8
tick,0x7fff4326feb4,33234589,0,0x0,8
tick,0x7fff4326feb4,33249862,0,0x0,8
tick,0x7fff4326feb4,33265131,0,0x0,8
tick,0x7fff4326feb4,33280787,0,0x0,8
tick,0x7fff4326feb4,33296798,0,0x0,8
tick,0x7fff4326feb4,33313018,0,0x0,8
tick,0x7fff4326feb4,33328052,0,0x0,8
tick,0x7fff4326feb4,33343108,0,0x0,8
tick,0x7fff4326feb4,33358453,0,0x0,8
tick,0x7fff4326feb4,33374177,0,0x0,8
tick,0x7fff4326feb4,33390134,0,0x0,8
tick,0x7fff4326feb4,33406521,0,0x0,8
tick,0x7fff4326feb4,33422100,0,0x0,8
tick,0x7fff4326feb4,33437947,0,0x0,8
tick,0x7fff4326feb4,33453082,0,0x0,8
tick,0x7fff4326feb4,33468997,0,0x0,8
tick,0x7fff4326feb4,33483722,0,0x0,8
tick,0x7fff4326feb4,33498750,0,0x0,8
tick,0x7fff4326feb4,33514739,0,0x0,8
tick,0x7fff4326feb4,33529902,0,0x0,8
tick,0x7fff4326feb4,33545370,0,0x0,8
tick,0x7fff4326feb4,33561584,0,0x0,8
tick,0x7fff4326feb4,33576719,0,0x0,8
tick,0x7fff4326feb4,33592367,0,0x0,8
tick,0x7fff4326feb4,33608023,0,0x0,8
tick,0x7fff4326feb4,33623586,0,0x0,8
tick,0x7fff4326feb4,33639056,0,0x0,8
tick,0x7fff4326feb4,33654369,0,0x0,8
tick,0x7fff4326feb4,33669949,0,0x0,8
tick,0x7fff4326feb4,33685446,0,0x0,8
tick,0x7fff4326feb4,33701103,0,0x0,8
tick,0x7fff4326feb4,33717473,0,0x0,8
tick,0x7fff4326feb4,33732896,0,0x0,8
tick,0x7fff4326feb4,33748815,0,0x0,8
tick,0x7fff4326feb4,33765184,0,0x0,8
tick,0x7fff4326feb4,33781417,0,0x0,8
tick,0x7fff4326feb4,33796916,0,0x0,8
tick,0x7fff4326feb4,33812229,0,0x0,8
tick,0x7fff4326feb4,33827594,0,0x0,8
tick,0x7fff4326feb4,33843030,0,0x0,8
tick,0x7fff4326feb4,33858171,0,0x0,8
tick,0x7fff4326feb4,33874034,0,0x0,8
tick,0x7fff4326feb4,33889745,0,0x0,8
tick,0x7fff4326feb4,33905310,0,0x0,8
tick,0x7fff4326feb4,33920740,0,0x0,8
tick,0x7fff4326feb4,33936050,0,0x0,8
tick,0x7fff4326feb4,33951484,0,0x0,8
tick,0x7fff4326feb4,33967179,0,0x0,8
tick,0x7fff4326feb4,33982677,0,0x0,8
tick,0x7fff4326feb4,33998336,0,0x0,8
tick,0x7fff4326feb4,34013610,0,0x0,8
tick,0x7fff4326feb4,34029524,0,0x0,8
tick,0x7fff4326feb4,34045045,0,0x0,8
tick,0x7fff4326feb4,34061107,0,0x0,8
tick,0x7fff4326feb4,34076749,0,0x0,8
tick,0x7fff4326feb4,34092068,0,0x0,8
tick,0x7fff4326feb4,34108104,0,0x0,8
tick,0x7fff4326feb4,34124042,0,0x0,8
tick,0x7fff4326feb4,34139766,0,0x0,8
tick,0x7fff4326feb4,34154762,0,0x0,8
tick,0x7fff4326feb4,34170992,0,0x0,8
tick,0x7fff4326feb4,34186533,0,0x0,8
tick,0x7fff4326feb4,34201940,0,0x0,8
tick,0x7fff4326feb4,34217533,0,0x0,8
tick,0x7fff4326feb4,34233800,0,0x0,8
tick,0x7fff4326feb4,34249777,0,0x0,8
tick,0x7fff4326feb4,34266069,0,0x0,8
tick,0x7fff4326feb4,34281363,0,0x0,8
tick,0x7fff4326feb4,34296930,0,0x0,8
tick,0x7fff4326feb4,34311874,0,0x0,8
tick,0x7fff4326feb4,34328129,0,0x0,8
tick,0x7fff4326feb4,34343584,0,0x0,8
tick,0x7fff4326feb4,34359758,0,0x0,8
tick,0x7fff4326feb4,34375872,0,0x0,8
tick,0x7fff4326feb4,34391124,0,0x0,8
tick,0x7fff4326feb4,34406823,0,0x0,8
tick,0x7fff4326feb4,34423130,0,0x0,8
tick,0x7fff4326feb4,34438739,0,0x0,8
tick,0x7fff4326feb4,34454760,0,0x0,8
tick,0x7fff4326feb4,34470781,0,0x0,8
tick,0x7fff4326feb4,34486057,0,0x0,8
tick,0x7fff4326feb4,34500914,0,0x0,8
tick,0x7fff4326feb4,34517110,0,0x0,8
tick,0x7fff4326feb4,34533394,0,0x0,8
tick,0x7fff4326feb4,34547819,0,0x0,8
tick,0x7fff4326feb4,34563243,0,0x0,8
tick,0x7fff4326feb4,34579534,0,0x0,8
tick,0x7fff4326feb4,34595297,0,0x0,8
tick,0x7fff4326feb4,34611062,0,0x0,8
tick,0x7fff4326feb4,34627381,0,0x0,8
tick,0x7fff4326feb4,34642645,0,0x0,8
tick,0x7fff4326feb4,34658791,0,0x0,8
tick,0x7fff4326feb4,34674215,0,0x0,8
tick,0x7fff4326feb4,34689795,0,0x0,8
tick,0x7fff4326feb4,34705443,0,0x0,8
tick,0x7fff4326feb4,34721122,0,0x0,8
tick,0x7fff4326feb4,34736773,0,0x0,8
tick,0x7fff4326feb4,34752819,0,0x0,8
tick,0x7fff4326feb4,34768768,0,0x0,8
tick,0x7fff4326feb4,34783995,0,0x0,8
tick,0x7fff4326feb4,34800276,0,0x0,8
tick,0x7fff4326feb4,34815320,0,0x0,8
tick,0x7fff4326feb4,34830935,0,0x0,8
tick,0x7fff4326feb4,34846497,0,0x0,8
tick,0x7fff4326feb4,34862402,0,0x0,8
tick,0x7fff4326feb4,34878067,0,0x0,8
tick,0x7fff4326feb4,34893592,0,0x0,8
tick,0x7fff4326feb4,34909324,0,0x0,8
tick,0x7fff4326feb4,34925459,0,0x0,8
tick,0x7fff4326feb4,34940781,0,0x0,8
tick,0x7fff4326feb4,34956771,0,0x0,8
tick,0x7fff4326feb4,34973018,0,0x0,8
tick,0x7fff4326feb4,34989138,0,0x0,8
tick,0x7fff4326feb4,35004303,0,0x0,8
tick,0x7fff4326feb4,35020076,0,0x0,8
tick,0x7fff4326feb4,35035780,0,0x0,8
tick,0x7fff4326feb4,35051400,0,0x0,8
tick,0x7fff4326feb4,35067396,0,0x0,8
tick,0x7fff4326feb4,35082942,0,0x0,8
tick,0x7fff4326feb4,35098283,0,0x0,8
tick,0x7fff4326feb4,35113993,0,0x0,8
tick,0x7fff4326feb4,35129768,0,0x0,8
tick,0x7fff4326feb4,35144739,0,0x0,8
tick,0x7fff4326feb4,35160356,0,0x0,8
tick,0x7fff4326feb4,35176358,0,0x0,8
tick,0x7fff4326feb4,35191885,0,0x0,8
tick,0x7fff4326feb4,35207605,0,0x0,8
tick,0x7fff4326feb4,35223314,0,0x0,8
tick,0x7fff4326feb4,35239078,0,0x0,8
tick,0x7fff4326feb4,35254819,0,0x0,8
tick,0x7fff4326feb4,35270341,0,0x0,8
tick,0x7fff4326feb4,35285964,0,0x0,8
tick,0x7fff4326feb4,35302106,0,0x0,8
tick,0x7fff4326feb4,35317339,0,0x0,8
tick,0x7fff4326feb4,35332953,0,0x0,8
tick,0x7fff4326feb4,35348077,0,0x0,8
tick,0x7fff4326feb4,35363346,0,0x0,8
tick,0x7fff4326feb4,35379054,0,0x0,8
tick,0x7fff4326feb4,35394473,0,0x0,8
tick,0x7fff4326feb4,35410112,0,0x0,8
tick,0x7fff4326feb4,35425819,0,0x0,8
tick,0x7fff4326feb4,35441246,0,0x0,8
tick,0x7fff4326feb4,35456869,0,0x0,8
tick,0x7fff4326feb4,35472568,0,0x0,8
tick,0x7fff4326feb4,35488219,0,0x0,8
tick,0x7fff4326feb4,35503918,0,0x0,8
tick,0x7fff4326feb4,35519530,0,0x0,8
tick,0x7fff4326feb4,35535281,0,0x0,8
tick,0x7fff4326feb4,35551809,0,0x0,8
tick,0x7fff4326feb4,35567263,0,0x0,8
tick,0x7fff4326feb4,35582251,0,0x0,8
tick,0x7fff4326feb4,35598236,0,0x0,8
tick,0x7fff4326feb4,35614253,0,0x0,8
tick,0x7fff4326feb4,35629589,0,0x0,8
tick,0x7fff4326feb4,35645802,0,0x0,8
tick,0x7fff4326feb4,35661818,0,0x0,8
tick,0x7fff4326feb4,35677310,0,0x0,8
tick,0x7fff4326feb4,35692810,0,0x0,8
tick,0x7fff4326feb4,35708131,0,0x0,8
tick,0x7fff4326feb4,35724198,0,0x0,8
tick,0x7fff4326feb4,35739831,0,0x0,8
tick,0x7fff4326feb4,35755972,0,0x0,8
tick,0x7fff4326feb4,35772238,0,0x0,8
tick,0x7fff4326feb4,35788306,0,0x0,8
tick,0x7fff4326feb4,35803024,0,0x0,8
tick,0x7fff4326feb4,35818624,0,0x0,8
tick,0x7fff4326feb4,35833921,0,0x0,8
tick,0x7fff4326feb4,35849429,0,0x0,8
tick,0x7fff4326feb4,35865651,0,0x0,8
tick,0x7fff4326feb4,35881272,0,0x0,8
tick,0x7fff4326feb4,35896954,0,0x0,8
tick,0x7fff4326feb4,35912629,0,0x0,8
tick,0x7fff4326feb4,35928628,0,0x0,8
tick,0x7fff4326feb4,35943323,0,0x0,8
tick,0x7fff4326feb4,35958355,0,0x0,8
tick,0x7fff4326feb4,35973855,0,0x0,8
tick,0x7fff4326feb4,35989464,0,0x0,8
tick,0x7fff4326feb4,36005421,0,0x0,8
tick,0x7fff4326feb4,36021116,0,0x0,8
tick,0x7fff4326feb4,36036410,0,0x0,8
tick,0x7fff4326feb4,36052547,0,0x0,8
tick,0x7fff4326feb4,36068850,0,0x0,8
tick,0x7fff4326feb4,36084906,0,0x0,8
tick,0x7fff4326feb4,36100331,0,0x0,8
tick,0x7fff4326feb4,36115980,0,0x0,8
tick,0x7fff4326feb4,36131725,0,0x0,8
tick,0x7fff4326feb4,36148185,0,0x0,8
tick,0x7fff4326feb4,36164359,0,0x0,8
tick,0x7fff4326feb4,36180684,0,0x0,8
tick,0x7fff4326feb4,36195983,0,0x0,8
tick,0x7fff4326feb4,36211289,0,0x0,8
tick,0x7fff4326feb4,36226839,0,0x0,8
tick,0x7fff4326feb4,36242354,0,0x0,8
tick,0x7fff4326feb4,36258568,0,0x0,8
tick,0x7fff4326feb4,36274169,0,0x0,8
tick,0x7fff4326feb4,36289708,0,0x0,8
tick,0x7fff4326feb4,36305619,0,0x0,8
tick,0x7fff4326feb4,36321024,0,0x0,8
tick,0x7fff4326feb4,36336040,0,0x0,8
tick,0x7fff4326feb4,36351913,0,0x0,8
tick,0x7fff4326feb4,36367831,0,0x0,8
tick,0x7fff4326feb4,36383436,0,0x0,8
tick,0x7fff4326feb4,36399376,0,0x0,8
tick,0x7fff4326feb4,36414917,0,0x0,8
tick,0x7fff4326feb4,36430333,0,0x0,8
tick,0x7fff4326feb4,36446133,0,0x0,8
tick,0x7fff4326feb4,36461590,0,0x0,8
tick,0x7fff4326feb4,36477613,0,0x0,8
tick,0x7fff4326feb4,36493591,0,0x0,8
tick,0x7fff4326feb4,36509582,0,0x0,8
tick,0x7fff4326feb4,36525579,0,0x0,8
tick,0x7fff4326feb4,36541567,0,0x0,8
tick,0x7fff4326feb4,36557594,0,0x0,8
tick,0x7fff4326feb4,36574091,0,0x0,8
tick,0x7fff4326feb4,36589118,0,0x0,8
tick,0x7fff4326feb4,36605227,0,0x0,8
tick,0x7fff4326feb4,36620122,0,0x0,8
tick,0x7fff4326feb4,36635893,0,0x0,8
tick,0x7fff4326feb4,36651370,0,0x0,8
tick,0x7fff4326feb4,36666515,0,0x0,8
tick,0x7fff4326feb4,36682147,0,0x0,8
tick,0x7fff4326feb4,36697567,0,0x0,8
tick,0x7fff4326feb4,36713184,0,0x0,8
tick,0x7fff4326feb4,36729502,0,0x0,8
tick,0x7fff4326feb4,36744981,0,0x0,8
tick,0x7fff4326feb4,36761184,0,0x0,8
tick,0x7fff4326feb4,36776563,0,0x0,8
tick,0x7fff4326feb4,36792565,0,0x0,8
tick,0x7fff4326feb4,36808005,0,0x0,8
tick,0x7fff4326feb4,36823705,0,0x0,8
tick,0x7fff4326feb4,36838956,0,0x0,8
tick,0x7fff4326feb4,36854617,0,0x0,8
tick,0x7fff4326feb4,36869592,0,0x0,8
tick,0x7fff4326feb4,36885596,0,0x0,8
tick,0x7fff4326feb4,36901587,0,0x0,8
tick,0x7fff4326feb4,36917591,0,0x0,8
tick,0x7fff4326feb4,36933600,0,0x0,8
tick,0x7fff4326feb4,36948406,0,0x0,8
tick,0x7fff4326feb4,36963610,0,0x0,8
tick,0x7fff4326feb4,36979032,0,0x0,8
tick,0x7fff4326feb4,36994852,0,0x0,8
tick,0x7fff4326feb4,37010564,0,0x0,8
tick,0x7fff4326feb4,37025879,0,0x0,8
tick,0x7fff4326feb4,37041556,0,0x0,8
tick,0x7fff4326feb4,37057598,0,0x0,8
tick,0x7fff4326feb4,37072936,0,0x0,8
tick,0x7fff4326feb4,37088341,0,0x0,8
tick,0x7fff4326feb4,37103573,0,0x0,8
tick,0x7fff4326feb4,37119569,0,0x0,8
tick,0x7fff4326feb4,37135571,0,0x0,8
tick,0x7fff4326feb4,37151567,0,0x0,8
tick,0x7fff4326feb4,37166573,0,0x0,8
tick,0x7fff4326feb4,37181705,0,0x0,8
tick,0x7fff4326feb4,37197590,0,0x0,8
tick,0x7fff4326feb4,37212575,0,0x0,8
tick,0x7fff4326feb4,37227994,0,0x0,8
tick,0x7fff4326feb4,37243117,0,0x0,8
tick,0x7fff4326feb4,37258699,0,0x0,8
tick,0x7fff4326feb4,37274193,0,0x0,8
tick,0x7fff4326feb4,37289699,0,0x0,8
tick,0x7fff4326feb4,37305550,0,0x0,8
tick,0x7fff4326feb4,37321169,0,0x0,8
tick,0x7fff4326feb4,37336498,0,0x0,8
tick,0x7fff4326feb4,37351643,0,0x0,8
tick,0x7fff4326feb4,37366658,0,0x0,8
tick,0x7fff4326feb4,37382589,0,0x0,8
tick,0x7fff4326feb4,37398057,0,0x0,8
tick,0x7fff4326feb4,37412589,0,0x0,8
tick,0x7fff4326feb4,37428098,0,0x0,8
tick,0x7fff4326feb4,37443569,0,0x0,8
tick,0x7fff4326feb4,37458618,0,0x0,8
tick,0x7fff4326feb4,37474494,0,0x0,8
tick,0x7fff4326feb4,37489350,0,0x0,8
tick,0x7fff4326feb4,37505285,0,0x0,8
tick,0x7fff4326feb4,37520733,0,0x0,8
tick,0x7fff4326feb4,37536602,0,0x0,8
tick,0x7fff4326feb4,37552605,0,0x0,8
tick,0x7fff4326feb4,37568615,0,0x0,8
tick,0x7fff4326feb4,37584635,0,0x0,8
tick,0x7fff4326feb4,37600620,0,0x0,8
tick,0x7fff4326feb4,37616592,0,0x0,8
tick,0x7fff4326feb4,37632019,0,0x0,8
tick,0x7fff4326feb4,37647960,0,0x0,8
tick,0x7fff4326feb4,37663082,0,0x0,8
tick,0x7fff4326feb4,37678596,0,0x0,8
tick,0x7fff4326feb4,37694218,0,0x0,8
tick,0x7fff4326feb4,37709711,0,0x0,8
tick,0x7fff4326feb4,37724951,0,0x0,8
tick,0x7fff4326feb4,37740444,0,0x0,8
tick,0x7fff4326feb4,37756066,0,0x0,8
tick,0x7fff4326feb4,37772031,0,0x0,8
tick,0x7fff4326feb4,37787742,0,0x0,8
tick,0x7fff4326feb4,37803580,0,0x0,8
tick,0x7fff4326feb4,37819594,0,0x0,8
tick,0x7fff4326feb4,37835323,0,0x0,8
tick,0x7fff4326feb4,37851027,0,0x0,8
tick,0x7fff4326feb4,37866649,0,0x0,8
tick,0x7fff4326feb4,37882131,0,0x0,8
tick,0x7fff4326feb4,37898008,0,0x0,8
tick,0x7fff4326feb4,37913005,0,0x0,8
tick,0x7fff4326feb4,37927587,0,0x0,8
tick,0x7fff4326feb4,37942959,0,0x0,8
tick,0x7fff4326feb4,37958584,0,0x0,8
tick,0x7fff4326feb4,37974003,0,0x0,8
tick,0x7fff4326feb4,37989624,0,0x0,8
tick,0x7fff4326feb4,38005575,0,0x0,8
tick,0x7fff4326feb4,38020558,0,0x0,8
tick,0x7fff4326feb4,38036600,0,0x0,8
tick,0x7fff4326feb4,38052585,0,0x0,8
tick,0x7fff4326feb4,38068579,0,0x0,8
tick,0x7fff4326feb4,38084602,0,0x0,8
tick,0x7fff4326feb4,38100014,0,0x0,8
tick,0x7fff4326feb4,38114701,0,0x0,8
tick,0x7fff4326feb4,38130677,0,0x0,8
tick,0x7fff4326feb4,38146033,0,0x0,8
tick,0x7fff4326feb4,38161652,0,0x0,8
tick,0x7fff4326feb4,38177227,0,0x0,8
tick,0x7fff4326feb4,38192907,0,0x0,8
tick,0x7fff4326feb4,38208322,0,0x0,8
tick,0x7fff4326feb4,38224195,0,0x0,8
tick,0x7fff4326feb4,38239971,0,0x0,8
tick,0x7fff4326feb4,38255232,0,0x0,8
tick,0x7fff4326feb4,38271047,0,0x0,8
tick,0x7fff4326feb4,38286734,0,0x0,8
tick,0x7fff4326feb4,38302078,0,0x0,8
tick,0x7fff4326feb4,38317505,0,0x0,8
tick,0x7fff4326feb4,38333377,0,0x0,8
tick,0x7fff4326feb4,38348909,0,0x0,8
tick,0x7fff4326feb4,38364057,0,0x0,8
tick,0x7fff4326feb4,38379667,0,0x0,8
tick,0x7fff4326feb4,38395088,0,0x0,8
tick,0x7fff4326feb4,38410204,0,0x0,8
tick,0x7fff4326feb4,38425328,0,0x0,8
tick,0x7fff4326feb4,38441011,0,0x0,8
tick,0x7fff4326feb4,38456393,0,0x0,8
tick,0x7fff4326feb4,38472545,0,0x0,8
tick,0x7fff4326feb4,38488008,0,0x0,8
tick,0x7fff4326feb4,38504008,0,0x0,8
tick,0x7fff4326feb4,38520026,0,0x0,8
tick,0x7fff4326feb4,38535770,0,0x0,8
tick,0x7fff4326feb4,38551604,0,0x0,8
tick,0x7fff4326feb4,38567236,0,0x0,8
tick,0x7fff4326feb4,38582924,0,0x0,8
tick,0x7fff4326feb4,38599118,0,0x0,8
tick,0x7fff4326feb4,38615310,0,0x0,8
tick,0x7fff4326feb4,38630769,0,0x0,8
tick,0x7fff4326feb4,38646219,0,0x0,8
tick,0x7fff4326feb4,38662024,0,0x0,8
tick,0x7fff4326feb4,38677577,0,0x0,8
tick,0x7fff4326feb4,38693587,0,0x0,8
tick,0x7fff4326feb4,38709654,0,0x0,8
tick,0x7fff4326feb4,38724935,0,0x0,8
tick,0x7fff4326feb4,38740601,0,0x0,8
tick,0x7fff4326feb4,38755713,0,0x0,8
tick,0x7fff4326feb4,38772034,0,0x0,8
tick,0x7fff4326feb4,38787384,0,0x0,8
tick,0x7fff4326feb4,38802682,0,0x0,8
tick,0x7fff4326feb4,38818087,0,0x0,8
tick,0x7fff4326feb4,38834082,0,0x0,8
tick,0x7fff4326feb4,38849464,0,0x0,8
tick,0x7fff4326feb4,38865258,0,0x0,8
tick,0x7fff4326feb4,38880364,0,0x0,8
tick,0x7fff4326feb4,38895966,0,0x0,8
tick,0x7fff4326feb4,38911569,0,0x0,8
tick,0x7fff4326feb4,38927540,0,0x0,8
tick,0x7fff4326feb4,38943381,0,0x0,8
tick,0x7fff4326feb4,38958913,0,0x0,8
tick,0x7fff4326feb4,38974744,0,0x0,8
tick,0x7fff4326feb4,38990426,0,0x0,8
tick,0x7fff4326feb4,39006103,0,0x0,8
tick,0x7fff4326feb4,39021931,0,0x0,8
tick,0x7fff4326feb4,39037388,0,0x0,8
tick,0x7fff4326feb4,39052717,0,0x0,8
tick,0x7fff4326feb4,39068199,0,0x0,8
tick,0x7fff4326feb4,39083424,0,0x0,8
tick,0x7fff4326feb4,39098935,0,0x0,8
tick,0x7fff4326feb4,39114190,0,0x0,8
tick,0x7fff4326feb4,39129681,0,0x0,8
tick,0x7fff4326feb4,39145304,0,0x0,8
tick,0x7fff4326feb4,39161155,0,0x0,8
tick,0x7fff4326feb4,39176749,0,0x0,8
tick,0x7fff4326feb4,39192369,0,0x0,8
tick,0x7fff4326feb4,39207995,0,0x0,8
tick,0x7fff4326feb4,39224005,0,0x0,8
tick,0x7fff4326feb4,39240023,0,0x0,8
tick,0x7fff4326feb4,39255038,0,0x0,8
tick,0x7fff4326feb4,39271042,0,0x0,8
tick,0x7fff4326feb4,39287059,0,0x0,8
tick,0x7fff4326feb4,39302472,0,0x0,8
tick,0x7fff4326feb4,39318104,0,0x0,8
tick,0x7fff4326feb4,39334014,0,0x0,8
tick,0x7fff4326feb4,39349503,0,0x0,8
tick,0x7fff4326feb4,39365185,0,0x0,8
tick,0x7fff4326feb4,39381251,0,0x0,8
tick,0x7fff4326feb4,39396631,0,0x0,8
tick,0x7fff4326feb4,39412008,0,0x0,8
tick,0x7fff4326feb4,39428189,0,0x0,8
tick,0x7fff4326feb4,39444173,0,0x0,8
tick,0x7fff4326feb4,39459190,0,0x0,8
tick,0x7fff4326feb4,39475194,0,0x0,8
tick,0x7fff4326feb4,39491210,0,0x0,8
tick,0x7fff4326feb4,39507229,0,0x0,8
tick,0x7fff4326feb4,39522943,0,0x0,8
tick,0x7fff4326feb4,39538238,0,0x0,8
tick,0x7fff4326feb4,39554272,0,0x0,8
tick,0x7fff4326feb4,39570282,0,0x0,8
tick,0x7fff4326feb4,39586284,0,0x0,8
tick,0x7fff4326feb4,39601637,0,0x0,8
tick,0x7fff4326feb4,39617038,0,0x0,8
tick,0x7fff4326feb4,39632578,0,0x0,8
tick,0x7fff4326feb4,39647793,0,0x0,8
tick,0x7fff4326feb4,39663815,0,0x0,8
tick,0x7fff4326feb4,39678996,0,0x0,8
tick,0x7fff4326feb4,39694996,0,0x0,8
tick,0x7fff4326feb4,39710569,0,0x0,8
tick,0x7fff4326feb4,39726043,0,0x0,8
tick,0x7fff4326feb4,39741579,0,0x0,8
tick,0x7fff4326feb4,39757129,0,0x0,8
tick,0x7fff4326feb4,39772147,0,0x0,8
tick,0x7fff4326feb4,39788177,0,0x0,8
tick,0x7fff4326feb4,39804177,0,0x0,8
tick,0x7fff4326feb4,39819187,0,0x0,8
tick,0x7fff4326feb4,39835260,0,0x0,8
tick,0x7fff4326feb4,39850712,0,0x0,8
tick,0x7fff4326feb4,39866077,0,0x0,8
tick,0x7fff4326feb4,39881486,0,0x0,8
tick,0x7fff4326feb4,39897014,0,0x0,8
tick,0x7fff4326feb4,39912691,0,0x0,8
tick,0x7fff4326feb4,39928367,0,0x0,8
tick,0x7fff4326feb4,39944576,0,0x0,8
tick,0x7fff4326feb4,39960713,0,0x0,8
tick,0x7fff4326feb4,39977005,0,0x0,8
tick,0x7fff4326feb4,39992417,0,0x0,8
tick,0x7fff4326feb4,40008116,0,0x0,8
tick,0x7fff4326feb4,40023734,0,0x0,8
tick,0x7fff4326feb4,40039762,0,0x0,8
tick,0x7fff4326feb4,40055444,0,0x0,8
tick,0x7fff4326feb4,40071051,0,0x0,8
tick,0x7fff4326feb4,40086578,0,0x0,8
tick,0x7fff4326feb4,40101980,0,0x0,8
tick,0x7fff4326feb4,40117983,0,0x0,8
tick,0x7fff4326feb4,40133650,0,0x0,8
tick,0x7fff4326feb4,40149560,0,0x0,8
tick,0x7fff4326feb4,40165592,0,0x0,8
tick,0x7fff4326feb4,40181593,0,0x0,8
tick,0x7fff4326feb4,40197574,0,0x0,8
tick,0x7fff4326feb4,40212581,0,0x0,8
tick,0x7fff4326feb4,40228602,0,0x0,8
tick,0x7fff4326feb4,40244593,0,0x0,8
tick,0x7fff4326feb4,40260103,0,0x0,8
tick,0x7fff4326feb4,40275897,0,0x0,8
tick,0x7fff4326feb4,40290776,0,0x0,8
tick,0x7fff4326feb4,40306577,0,0x0,8
tick,0x7fff4326feb4,40322598,0,0x0,8
tick,0x7fff4326feb4,40338196,0,0x0,8
tick,0x7fff4326feb4,40353792,0,0x0,8
tick,0x7fff4326feb4,40369270,0,0x0,8
tick,0x7fff4326feb4,40384751,0,0x0,8
tick,0x7fff4326feb4,40400835,0,0x0,8
tick,0x7fff4326feb4,40416412,0,0x0,8
tick,0x7fff4326feb4,40432197,0,0x0,8
tick,0x7fff4326feb4,40448504,0,0x0,8
tick,0x7fff4326feb4,40464145,0,0x0,8
tick,0x7fff4326feb4,40479602,0,0x0,8
tick,0x7fff4326feb4,40495310,0,0x0,8
tick,0x7fff4326feb4,40511296,0,0x0,8
tick,0x7fff4326feb4,40526622,0,0x0,8
tick,0x7fff4326feb4,40541802,0,0x0,8
tick,0x7fff4326feb4,40557687,0,0x0,8
tick,0x7fff4326feb4,40573148,0,0x0,8
tick,0x7fff4326feb4,40588309,0,0x0,8
tick,0x7fff4326feb4,40603542,0,0x0,8
tick,0x7fff4326feb4,40619154,0,0x0,8
tick,0x7fff4326feb4,40634663,0,0x0,8
tick,0x7fff4326feb4,40650800,0,0x0,8
tick,0x7fff4326feb4,40666393,0,0x0,8
tick,0x7fff4326feb4,40681742,0,0x0,8
tick,0x7fff4326feb4,40697186,0,0x0,8
tick,0x7fff4326feb4,40712813,0,0x0,8
tick,0x7fff4326feb4,40728305,0,0x0,8
tick,0x7fff4326feb4,40744187,0,0x0,8
tick,0x7fff4326feb4,40760192,0,0x0,8
tick,0x7fff4326feb4,40776108,0,0x0,8
tick,0x7fff4326feb4,40791089,0,0x0,8
tick,0x7fff4326feb4,40807286,0,0x0,8
tick,0x7fff4326feb4,40822271,0,0x0,8
tick,0x7fff4326feb4,40838643,0,0x0,8
tick,0x7fff4326feb4,40854139,0,0x0,8
tick,0x7fff4326feb4,40869606,0,0x0,8
tick,0x7fff4326feb4,40885589,0,0x0,8
tick,0x7fff4326feb4,40901617,0,0x0,8
tick,0x7fff4326feb4,40917574,0,0x0,8
tick,0x7fff4326feb4,40933588,0,0x0,8
tick,0x7fff4326feb4,40948577,0,0x0,8
tick,0x7fff4326feb4,40964206,0,0x0,8
tick,0x7fff4326feb4,40979800,0,0x0,8
tick,0x7fff4326feb4,40995009,0,0x0,8
tick,0x7fff4326feb4,41010859,0,0x0,8
tick,0x7fff4326feb4,41026129,0,0x0,8
tick,0x7fff4326feb4,41042169,0,0x0,8
tick,0x7fff4326feb4,41057648,0,0x0,8
tick,0x7fff4326feb4,41073594,0,0x0,8
tick,0x7fff4326feb4,41089621,0,0x0,8
tick,0x7fff4326feb4,41105317,0,0x0,8
tick,0x7fff4326feb4,41120997,0,0x0,8
tick,0x7fff4326feb4,41137317,0,0x0,8
tick,0x7fff4326feb4,41152641,0,0x0,8
tick,0x7fff4326feb4,41168182,0,0x0,8
tick,0x7fff4326feb4,41183105,0,0x0,8
tick,0x7fff4326feb4,41198853,0,0x0,8
tick,0x7fff4326feb4,41214090,0,0x0,8
tick,0x7fff4326feb4,41229573,0,0x0,8
tick,0x7fff4326feb4,41245579,0,0x0,8
tick,0x7fff4326feb4,41261551,0,0x0,8
tick,0x7fff4326feb4,41277668,0,0x0,8
tick,0x7fff4326feb4,41293558,0,0x0,8
tick,0x7fff4326feb4,41309655,0,0x0,8
tick,0x7fff4326feb4,41325633,0,0x0,8
tick,0x7fff4326feb4,41341555,0,0x0,8
tick,0x7fff4326feb4,41357644,0,0x0,8
tick,0x7fff4326feb4,41373586,0,0x0,8
tick,0x7fff4326feb4,41388795,0,0x0,8
tick,0x7fff4326feb4,41404793,0,0x0,8
tick,0x7fff4326feb4,41420595,0,0x0,8
tick,0x7fff4326feb4,41435988,0,0x0,8
tick,0x7fff4326feb4,41451231,0,0x0,8
tick,0x7fff4326feb4,41466565,0,0x0,8
tick,0x7fff4326feb4,41482781,0,0x0,8
tick,0x7fff4326feb4,41498184,0,0x0,8
tick,0x7fff4326feb4,41513262,0,0x0,8
tick,0x7fff4326feb4,41529324,0,0x0,8
tick,0x7fff4326feb4,41545201,0,0x0,8
tick,0x7fff4326feb4,41561046,0,0x0,8
tick,0x7fff4326feb4,41577330,0,0x0,8
tick,0x7fff4326feb4,41593058,0,0x0,8
tick,0x7fff4326feb4,41609055,0,0x0,8
tick,0x7fff4326feb4,41624204,0,0x0,8
tick,0x7fff4326feb4,41639507,0,0x0,8
tick,0x7fff4326feb4,41654998,0,0x0,8
tick,0x7fff4326feb4,41670161,0,0x0,8
tick,0x7fff4326feb4,41685607,0,0x0,8
tick,0x7fff4326feb4,41701600,0,0x0,8
tick,0x7fff4326feb4,41717582,0,0x0,8
tick,0x7fff4326feb4,41732571,0,0x0,8
tick,0x7fff4326feb4,41747973,0,0x0,8
tick,0x7fff4326feb4,41763299,0,0x0,8
tick,0x7fff4326feb4,41778532,0,0x0,8
tick,0x7fff4326feb4,41794582,0,0x0,8
tick,0x7fff4326feb4,41810387,0,0x0,8
tick,0x7fff4326feb4,41825406,0,0x0,8
tick,0x7fff4326feb4,41841420,0,0x0,8
tick,0x7fff4326feb4,41857431,0,0x0,8
tick,0x7fff4326feb4,41873444,0,0x0,8
tick,0x7fff4326feb4,41889444,0,0x0,8
tick,0x7fff4326feb4,41905463,0,0x0,8
tick,0x7fff4326feb4,41921482,0,0x0,8
tick,0x7fff4326feb4,41936934,0,0x0,8
tick,0x7fff4326feb4,41952576,0,0x0,8
tick,0x7fff4326feb4,41967754,0,0x0,8
tick,0x7fff4326feb4,41982579,0,0x0,8
tick,0x7fff4326feb4,41997320,0,0x0,8
tick,0x7fff4326feb4,42012323,0,0x0,8
tick,0x7fff4326feb4,42027330,0,0x0,8
tick,0x7fff4326feb4,42043344,0,0x0,8
tick,0x7fff4326feb4,42059355,0,0x0,8
tick,0x7fff4326feb4,42075363,0,0x0,8
tick,0x7fff4326feb4,42091372,0,0x0,8
tick,0x7fff4326feb4,42107380,0,0x0,8
tick,0x7fff4326feb4,42122407,0,0x0,8
tick,0x7fff4326feb4,42137623,0,0x0,8
tick,0x7fff4326feb4,42153618,0,0x0,8
tick,0x7fff4326feb4,42169633,0,0x0,8
tick,0x7fff4326feb4,42185649,0,0x0,8
tick,0x7fff4326feb4,42201235,0,0x0,8
tick,0x7fff4326feb4,42216589,0,0x0,8
tick,0x7fff4326feb4,42232267,0,0x0,8
tick,0x7fff4326feb4,42247515,0,0x0,8
tick,0x7fff4326feb4,42263527,0,0x0,8
tick,0x7fff4326feb4,42279547,0,0x0,8
tick,0x7fff4326feb4,42295556,0,0x0,8
tick,0x7fff4326feb4,42311566,0,0x0,8
tick,0x7fff4326feb4,42327575,0,0x0,8
tick,0x7fff4326feb4,42343597,0,0x0,8
tick,0x7fff4326feb4,42359488,0,0x0,8
tick,0x7fff4326feb4,42375102,0,0x0,8
tick,0x7fff4326feb4,42390569,0,0x0,8
tick,0x7fff4326feb4,42406583,0,0x0,8
tick,0x7fff4326feb4,42422579,0,0x0,8
tick,0x7fff4326feb4,42438258,0,0x0,8
tick,0x7fff4326feb4,42453868,0,0x0,8
tick,0x7fff4326feb4,42468718,0,0x0,8
tick,0x7fff4326feb4,42484343,0,0x0,8
tick,0x7fff4326feb4,42500129,0,0x0,8
tick,0x7fff4326feb4,42515555,0,0x0,8
tick,0x7fff4326feb4,42530588,0,0x0,8
tick,0x7fff4326feb4,42546318,0,0x0,8
tick,0x7fff4326feb4,42561072,0,0x0,8
tick,0x7fff4326feb4,42576912,0,0x0,8
tick,0x7fff4326feb4,42592579,0,0x0,8
tick,0x7fff4326feb4,42608587,0,0x0,8
tick,0x7fff4326feb4,42624562,0,0x0,8
tick,0x7fff4326feb4,42640595,0,0x0,8
tick,0x7fff4326feb4,42656559,0,0x0,8
tick,0x7fff4326feb4,42671584,0,0x0,8
tick,0x7fff4326feb4,42686965,0,0x0,8
tick,0x7fff4326feb4,42702709,0,0x0,8
tick,0x7fff4326feb4,42717987,0,0x0,8
tick,0x7fff4326feb4,42733559,0,0x0,8
tick,0x7fff4326feb4,42749581,0,0x0,8
tick,0x7fff4326feb4,42765932,0,0x0,8
tick,0x7fff4326feb4,42781353,0,0x0,8
tick,0x7fff4326feb4,42797323,0,0x0,8
tick,0x7fff4326feb4,42811764,0,0x0,8
tick,0x7fff4326feb4,42826934,0,0x0,8
tick,0x7fff4326feb4,42842715,0,0x0,8
tick,0x7fff4326feb4,42857943,0,0x0,8
tick,0x7fff4326feb4,42873234,0,0x0,8
tick,0x7fff4326feb4,42888798,0,0x0,8
tick,0x7fff4326feb4,42904094,0,0x0,8
tick,0x7fff4326feb4,42919675,0,0x0,8
tick,0x7fff4326feb4,42934426,0,0x0,8
tick,0x7fff4326feb4,42949591,0,0x0,8
tick,0x7fff4326feb4,42965659,0,0x0,8
tick,0x7fff4326feb4,42981584,0,0x0,8
tick,0x7fff4326feb4,42996556,0,0x0,8
tick,0x7fff4326feb4,43012392,0,0x0,8
tick,0x7fff4326feb4,43027559,0,0x0,8
tick,0x7fff4326feb4,43043212,0,0x0,8
tick,0x7fff4326feb4,43058850,0,0x0,8
tick,0x7fff4326feb4,43074623,0,0x0,8
tick,0x7fff4326feb4,43090604,0,0x0,8
tick,0x7fff4326feb4,43106642,0,0x0,8
tick,0x7fff4326feb4,43122643,0,0x0,8
tick,0x7fff4326feb4,43138591,0,0x0,8
tick,0x7fff4326feb4,43154607,0,0x0,8
tick,0x7fff4326feb4,43170837,0,0x0,8
tick,0x7fff4326feb4,43186482,0,0x0,8
tick,0x7fff4326feb4,43201842,0,0x0,8
tick,0x7fff4326feb4,43217227,0,0x0,8
tick,0x7fff4326feb4,43232848,0,0x0,8
tick,0x7fff4326feb4,43248519,0,0x0,8
tick,0x7fff4326feb4,43264081,0,0x0,8
tick,0x7fff4326feb4,43279889,0,0x0,8
tick,0x7fff4326feb4,43295597,0,0x0,8
tick,0x7fff4326feb4,43311623,0,0x0,8
tick,0x7fff4326feb4,43327578,0,0x0,8
tick,0x7fff4326feb4,43343592,0,0x0,8
tick,0x7fff4326feb4,43359635,0,0x0,8
tick,0x7fff4326feb4,43375589,0,0x0,8
tick,0x7fff4326feb4,43391603,0,0x0,8
tick,0x7fff4326feb4,43407607,0,0x0,8
tick,0x7fff4326feb4,43423602,0,0x0,8
tick,0x7fff4326feb4,43439871,0,0x0,8
tick,0x7fff4326feb4,43455230,0,0x0,8
tick,0x7fff4326feb4,43470403,0,0x0,8
tick,0x7fff4326feb4,43486419,0,0x0,8
tick,0x7fff4326feb4,43501652,0,0x0,8
tick,0x7fff4326feb4,43517348,0,0x0,8
tick,0x7fff4326feb4,43532651,0,0x0,8
tick,0x7fff4326feb4,43548929,0,0x0,8
tick,0x7fff4326feb4,43564831,0,0x0,8
tick,0x7fff4326feb4,43580340,0,0x0,8
tick,0x7fff4326feb4,43596370,0,0x0,8
tick,0x7fff4326feb4,43611211,0,0x0,8
tick,0x7fff4326feb4,43626630,0,0x0,8
tick,0x7fff4326feb4,43642238,0,0x0,8
tick,0x7fff4326feb4,43658250,0,0x0,8
tick,0x7fff4326feb4,43673595,0,0x0,8
tick,0x7fff4326feb4,43688918,0,0x0,8
tick,0x7fff4326feb4,43704867,0,0x0,8
tick,0x7fff4326feb4,43720326,0,0x0,8
tick,0x7fff4326feb4,43735586,0,0x0,8
tick,0x7fff4326feb4,43751009,0,0x0,8
tick,0x7fff4326feb4,43766061,0,0x0,8
tick,0x7fff4326feb4,43781574,0,0x0,8
tick,0x7fff4326feb4,43797579,0,0x0,8
tick,0x7fff4326feb4,43812605,0,0x0,8
tick,0x7fff4326feb4,43828547,0,0x0,8
tick,0x7fff4326feb4,43844545,0,0x0,8
tick,0x7fff4326feb4,43860546,0,0x0,8
tick,0x7fff4326feb4,43876565,0,0x0,8
tick,0x7fff4326feb4,43892574,0,0x0,8
tick,0x7fff4326feb4,43908588,0,0x0,8
tick,0x7fff4326feb4,43923612,0,0x0,8
tick,0x7fff4326feb4,43938586,0,0x0,8
tick,0x7fff4326feb4,43954015,0,0x0,8
tick,0x7fff4326feb4,43969688,0,0x0,8
tick,0x7fff4326feb4,43984965,0,0x0,8
tick,0x7fff4326feb4,44000737,0,0x0,8
tick,0x7fff4326feb4,44016140,0,0x0,8
tick,0x7fff4326feb4,44032128,0,0x0,8
tick,0x7fff4326feb4,44047787,0,0x0,8
tick,0x7fff4326feb4,44063438,0,0x0,8
tick,0x7fff4326feb4,44078864,0,0x0,8
tick,0x7fff4326feb4,44094507,0,0x0,8
tick,0x7fff4326feb4,44110474,0,0x0,8
tick,0x7fff4326feb4,44125943,0,0x0,8
tick,0x7fff4326feb4,44141214,0,0x0,8
tick,0x7fff4326feb4,44156868,0,0x0,8
tick,0x7fff4326feb4,44172550,0,0x0,8
tick,0x7fff4326feb4,44187653,0,0x0,8
tick,0x7fff4326feb4,44203135,0,0x0,8
tick,0x7fff4326feb4,44219143,0,0x0,8
tick,0x7fff4326feb4,44234825,0,0x0,8
tick,0x7fff4326feb4,44250720,0,0x0,8
tick,0x7fff4326feb4,44266145,0,0x0,8
tick,0x7fff4326feb4,44282219,0,0x0,8
tick,0x7fff4326feb4,44297705,0,0x0,8
tick,0x7fff4326feb4,44312930,0,0x0,8
tick,0x7fff4326feb4,44328369,0,0x0,8
tick,0x7fff4326feb4,44344204,0,0x0,8
tick,0x7fff4326feb4,44360171,0,0x0,8
tick,0x7fff4326feb4,44376480,0,0x0,8
tick,0x7fff4326feb4,44391957,0,0x0,8
tick,0x7fff4326feb4,44407594,0,0x0,8
tick,0x7fff4326feb4,44422578,0,0x0,8
tick,0x7fff4326feb4,44437581,0,0x0,8
tick,0x7fff4326feb4,44453143,0,0x0,8
tick,0x7fff4326feb4,44468825,0,0x0,8
tick,0x7fff4326feb4,44484445,0,0x0,8
tick,0x7fff4326feb4,44500439,0,0x0,8
tick,0x7fff4326feb4,44516701,0,0x0,8
tick,0x7fff4326feb4,44532296,0,0x0,8
tick,0x7fff4326feb4,44547396,0,0x0,8
tick,0x7fff4326feb4,44563615,0,0x0,8
tick,0x7fff4326feb4,44579616,0,0x0,8
tick,0x7fff4326feb4,44595544,0,0x0,8
tick,0x7fff4326feb4,44610413,0,0x0,8
tick,0x7fff4326feb4,44626754,0,0x0,8
tick,0x7fff4326feb4,44643055,0,0x0,8
tick,0x7fff4326feb4,44659360,0,0x0,8
tick,0x7fff4326feb4,44674667,0,0x0,8
tick,0x7fff4326feb4,44690809,0,0x0,8
tick,0x7fff4326feb4,44706932,0,0x0,8
tick,0x7fff4326feb4,44722155,0,0x0,8
tick,0x7fff4326feb4,44737600,0,0x0,8
tick,0x7fff4326feb4,44753361,0,0x0,8
tick,0x7fff4326feb4,44768649,0,0x0,8
tick,0x7fff4326feb4,44784281,0,0x0,8
tick,0x7fff4326feb4,44800260,0,0x0,8
tick,0x7fff4326feb4,44815886,0,0x0,8
tick,0x7fff4326feb4,44831594,0,0x0,8
tick,0x7fff4326feb4,44847638,0,0x0,8
tick,0x7fff4326feb4,44862944,0,0x0,8
tick,0x7fff4326feb4,44878579,0,0x0,8
tick,0x7fff4326feb4,44894524,0,0x0,8
tick,0x7fff4326feb4,44910581,0,0x0,8
tick,0x7fff4326feb4,44926572,0,0x0,8
tick,0x7fff4326feb4,44942573,0,0x0,8
tick,0x7fff4326feb4,44958574,0,0x0,8
tick,0x7fff4326feb4,44974518,0,0x0,8
tick,0x7fff4326feb4,44990663,0,0x0,8
tick,0x7fff4326feb4,45006495,0,0x0,8
tick,0x7fff4326feb4,45021595,0,0x0,8
tick,0x7fff4326feb4,45037570,0,0x0,8
tick,0x7fff4326feb4,45053589,0,0x0,8
tick,0x7fff4326feb4,45069591,0,0x0,8
tick,0x7fff4326feb4,45085602,0,0x0,8
tick,0x7fff4326feb4,45101576,0,0x0,8
tick,0x7fff4326feb4,45117567,0,0x0,8
tick,0x7fff4326feb4,45133683,0,0x0,8
tick,0x7fff4326feb4,45149672,0,0x0,8
tick,0x7fff4326feb4,45165563,0,0x0,8
tick,0x7fff4326feb4,45181557,0,0x0,8
tick,0x7fff4326feb4,45197186,0,0x0,8
tick,0x7fff4326feb4,45213061,0,0x0,8
tick,0x7fff4326feb4,45228887,0,0x0,8
tick,0x7fff4326feb4,45245254,0,0x0,8
tick,0x7fff4326feb4,45260868,0,0x0,8
tick,0x7fff4326feb4,45276181,0,0x0,8
tick,0x7fff4326feb4,45291887,0,0x0,8
tick,0x7fff4326feb4,45307895,0,0x0,8
tick,0x7fff4326feb4,45323781,0,0x0,8
tick,0x7fff4326feb4,45338903,0,0x0,8
tick,0x7fff4326feb4,45354923,0,0x0,8
tick,0x7fff4326feb4,45370946,0,0x0,8
tick,0x7fff4326feb4,45386961,0,0x0,8
tick,0x7fff4326feb4,45402979,0,0x0,8
tick,0x7fff4326feb4,45419014,0,0x0,8
tick,0x7fff4326feb4,45434022,0,0x0,8
tick,0x7fff4326feb4,45449739,0,0x0,8
tick,0x7fff4326feb4,45465832,0,0x0,8
tick,0x7fff4326feb4,45480153,0,0x0,8
tick,0x7fff4326feb4,45496176,0,0x0,8
tick,0x7fff4326feb4,45512159,0,0x0,8
tick,0x7fff4326feb4,45527854,0,0x0,8
tick,0x7fff4326feb4,45543156,0,0x0,8
tick,0x7fff4326feb4,45559169,0,0x0,8
tick,0x7fff4326feb4,45574557,0,0x0,8
tick,0x7fff4326feb4,45590229,0,0x0,8
tick,0x7fff4326feb4,45605580,0,0x0,8
tick,0x7fff4326feb4,45620557,0,0x0,8
tick,0x7fff4326feb4,45635585,0,0x0,8
tick,0x7fff4326feb4,45651358,0,0x0,8
tick,0x7fff4326feb4,45666941,0,0x0,8
tick,0x7fff4326feb4,45682106,0,0x0,8
tick,0x7fff4326feb4,45697898,0,0x0,8
tick,0x7fff4326feb4,45713410,0,0x0,8
tick,0x7fff4326feb4,45728758,0,0x0,8
tick,0x7fff4326feb4,45743584,0,0x0,8
tick,0x7fff4326feb4,45759685,0,0x0,8
tick,0x7fff4326feb4,45775359,0,0x0,8
tick,0x7fff4326feb4,45790872,0,0x0,8
tick,0x7fff4326feb4,45805588,0,0x0,8
tick,0x7fff4326feb4,45820674,0,0x0,8
tick,0x7fff4326feb4,45836569,0,0x0,8
tick,0x7fff4326feb4,45852664,0,0x0,8
tick,0x7fff4326feb4,45867849,0,0x0,8
tick,0x7fff4326feb4,45883230,0,0x0,8
tick,0x7fff4326feb4,45898878,0,0x0,8
tick,0x7fff4326feb4,45914545,0,0x0,8
tick,0x7fff4326feb4,45930603,0,0x0,8
tick,0x7fff4326feb4,45945757,0,0x0,8
tick,0x7fff4326feb4,45960992,0,0x0,8
tick,0x7fff4326feb4,45976634,0,0x0,8
tick,0x7fff4326feb4,45992311,0,0x0,8
tick,0x7fff4326feb4,46007812,0,0x0,8
tick,0x7fff4326feb4,46023161,0,0x0,8
tick,0x7fff4326feb4,46038189,0,0x0,8
tick,0x7fff4326feb4,46054177,0,0x0,8
tick,0x7fff4326feb4,46069609,0,0x0,8
tick,0x7fff4326feb4,46084859,0,0x0,8
tick,0x7fff4326feb4,46099967,0,0x0,8
tick,0x7fff4326feb4,46114792,0,0x0,8
tick,0x7fff4326feb4,46130803,0,0x0,8
tick,0x7fff4326feb4,46145824,0,0x0,8
tick,0x7fff4326feb4,46161846,0,0x0,8
tick,0x7fff4326feb4,46177836,0,0x0,8
tick,0x7fff4326feb4,46192846,0,0x0,8
tick,0x7fff4326feb4,46208818,0,0x0,8
tick,0x7fff4326feb4,46224332,0,0x0,8
tick,0x7fff4326feb4,46239361,0,0x0,8
tick,0x7fff4326feb4,46254572,0,0x0,8
tick,0x7fff4326feb4,46270882,0,0x0,8
tick,0x7fff4326feb4,46285999,0,0x0,8
tick,0x7fff4326feb4,46301804,0,0x0,8
tick,0x7fff4326feb4,46316909,0,0x0,8
tick,0x7fff4326feb4,46332348,0,0x0,8
tick,0x7fff4326feb4,46348442,0,0x0,8
tick,0x7fff4326feb4,46363565,0,0x0,8
tick,0x7fff4326feb4,46378903,0,0x0,8
tick,0x7fff4326feb4,46394773,0,0x0,8
tick,0x7fff4326feb4,46410801,0,0x0,8
tick,0x7fff4326feb4,46426712,0,0x0,8
tick,0x7fff4326feb4,46441996,0,0x0,8
tick,0x7fff4326feb4,46457820,0,0x0,8
tick,0x7fff4326feb4,46473844,0,0x0,8
tick,0x7fff4326feb4,46488861,0,0x0,8
tick,0x7fff4326feb4,46504918,0,0x0,8
tick,0x7fff4326feb4,46520858,0,0x0,8
tick,0x7fff4326feb4,46535881,0,0x0,8
tick,0x7fff4326feb4,46550933,0,0x0,8
tick,0x7fff4326feb4,46566822,0,0x0,8
tick,0x7fff4326feb4,46582468,0,0x0,8
tick,0x7fff4326feb4,46597726,0,0x0,8
tick,0x7fff4326feb4,46613565,0,0x0,8
tick,0x7fff4326feb4,46629564,0,0x0,8
tick,0x7fff4326feb4,46645563,0,0x0,8
tick,0x7fff4326feb4,46661673,0,0x0,8
tick,0x7fff4326feb4,46676886,0,0x0,8
tick,0x7fff4326feb4,46692039,0,0x0,8
tick,0x7fff4326feb4,46707576,0,0x0,8
tick,0x7fff4326feb4,46722599,0,0x0,8
tick,0x7fff4326feb4,46738005,0,0x0,8
tick,0x7fff4326feb4,46753681,0,0x0,8
tick,0x7fff4326feb4,46768953,0,0x0,8
tick,0x7fff4326feb4,46784366,0,0x0,8
tick,0x7fff4326feb4,46799648,0,0x0,8
tick,0x7fff4326feb4,46814946,0,0x0,8
tick,0x7fff4326feb4,46830556,0,0x0,8
tick,0x7fff4326feb4,46845939,0,0x0,8
tick,0x7fff4326feb4,46861598,0,0x0,8
tick,0x7fff4326feb4,46877566,0,0x0,8
tick,0x7fff4326feb4,46893575,0,0x0,8
tick,0x7fff4326feb4,46909359,0,0x0,8
tick,0x7fff4326feb4,46925450,0,0x0,8
tick,0x7fff4326feb4,46940915,0,0x0,8
tick,0x7fff4326feb4,46956648,0,0x0,8
tick,0x7fff4326feb4,46971895,0,0x0,8
tick,0x7fff4326feb4,46987289,0,0x0,8
tick,0x7fff4326feb4,47002781,0,0x0,8
tick,0x7fff4326feb4,47018192,0,0x0,8
tick,0x7fff4326feb4,47033823,0,0x0,8
tick,0x7fff4326feb4,47048827,0,0x0,8
tick,0x7fff4326feb4,47064532,0,0x0,8
tick,0x7fff4326feb4,47080404,0,0x0,8
tick,0x7fff4326feb4,47095789,0,0x0,8
tick,0x7fff4326feb4,47111502,0,0x0,8
tick,0x7fff4326feb4,47126582,0,0x0,8
tick,0x7fff4326feb4,47142615,0,0x0,8
tick,0x7fff4326feb4,47158518,0,0x0,8
tick,0x7fff4326feb4,47174523,0,0x0,8
tick,0x7fff4326feb4,47190755,0,0x0,8
tick,0x7fff4326feb4,47206041,0,0x0,8
tick,0x7fff4326feb4,47220610,0,0x0,8
tick,0x7fff4326feb4,47236270,0,0x0,8
tick,0x7fff4326feb4,47251681,0,0x0,8
tick,0x7fff4326feb4,47267022,0,0x0,8
tick,0x7fff4326feb4,47283229,0,0x0,8
tick,0x7fff4326feb4,47298125,0,0x0,8
tick,0x7fff4326feb4,47313089,0,0x0,8
tick,0x7fff4326feb4,47328268,0,0x0,8
tick,0x7fff4326feb4,47343744,0,0x0,8
tick,0x7fff4326feb4,47358733,0,0x0,8
tick,0x7fff4326feb4,47374382,0,0x0,8
tick,0x7fff4326feb4,47389239,0,0x0,8
tick,0x7fff4326feb4,47404845,0,0x0,8
tick,0x7fff4326feb4,47420061,0,0x0,8
tick,0x7fff4326feb4,47435824,0,0x0,8
tick,0x7fff4326feb4,47451375,0,0x0,8
tick,0x7fff4326feb4,47466501,0,0x0,8
tick,0x7fff4326feb4,47482066,0,0x0,8
tick,0x7fff4326feb4,47497928,0,0x0,8
tick,0x7fff4326feb4,47512604,0,0x0,8
tick,0x7fff4326feb4,47527912,0,0x0,8
tick,0x7fff4326feb4,47543363,0,0x0,8
tick,0x7fff4326feb4,47558572,0,0x0,8
tick,0x7fff4326feb4,47573583,0,0x0,8
tick,0x7fff4326feb4,47589588,0,0x0,8
tick,0x7fff4326feb4,47605545,0,0x0,8
tick,0x7fff4326feb4,47620563,0,0x0,8
tick,0x7fff4326feb4,47636585,0,0x0,8
tick,0x7fff4326feb4,47651378,0,0x0,8
tick,0x7fff4326feb4,47667417,0,0x0,8
tick,0x7fff4326feb4,47682604,0,0x0,8
tick,0x7fff4326feb4,47698863,0,0x0,8
tick,0x7fff4326feb4,47714670,0,0x0,8
tick,0x7fff4326feb4,47729802,0,0x0,8
tick,0x7fff4326feb4,47745086,0,0x0,8
tick,0x7fff4326feb4,47760889,0,0x0,8
tick,0x7fff4326feb4,47776430,0,0x0,8
tick,0x7fff4326feb4,47792025,0,0x0,8
tick,0x7fff4326feb4,47808041,0,0x0,8
tick,0x7fff4326feb4,47823666,0,0x0,8
tick,0x7fff4326feb4,47839354,0,0x0,8
tick,0x7fff4326feb4,47855224,0,0x0,8
tick,0x7fff4326feb4,47871157,0,0x0,8
tick,0x7fff4326feb4,47885852,0,0x0,8
tick,0x7fff4326feb4,47901890,0,0x0,8
tick,0x7fff4326feb4,47917237,0,0x0,8
tick,0x7fff4326feb4,47933077,0,0x0,8
tick,0x7fff4326feb4,47948889,0,0x0,8
tick,0x7fff4326feb4,47964309,0,0x0,8
tick,0x7fff4326feb4,47980349,0,0x0,8
tick,0x7fff4326feb4,47996684,0,0x0,8
tick,0x7fff4326feb4,48012692,0,0x0,8
tick,0x7fff4326feb4,48027898,0,0x0,8
tick,0x7fff4326feb4,48043829,0,0x0,8
tick,0x7fff4326feb4,48059085,0,0x0,8
tick,0x7fff4326feb4,48074947,0,0x0,8
tick,0x7fff4326feb4,48090063,0,0x0,8
tick,0x7fff4326feb4,48106433,0,0x0,8
tick,0x7fff4326feb4,48121805,0,0x0,8
tick,0x7fff4326feb4,48136869,0,0x0,8
tick,0x7fff4326feb4,48153052,0,0x0,8
tick,0x7fff4326feb4,48169286,0,0x0,8
tick,0x7fff4326feb4,48184919,0,0x0,8
tick,0x7fff4326feb4,48200436,0,0x0,8
tick,0x7fff4326feb4,48215435,0,0x0,8
tick,0x7fff4326feb4,48231818,0,0x0,8
tick,0x7fff4326feb4,48247855,0,0x0,8
tick,0x7fff4326feb4,48263606,0,0x0,8
tick,0x7fff4326feb4,48279313,0,0x0,8
tick,0x7fff4326feb4,48294675,0,0x0,8
tick,0x7fff4326feb4,48310118,0,0x0,8
tick,0x7fff4326feb4,48325992,0,0x0,8
tick,0x7fff4326feb4,48341893,0,0x0,8
tick,0x7fff4326feb4,48357588,0,0x0,8
tick,0x7fff4326feb4,48373700,0,0x0,8
tick,0x7fff4326feb4,48388947,0,0x0,8
tick,0x7fff4326feb4,48404236,0,0x0,8
tick,0x7fff4326feb4,48419360,0,0x0,8
tick,0x7fff4326feb4,48434966,0,0x0,8
tick,0x7fff4326feb4,48450537,0,0x0,8
tick,0x7fff4326feb4,48465605,0,0x0,8
tick,0x7fff4326feb4,48481110,0,0x0,8
tick,0x7fff4326feb4,48497346,0,0x0,8
tick,0x7fff4326feb4,48513499,0,0x0,8
tick,0x7fff4326feb4,48528783,0,0x0,8
tick,0x7fff4326feb4,48544819,0,0x0,8
tick,0x7fff4326feb4,48561016,0,0x0,8
tick,0x7fff4326feb4,48576557,0,0x0,8
tick,0x7fff4326feb4,48592024,0,0x0,8
tick,0x7fff4326feb4,48608309,0,0x0,8
tick,0x7fff4326feb4,48623577,0,0x0,8
tick,0x7fff4326feb4,48639588,0,0x0,8
tick,0x7fff4326feb4,48654599,0,0x0,8
tick,0x7fff4326feb4,48670625,0,0x0,8
tick,0x7fff4326feb4,48685976,0,0x0,8
tick,0x7fff4326feb4,48701083,0,0x0,8
tick,0x7fff4326feb4,48716585,0,0x0,8
tick,0x7fff4326feb4,48731854,0,0x0,8
tick,0x7fff4326feb4,48747165,0,0x0,8
tick,0x7fff4326feb4,48763128,0,0x0,8
tick,0x7fff4326feb4,48778549,0,0x0,8
tick,0x7fff4326feb4,48794808,0,0x0,8
tick,0x7fff4326feb4,48810056,0,0x0,8
tick,0x7fff4326feb4,48825667,0,0x0,8
tick,0x7fff4326feb4,48840921,0,0x0,8
tick,0x7fff4326feb4,48856673,0,0x0,8
tick,0x7fff4326feb4,48872627,0,0x0,8
tick,0x7fff4326feb4,48887505,0,0x0,8
tick,0x7fff4326feb4,48903122,0,0x0,8
tick,0x7fff4326feb4,48918847,0,0x0,8
tick,0x7fff4326feb4,48934649,0,0x0,8
tick,0x7fff4326feb4,48950135,0,0x0,8
tick,0x7fff4326feb4,48965705,0,0x0,8
tick,0x7fff4326feb4,48981513,0,0x0,8
tick,0x7fff4326feb4,48997444,0,0x0,8
tick,0x7fff4326feb4,49012612,0,0x0,8
tick,0x7fff4326feb4,49027886,0,0x0,8
tick,0x7fff4326feb4,49043496,0,0x0,8
tick,0x7fff4326feb4,49059240,0,0x0,8
tick,0x7fff4326feb4,49075332,0,0x0,8
tick,0x7fff4326feb4,49090635,0,0x0,8
tick,0x7fff4326feb4,49106757,0,0x0,8
tick,0x7fff4326feb4,49122488,0,0x0,8
tick,0x7fff4326feb4,49138508,0,0x0,8
tick,0x7fff4326feb4,49153491,0,0x0,8
tick,0x7fff4326feb4,49168915,0,0x0,8
tick,0x7fff4326feb4,49184940,0,0x0,8
tick,0x7fff4326feb4,49199955,0,0x0,8
tick,0x7fff4326feb4,49215569,0,0x0,8
tick,0x7fff4326feb4,49231578,0,0x0,8
tick,0x7fff4326feb4,49247561,0,0x0,8
tick,0x7fff4326feb4,49263566,0,0x0,8
tick,0x7fff4326feb4,49278653,0,0x0,8
tick,0x7fff4326feb4,49294478,0,0x0,8
tick,0x7fff4326feb4,49309472,0,0x0,8
tick,0x7fff4326feb4,49324560,0,0x0,8
tick,0x7fff4326feb4,49340480,0,0x0,8
tick,0x7fff4326feb4,49355561,0,0x0,8
tick,0x7fff4326feb4,49371578,0,0x0,8
tick,0x7fff4326feb4,49386797,0,0x0,8
tick,0x7fff4326feb4,49402660,0,0x0,8
tick,0x7fff4326feb4,49418452,0,0x0,8
tick,0x7fff4326feb4,49433578,0,0x0,8
tick,0x7fff4326feb4,49448750,0,0x0,8
tick,0x7fff4326feb4,49464650,0,0x0,8
tick,0x7fff4326feb4,49479874,0,0x0,8
tick,0x7fff4326feb4,49495717,0,0x0,8
tick,0x7fff4326feb4,49511694,0,0x0,8
tick,0x7fff4326feb4,49526547,0,0x0,8
tick,0x7fff4326feb4,49541751,0,0x0,8
tick,0x7fff4326feb4,49557977,0,0x0,8
tick,0x7fff4326feb4,49572954,0,0x0,8
tick,0x7fff4326feb4,49588912,0,0x0,8
tick,0x7fff4326feb4,49604356,0,0x0,8
tick,0x7fff4326feb4,49619990,0,0x0,8
tick,0x7fff4326feb4,49635682,0,0x0,8
tick,0x7fff4326feb4,49650873,0,0x0,8
tick,0x7fff4326feb4,49666311,0,0x0,8
tick,0x7fff4326feb4,49682362,0,0x0,8
tick,0x7fff4326feb4,49697616,0,0x0,8
tick,0x7fff4326feb4,49712640,0,0x0,8
tick,0x7fff4326feb4,49728003,0,0x0,8
tick,0x7fff4326feb4,49743438,0,0x0,8
tick,0x7fff4326feb4,49759662,0,0x0,8
tick,0x7fff4326feb4,49775593,0,0x0,8
tick,0x7fff4326feb4,49791378,0,0x0,8
tick,0x7fff4326feb4,49806991,0,0x0,8
tick,0x7fff4326feb4,49822847,0,0x0,8
tick,0x7fff4326feb4,49838066,0,0x0,8
tick,0x7fff4326feb4,49853898,0,0x0,8
tick,0x7fff4326feb4,49869547,0,0x0,8
tick,0x7fff4326feb4,49885581,0,0x0,8
tick,0x7fff4326feb4,49900849,0,0x0,8
tick,0x7fff4326feb4,49916942,0,0x0,8
tick,0x7fff4326feb4,49932404,0,0x0,8
tick,0x7fff4326feb4,49948041,0,0x0,8
tick,0x7fff4326feb4,49963709,0,0x0,8
tick,0x7fff4326feb4,49979515,0,0x0,8
tick,0x7fff4326feb4,49995176,0,0x0,8
tick,0x7fff4326feb4,50010840,0,0x0,8
tick,0x7fff4326feb4,50026900,0,0x0,8
tick,0x7fff4326feb4,50042936,0,0x0,8
tick,0x7fff4326feb4,50058422,0,0x0,8
tick,0x7fff4326feb4,50073960,0,0x0,8
tick,0x7fff4326feb4,50089756,0,0x0,8
tick,0x7fff4326feb4,50105367,0,0x0,8
tick,0x7fff4326feb4,50120792,0,0x0,8
tick,0x7fff4326feb4,50137087,0,0x0,8
tick,0x7fff4326feb4,50152809,0,0x0,8
tick,0x7fff4326feb4,50169152,0,0x0,8
tick,0x7fff4326feb4,50184529,0,0x0,8
tick,0x7fff4326feb4,50200302,0,0x0,8
tick,0x7fff4326feb4,50215629,0,0x0,8
tick,0x7fff4326feb4,50231623,0,0x0,8
tick,0x7fff4326feb4,50247338,0,0x0,8
tick,0x7fff4326feb4,50262936,0,0x0,8
tick,0x7fff4326feb4,50278299,0,0x0,8
tick,0x7fff4326feb4,50293885,0,0x0,8
tick,0x7fff4326feb4,50309375,0,0x0,8
tick,0x7fff4326feb4,50324907,0,0x0,8
tick,0x7fff4326feb4,50341040,0,0x0,8
tick,0x7fff4326feb4,50356133,0,0x0,8
tick,0x7fff4326feb4,50372203,0,0x0,8
tick,0x7fff4326feb4,50387750,0,0x0,8
tick,0x7fff4326feb4,50403718,0,0x0,8
tick,0x7fff4326feb4,50419907,0,0x0,8
tick,0x7fff4326feb4,50435160,0,0x0,8
tick,0x7fff4326feb4,50450833,0,0x0,8
tick,0x7fff4326feb4,50466409,0,0x0,8
tick,0x7fff4326feb4,50482142,0,0x0,8
tick,0x7fff4326feb4,50497388,0,0x0,8
tick,0x7fff4326feb4,50512712,0,0x0,8
tick,0x7fff4326feb4,50528742,0,0x0,8
tick,0x7fff4326feb4,50543384,0,0x0,8
tick,0x7fff4326feb4,50559422,0,0x0,8
tick,0x7fff4326feb4,50574899,0,0x0,8
tick,0x7fff4326feb4,50590766,0,0x0,8
tick,0x7fff4326feb4,50606386,0,0x0,8
tick,0x7fff4326feb4,50621963,0,0x0,8
tick,0x7fff4326feb4,50637748,0,0x0,8
tick,0x7fff4326feb4,50653572,0,0x0,8
tick,0x7fff4326feb4,50669013,0,0x0,8
tick,0x7fff4326feb4,50684697,0,0x0,8
tick,0x7fff4326feb4,50700159,0,0x0,8
tick,0x7fff4326feb4,50715902,0,0x0,8
tick,0x7fff4326feb4,50731911,0,0x0,8
tick,0x7fff4326feb4,50747172,0,0x0,8
tick,0x7fff4326feb4,50762974,0,0x0,8
tick,0x7fff4326feb4,50778462,0,0x0,8
tick,0x7fff4326feb4,50794164,0,0x0,8
tick,0x7fff4326feb4,50810397,0,0x0,8
tick,0x7fff4326feb4,50826782,0,0x0,8
tick,0x7fff4326feb4,50841921,0,0x0,8
tick,0x7fff4326feb4,50858152,0,0x0,8
tick,0x7fff4326feb4,50873413,0,0x0,8
tick,0x7fff4326feb4,50889255,0,0x0,8
tick,0x7fff4326feb4,50904820,0,0x0,8
tick,0x7fff4326feb4,50920259,0,0x0,8
tick,0x7fff4326feb4,50935937,0,0x0,8
tick,0x7fff4326feb4,50951915,0,0x0,8
tick,0x7fff4326feb4,50967399,0,0x0,8
tick,0x7fff4326feb4,50982994,0,0x0,8
tick,0x7fff4326feb4,50998437,0,0x0,8
tick,0x7fff4326feb4,51013987,0,0x0,8
tick,0x7fff4326feb4,51029992,0,0x0,8
tick,0x7fff4326feb4,51045570,0,0x0,8
tick,0x7fff4326feb4,51061121,0,0x0,8
tick,0x7fff4326feb4,51076711,0,0x0,8
tick,0x7fff4326feb4,51092137,0,0x0,8
tick,0x7fff4326feb4,51107777,0,0x0,8
tick,0x7fff4326feb4,51123811,0,0x0,8
tick,0x7fff4326feb4,51139775,0,0x0,8
tick,0x7fff4326feb4,51155201,0,0x0,8
tick,0x7fff4326feb4,51170849,0,0x0,8
tick,0x7fff4326feb4,51186417,0,0x0,8
tick,0x7fff4326feb4,51202727,0,0x0,8
tick,0x7fff4326feb4,51217923,0,0x0,8
tick,0x7fff4326feb4,51233002,0,0x0,8
tick,0x7fff4326feb4,51248065,0,0x0,8
tick,0x7fff4326feb4,51263623,0,0x0,8
tick,0x7fff4326feb4,51279937,0,0x0,8
tick,0x7fff4326feb4,51295932,0,0x0,8
tick,0x7fff4326feb4,51312250,0,0x0,8
tick,0x7fff4326feb4,51327841,0,0x0,8
tick,0x7fff4326feb4,51343973,0,0x0,8
tick,0x7fff4326feb4,51360137,0,0x0,8
tick,0x7fff4326feb4,51376059,0,0x0,8
tick,0x7fff4326feb4,51391652,0,0x0,8
tick,0x7fff4326feb4,51407176,0,0x0,8
tick,0x7fff4326feb4,51422568,0,0x0,8
tick,0x7fff4326feb4,51437735,0,0x0,8
tick,0x7fff4326feb4,51452840,0,0x0,8
tick,0x7fff4326feb4,51468807,0,0x0,8
tick,0x7fff4326feb4,51484206,0,0x0,8
tick,0x7fff4326feb4,51499236,0,0x0,8
tick,0x7fff4326feb4,51514632,0,0x0,8
tick,0x7fff4326feb4,51529675,0,0x0,8
tick,0x7fff4326feb4,51545271,0,0x0,8
tick,0x7fff4326feb4,51560719,0,0x0,8
tick,0x7fff4326feb4,51576858,0,0x0,8
tick,0x7fff4326feb4,51591785,0,0x0,8
tick,0x7fff4326feb4,51607442,0,0x0,8
tick,0x7fff4326feb4,51622959,0,0x0,8
tick,0x7fff4326feb4,51639016,0,0x0,8
tick,0x7fff4326feb4,51654377,0,0x0,8
tick,0x7fff4326feb4,51670105,0,0x0,8
tick,0x7fff4326feb4,51686622,0,0x0,8
tick,0x7fff4326feb4,51701741,0,0x0,8
tick,0x7fff4326feb4,51717149,0,0x0,8
tick,0x7fff4326feb4,51732783,0,0x0,8
tick,0x7fff4326feb4,51748107,0,0x0,8
tick,0x7fff4326feb4,51764519,0,0x0,8
tick,0x7fff4326feb4,51779692,0,0x0,8
tick,0x7fff4326feb4,51795292,0,0x0,8
tick,0x7fff4326feb4,51811602,0,0x0,8
tick,0x7fff4326feb4,51827599,0,0x0,8
tick,0x7fff4326feb4,51843009,0,0x0,8
tick,0x7fff4326feb4,51859032,0,0x0,8
tick,0x7fff4326feb4,51874413,0,0x0,8
tick,0x7fff4326feb4,51890549,0,0x0,8
tick,0x7fff4326feb4,51905720,0,0x0,8
tick,0x7fff4326feb4,51921250,0,0x0,8
tick,0x7fff4326feb4,51936135,0,0x0,8
tick,0x7fff4326feb4,51951631,0,0x0,8
tick,0x7fff4326feb4,51966968,0,0x0,8
tick,0x7fff4326feb4,51982083,0,0x0,8
tick,0x7fff4326feb4,51997918,0,0x0,8
tick,0x7fff4326feb4,52013041,0,0x0,8
tick,0x7fff4326feb4,52028747,0,0x0,8
tick,0x7fff4326feb4,52045105,0,0x0,8
tick,0x7fff4326feb4,52061069,0,0x0,8
tick,0x7fff4326feb4,52076931,0,0x0,8
tick,0x7fff4326feb4,52092042,0,0x0,8
tick,0x7fff4326feb4,52107685,0,0x0,8
tick,0x7fff4326feb4,52123091,0,0x0,8
tick,0x7fff4326feb4,52139048,0,0x0,8
tick,0x7fff4326feb4,52154756,0,0x0,8
tick,0x7fff4326feb4,52169985,0,0x0,8
tick,0x7fff4326feb4,52185586,0,0x0,8
tick,0x7fff4326feb4,52201869,0,0x0,8
tick,0x7fff4326feb4,52217042,0,0x0,8
tick,0x7fff4326feb4,52233062,0,0x0,8
tick,0x7fff4326feb4,52249067,0,0x0,8
tick,0x7fff4326feb4,52265322,0,0x0,8
tick,0x7fff4326feb4,52281320,0,0x0,8
tick,0x7fff4326feb4,52296040,0,0x0,8
tick,0x7fff4326feb4,52311404,0,0x0,8
tick,0x7fff4326feb4,52326840,0,0x0,8
tick,0x7fff4326feb4,52342979,0,0x0,8
tick,0x7fff4326feb4,52358509,0,0x0,8
tick,0x7fff4326feb4,52374762,0,0x0,8
tick,0x7fff4326feb4,52390855,0,0x0,8
tick,0x7fff4326feb4,52406246,0,0x0,8
tick,0x7fff4326feb4,52421592,0,0x0,8
tick,0x7fff4326feb4,52436741,0,0x0,8
tick,0x7fff4326feb4,52452202,0,0x0,8
tick,0x7fff4326feb4,52468207,0,0x0,8
tick,0x7fff4326feb4,52484202,0,0x0,8
tick,0x7fff4326feb4,52498871,0,0x0,8
tick,0x7fff4326feb4,52514314,0,0x0,8
tick,0x7fff4326feb4,52530223,0,0x0,8
tick,0x7fff4326feb4,52545602,0,0x0,8
tick,0x7fff4326feb4,52561471,0,0x0,8
tick,0x7fff4326feb4,52577477,0,0x0,8
tick,0x7fff4326feb4,52593242,0,0x0,8
tick,0x7fff4326feb4,52608686,0,0x0,8
tick,0x7fff4326feb4,52623684,0,0x0,8
tick,0x7fff4326feb4,52639948,0,0x0,8
tick,0x7fff4326feb4,52655278,0,0x0,8
tick,0x7fff4326feb4,52670512,0,0x0,8
tick,0x7fff4326feb4,52685984,0,0x0,8
tick,0x7fff4326feb4,52701843,0,0x0,8
tick,0x7fff4326feb4,52718106,0,0x0,8
tick,0x7fff4326feb4,52733468,0,0x0,8
tick,0x7fff4326feb4,52749164,0,0x0,8
tick,0x7fff4326feb4,52764827,0,0x0,8
tick,0x7fff4326feb4,52780235,0,0x0,8
tick,0x7fff4326feb4,52795764,0,0x0,8
tick,0x7fff4326feb4,52811192,0,0x0,8
tick,0x7fff4326feb4,52826865,0,0x0,8
tick,0x7fff4326feb4,52842589,0,0x0,8
tick,0x7fff4326feb4,52857844,0,0x0,8
tick,0x7fff4326feb4,52873230,0,0x0,8
tick,0x7fff4326feb4,52888829,0,0x0,8
tick,0x7fff4326feb4,52904427,0,0x0,8
tick,0x7fff4326feb4,52919836,0,0x0,8
tick,0x7fff4326feb4,52935047,0,0x0,8
tick,0x7fff4326feb4,52951074,0,0x0,8
tick,0x7fff4326feb4,52966579,0,0x0,8
tick,0x7fff4326feb4,52982674,0,0x0,8
tick,0x7fff4326feb4,52998213,0,0x0,8
tick,0x7fff4326feb4,53013163,0,0x0,8
tick,0x7fff4326feb4,53028731,0,0x0,8
tick,0x7fff4326feb4,53043917,0,0x0,8
tick,0x7fff4326feb4,53059889,0,0x0,8
tick,0x7fff4326feb4,53075492,0,0x0,8
tick,0x7fff4326feb4,53091451,0,0x0,8
tick,0x7fff4326feb4,53106893,0,0x0,8
tick,0x7fff4326feb4,53122401,0,0x0,8
tick,0x7fff4326feb4,53137844,0,0x0,8
tick,0x7fff4326feb4,53153066,0,0x0,8
tick,0x7fff4326feb4,53168374,0,0x0,8
tick,0x7fff4326feb4,53183773,0,0x0,8
tick,0x7fff4326feb4,53199349,0,0x0,8
tick,0x7fff4326feb4,53214476,0,0x0,8
tick,0x7fff4326feb4,53230501,0,0x0,8
tick,0x7fff4326feb4,53246403,0,0x0,8
tick,0x7fff4326feb4,53262430,0,0x0,8
tick,0x7fff4326feb4,53278395,0,0x0,8
tick,0x7fff4326feb4,53294398,0,0x0,8
tick,0x7fff4326feb4,53310403,0,0x0,8
tick,0x7fff4326feb4,53326477,0,0x0,8
tick,0x7fff4326feb4,53341523,0,0x0,8
tick,0x7fff4326feb4,53357522,0,0x0,8
tick,0x7fff4326feb4,53373520,0,0x0,8
tick,0x7fff4326feb4,53388704,0,0x0,8
tick,0x7fff4326feb4,53403838,0,0x0,8
tick,0x7fff4326feb4,53419111,0,0x0,8
tick,0x7fff4326feb4,53434658,0,0x0,8
tick,0x7fff4326feb4,53449999,0,0x0,8
tick,0x7fff4326feb4,53465652,0,0x0,8
tick,0x7fff4326feb4,53481280,0,0x0,8
tick,0x7fff4326feb4,53497182,0,0x0,8
tick,0x7fff4326feb4,53512668,0,0x0,8
tick,0x7fff4326feb4,53527638,0,0x0,8
tick,0x7fff4326feb4,53542961,0,0x0,8
tick,0x7fff4326feb4,53558591,0,0x0,8
tick,0x7fff4326feb4,53573995,0,0x0,8
tick,0x7fff4326feb4,53589570,0,0x0,8
tick,0x7fff4326feb4,53605565,0,0x0,8
tick,0x7fff4326feb4,53620593,0,0x0,8
tick,0x7fff4326feb4,53635708,0,0x0,8
tick,0x7fff4326feb4,53651580,0,0x0,8
tick,0x7fff4326feb4,53667607,0,0x0,8
tick,0x7fff4326feb4,53683069,0,0x0,8
tick,0x7fff4326feb4,53699095,0,0x0,8
tick,0x7fff4326feb4,53715102,0,0x0,8
tick,0x7fff4326feb4,53731109,0,0x0,8
tick,0x7fff4326feb4,53746012,0,0x0,8
tick,0x7fff4326feb4,53761148,0,0x0,8
tick,0x7fff4326feb4,53776576,0,0x0,8
tick,0x7fff4326feb4,53791976,0,0x0,8
tick,0x7fff4326feb4,53807795,0,0x0,8
tick,0x7fff4326feb4,53823005,0,0x0,8
tick,0x7fff4326feb4,53838336,0,0x0,8
tick,0x7fff4326feb4,53853582,0,0x0,8
tick,0x7fff4326feb4,53869567,0,0x0,8
tick,0x7fff4326feb4,53885580,0,0x0,8
tick,0x7fff4326feb4,53901570,0,0x0,8
tick,0x7fff4326feb4,53917573,0,0x0,8
tick,0x7fff4326feb4,53933565,0,0x0,8
tick,0x7fff4326feb4,53948574,0,0x0,8
tick,0x7fff4326feb4,53964044,0,0x0,8
tick,0x7fff4326feb4,53979565,0,0x0,8
tick,0x7fff4326feb4,53994700,0,0x0,8
tick,0x7fff4326feb4,54011191,0,0x0,8
tick,0x7fff4326feb4,54027163,0,0x0,8
tick,0x7fff4326feb4,54042099,0,0x0,8
tick,0x7fff4326feb4,54058105,0,0x0,8
tick,0x7fff4326feb4,54073605,0,0x0,8
tick,0x7fff4326feb4,54089338,0,0x0,8
tick,0x7fff4326feb4,54104799,0,0x0,8
tick,0x7fff4326feb4,54120389,0,0x0,8
tick,0x7fff4326feb4,54135603,0,0x0,8
tick,0x7fff4326feb4,54151557,0,0x0,8
tick,0x7fff4326feb4,54167582,0,0x0,8
tick,0x7fff4326feb4,54183580,0,0x0,8
tick,0x7fff4326feb4,54198586,0,0x0,8
tick,0x7fff4326feb4,54213979,0,0x0,8
tick,0x7fff4326feb4,54229576,0,0x0,8
tick,0x7fff4326feb4,54245580,0,0x0,8
tick,0x7fff4326feb4,54261581,0,0x0,8
tick,0x7fff4326feb4,54277570,0,0x0,8
tick,0x7fff4326feb4,54293545,0,0x0,8
tick,0x7fff4326feb4,54309567,0,0x0,8
tick,0x7fff4326feb4,54325675,0,0x0,8
tick,0x7fff4326feb4,54341576,0,0x0,8
tick,0x7fff4326feb4,54357630,0,0x0,8
tick,0x7fff4326feb4,54373577,0,0x0,8
tick,0x7fff4326feb4,54389637,0,0x0,8
tick,0x7fff4326feb4,54405508,0,0x0,8
tick,0x7fff4326feb4,54420556,0,0x0,8
tick,0x7fff4326feb4,54436574,0,0x0,8
tick,0x7fff4326feb4,54452573,0,0x0,8
tick,0x7fff4326feb4,54468594,0,0x0,8
tick,0x7fff4326feb4,54484614,0,0x0,8
tick,0x7fff4326feb4,54500829,0,0x0,8
tick,0x7fff4326feb4,54515895,0,0x0,8
tick,0x7fff4326feb4,54531884,0,0x0,8
tick,0x7fff4326feb4,54547811,0,0x0,8
tick,0x7fff4326feb4,54563124,0,0x0,8
tick,0x7fff4326feb4,54578652,0,0x0,8
tick,0x7fff4326feb4,54594067,0,0x0,8
tick,0x7fff4326feb4,54609812,0,0x0,8
tick,0x7fff4326feb4,54625295,0,0x0,8
tick,0x7fff4326feb4,54640872,0,0x0,8
tick,0x7fff4326feb4,54657237,0,0x0,8
tick,0x7fff4326feb4,54673229,0,0x0,8
tick,0x7fff4326feb4,54688999,0,0x0,8
tick,0x7fff4326feb4,54704709,0,0x0,8
tick,0x7fff4326feb4,54720294,0,0x0,8
tick,0x7fff4326feb4,54736099,0,0x0,8
tick,0x7fff4326feb4,54752274,0,0x0,8
tick,0x7fff4326feb4,54767677,0,0x0,8
tick,0x7fff4326feb4,54783311,0,0x0,8
tick,0x7fff4326feb4,54798867,0,0x0,8
tick,0x7fff4326feb4,54813976,0,0x0,8
tick,0x7fff4326feb4,54830093,0,0x0,8
tick,0x7fff4326feb4,54846235,0,0x0,8
tick,0x7fff4326feb4,54862170,0,0x0,8
tick,0x7fff4326feb4,54878177,0,0x0,8
tick,0x7fff4326feb4,54893867,0,0x0,8
tick,0x7fff4326feb4,54909329,0,0x0,8
tick,0x7fff4326feb4,54925218,0,0x0,8
tick,0x7fff4326feb4,54940226,0,0x0,8
tick,0x7fff4326feb4,54955697,0,0x0,8
tick,0x7fff4326feb4,54971303,0,0x0,8
tick,0x7fff4326feb4,54986972,0,0x0,8
tick,0x7fff4326feb4,55002635,0,0x0,8
tick,0x7fff4326feb4,55017893,0,0x0,8
tick,0x7fff4326feb4,55033860,0,0x0,8
tick,0x7fff4326feb4,55048866,0,0x0,8
tick,0x7fff4326feb4,55064855,0,0x0,8
tick,0x7fff4326feb4,55080139,0,0x0,8
tick,0x7fff4326feb4,55096213,0,0x0,8
tick,0x7fff4326feb4,55112219,0,0x0,8
tick,0x7fff4326feb4,55127729,0,0x0,8
tick,0x7fff4326feb4,55142748,0,0x0,8
tick,0x7fff4326feb4,55158416,0,0x0,8
tick,0x7fff4326feb4,55173874,0,0x0,8
tick,0x7fff4326feb4,55189209,0,0x0,8
tick,0x7fff4326feb4,55205258,0,0x0,8
tick,0x7fff4326feb4,55220791,0,0x0,8
tick,0x7fff4326feb4,55236248,0,0x0,8
tick,0x7fff4326feb4,55251676,0,0x0,8
tick,0x7fff4326feb4,55267066,0,0x0,8
tick,0x7fff4326feb4,55283328,0,0x0,8
tick,0x7fff4326feb4,55298123,0,0x0,8
tick,0x7fff4326feb4,55313256,0,0x0,8
tick,0x7fff4326feb4,55329075,0,0x0,8
tick,0x7fff4326feb4,55344497,0,0x0,8
tick,0x7fff4326feb4,55359954,0,0x0,8
tick,0x7fff4326feb4,55375572,0,0x0,8
tick,0x7fff4326feb4,55391024,0,0x0,8
tick,0x7fff4326feb4,55406573,0,0x0,8
tick,0x7fff4326feb4,55422382,0,0x0,8
tick,0x7fff4326feb4,55437569,0,0x0,8
tick,0x7fff4326feb4,55452740,0,0x0,8
tick,0x7fff4326feb4,55468401,0,0x0,8
tick,0x7fff4326feb4,55483874,0,0x0,8
tick,0x7fff4326feb4,55499147,0,0x0,8
tick,0x7fff4326feb4,55514571,0,0x0,8
tick,0x7fff4326feb4,55529930,0,0x0,8
tick,0x7fff4326feb4,55545575,0,0x0,8
tick,0x7fff4326feb4,55560905,0,0x0,8
tick,0x7fff4326feb4,55576716,0,0x0,8
tick,0x7fff4326feb4,55591850,0,0x0,8
tick,0x7fff4326feb4,55607089,0,0x0,8
tick,0x7fff4326feb4,55622389,0,0x0,8
tick,0x7fff4326feb4,55637525,0,0x0,8
tick,0x7fff4326feb4,55652753,0,0x0,8
tick,0x7fff4326feb4,55668007,0,0x0,8
tick,0x7fff4326feb4,55683586,0,0x0,8
tick,0x7fff4326feb4,55698936,0,0x0,8
tick,0x7fff4326feb4,55714577,0,0x0,8
tick,0x7fff4326feb4,55730613,0,0x0,8
tick,0x7fff4326feb4,55746595,0,0x0,8
tick,0x7fff4326feb4,55762553,0,0x0,8
tick,0x7fff4326feb4,55778569,0,0x0,8
tick,0x7fff4326feb4,55793964,0,0x0,8
tick,0x7fff4326feb4,55809495,0,0x0,8
tick,0x7fff4326feb4,55824538,0,0x0,8
tick,0x7fff4326feb4,55839649,0,0x0,8
tick,0x7fff4326feb4,55855572,0,0x0,8
tick,0x7fff4326feb4,55871577,0,0x0,8
tick,0x7fff4326feb4,55887586,0,0x0,8
tick,0x7fff4326feb4,55902604,0,0x0,8
tick,0x7fff4326feb4,55917960,0,0x0,8
tick,0x7fff4326feb4,55933593,0,0x0,8
tick,0x7fff4326feb4,55948583,0,0x0,8
tick,0x7fff4326feb4,55964554,0,0x0,8
tick,0x7fff4326feb4,55980405,0,0x0,8
tick,0x7fff4326feb4,55995898,0,0x0,8
tick,0x7fff4326feb4,56011239,0,0x0,8
tick,0x7fff4326feb4,56026568,0,0x0,8
tick,0x7fff4326feb4,56041775,0,0x0,8
tick,0x7fff4326feb4,56057216,0,0x0,8
tick,0x7fff4326feb4,56072626,0,0x0,8
tick,0x7fff4326feb4,56088979,0,0x0,8
tick,0x7fff4326feb4,56104760,0,0x0,8
tick,0x7fff4326feb4,56120733,0,0x0,8
tick,0x7fff4326feb4,56136974,0,0x0,8
tick,0x7fff4326feb4,56152743,0,0x0,8
tick,0x7fff4326feb4,56167830,0,0x0,8
tick,0x7fff4326feb4,56182898,0,0x0,8
tick,0x7fff4326feb4,56199221,0,0x0,8
tick,0x7fff4326feb4,56215134,0,0x0,8
tick,0x7fff4326feb4,56230757,0,0x0,8
tick,0x7fff4326feb4,56245973,0,0x0,8
tick,0x7fff4326feb4,56261577,0,0x0,8
tick,0x7fff4326feb4,56277577,0,0x0,8
tick,0x7fff4326feb4,56293658,0,0x0,8
tick,0x7fff4326feb4,56309558,0,0x0,8
tick,0x7fff4326feb4,56325610,0,0x0,8
tick,0x7fff4326feb4,56341575,0,0x0,8
tick,0x7fff4326feb4,56356781,0,0x0,8
tick,0x7fff4326feb4,56372567,0,0x0,8
tick,0x7fff4326feb4,56388224,0,0x0,8
tick,0x7fff4326feb4,56403610,0,0x0,8
tick,0x7fff4326feb4,56419625,0,0x0,8
tick,0x7fff4326feb4,56435823,0,0x0,8
tick,0x7fff4326feb4,56450886,0,0x0,8
tick,0x7fff4326feb4,56466368,0,0x0,8
tick,0x7fff4326feb4,56481403,0,0x0,8
tick,0x7fff4326feb4,56496552,0,0x0,8
tick,0x7fff4326feb4,56511807,0,0x0,8
tick,0x7fff4326feb4,56526790,0,0x0,8
tick,0x7fff4326feb4,56542745,0,0x0,8
tick,0x7fff4326feb4,56558016,0,0x0,8
tick,0x7fff4326feb4,56573881,0,0x0,8
tick,0x7fff4326feb4,56589936,0,0x0,8
tick,0x7fff4326feb4,56605371,0,0x0,8
tick,0x7fff4326feb4,56620929,0,0x0,8
tick,0x7fff4326feb4,56636332,0,0x0,8
tick,0x7fff4326feb4,56651774,0,0x0,8
tick,0x7fff4326feb4,56667774,0,0x0,8
tick,0x7fff4326feb4,56683274,0,0x0,8
tick,0x7fff4326feb4,56698629,0,0x0,8
tick,0x7fff4326feb4,56714929,0,0x0,8
tick,0x7fff4326feb4,56730636,0,0x0,8
tick,0x7fff4326feb4,56745943,0,0x0,8
tick,0x7fff4326feb4,56762264,0,0x0,8
tick,0x7fff4326feb4,56777801,0,0x0,8
tick,0x7fff4326feb4,56793635,0,0x0,8
tick,0x7fff4326feb4,56808934,0,0x0,8
tick,0x7fff4326feb4,56824906,0,0x0,8
tick,0x7fff4326feb4,56840427,0,0x0,8
tick,0x7fff4326feb4,56856077,0,0x0,8
tick,0x7fff4326feb4,56872184,0,0x0,8
tick,0x7fff4326feb4,56887715,0,0x0,8
tick,0x7fff4326feb4,56902821,0,0x0,8
tick,0x7fff4326feb4,56918185,0,0x0,8
tick,0x7fff4326feb4,56934496,0,0x0,8
tick,0x7fff4326feb4,56950214,0,0x0,8
tick,0x7fff4326feb4,56965949,0,0x0,8
tick,0x7fff4326feb4,56981258,0,0x0,8
tick,0x7fff4326feb4,56996686,0,0x0,8
tick,0x7fff4326feb4,57012652,0,0x0,8
tick,0x7fff4326feb4,57028327,0,0x0,8
tick,0x7fff4326feb4,57044007,0,0x0,8
tick,0x7fff4326feb4,57059656,0,0x0,8
tick,0x7fff4326feb4,57075394,0,0x0,8
tick,0x7fff4326feb4,57091173,0,0x0,8
tick,0x7fff4326feb4,57107455,0,0x0,8
tick,0x7fff4326feb4,57122958,0,0x0,8
tick,0x7fff4326feb4,57138695,0,0x0,8
tick,0x7fff4326feb4,57154018,0,0x0,8
tick,0x7fff4326feb4,57169325,0,0x0,8
tick,0x7fff4326feb4,57185374,0,0x0,8
tick,0x7fff4326feb4,57199847,0,0x0,8
tick,0x7fff4326feb4,57215320,0,0x0,8
tick,0x7fff4326feb4,57230566,0,0x0,8
tick,0x7fff4326feb4,57246328,0,0x0,8
tick,0x7fff4326feb4,57262331,0,0x0,8
tick,0x7fff4326feb4,57277966,0,0x0,8
tick,0x7fff4326feb4,57293335,0,0x0,8
tick,0x7fff4326feb4,57309328,0,0x0,8
tick,0x7fff4326feb4,57324317,0,0x0,8
tick,0x7fff4326feb4,57340774,0,0x0,8
tick,0x7fff4326feb4,57355784,0,0x0,8
tick,0x7fff4326feb4,57371621,0,0x0,8
tick,0x7fff4326feb4,57387019,0,0x0,8
tick,0x7fff4326feb4,57402496,0,0x0,8
tick,0x7fff4326feb4,57418319,0,0x0,8
tick,0x7fff4326feb4,57433871,0,0x0,8
tick,0x7fff4326feb4,57449116,0,0x0,8
tick,0x7fff4326feb4,57464361,0,0x0,8
tick,0x7fff4326feb4,57479952,0,0x0,8
tick,0x7fff4326feb4,57495787,0,0x0,8
tick,0x7fff4326feb4,57511398,0,0x0,8
tick,0x7fff4326feb4,57526697,0,0x0,8
tick,0x7fff4326feb4,57542344,0,0x0,8
tick,0x7fff4326feb4,57558355,0,0x0,8
tick,0x7fff4326feb4,57574281,0,0x0,8
tick,0x7fff4326feb4,57590329,0,0x0,8
tick,0x7fff4326feb4,57606342,0,0x0,8
tick,0x7fff4326feb4,57622402,0,0x0,8
tick,0x7fff4326feb4,57638106,0,0x0,8
tick,0x7fff4326feb4,57653452,0,0x0,8
tick,0x7fff4326feb4,57668815,0,0x0,8
tick,0x7fff4326feb4,57684497,0,0x0,8
tick,0x7fff4326feb4,57700316,0,0x0,8
tick,0x7fff4326feb4,57716344,0,0x0,8
tick,0x7fff4326feb4,57732526,0,0x0,8
tick,0x7fff4326feb4,57748719,0,0x0,8
tick,0x7fff4326feb4,57764674,0,0x0,8
tick,0x7fff4326feb4,57780678,0,0x0,8
tick,0x7fff4326feb4,57796781,0,0x0,8
tick,0x7fff4326feb4,57812407,0,0x0,8
tick,0x7fff4326feb4,57828294,0,0x0,8
tick,0x7fff4326feb4,57844529,0,0x0,8
tick,0x7fff4326feb4,57860763,0,0x0,8
tick,0x7fff4326feb4,57876209,0,0x0,8
tick,0x7fff4326feb4,57891696,0,0x0,8
tick,0x7fff4326feb4,57907268,0,0x0,8
tick,0x7fff4326feb4,57922529,0,0x0,8
tick,0x7fff4326feb4,57938070,0,0x0,8
tick,0x7fff4326feb4,57953139,0,0x0,8
tick,0x7fff4326feb4,57968277,0,0x0,8
tick,0x7fff4326feb4,57983542,0,0x0,8
tick,0x7fff4326feb4,57998530,0,0x0,8
tick,0x7fff4326feb4,58013809,0,0x0,8
tick,0x7fff4326feb4,58029882,0,0x0,8
tick,0x7fff4326feb4,58045578,0,0x0,8
tick,0x7fff4326feb4,58061938,0,0x0,8
tick,0x7fff4326feb4,58076817,0,0x0,8
tick,0x7fff4326feb4,58092254,0,0x0,8
tick,0x7fff4326feb4,58107567,0,0x0,8
tick,0x7fff4326feb4,58122959,0,0x0,8
tick,0x7fff4326feb4,58138683,0,0x0,8
tick,0x7fff4326feb4,58154317,0,0x0,8
tick,0x7fff4326feb4,58169941,0,0x0,8
tick,0x7fff4326feb4,58185948,0,0x0,8
tick,0x7fff4326feb4,58202044,0,0x0,8
tick,0x7fff4326feb4,58217973,0,0x0,8
tick,0x7fff4326feb4,58234447,0,0x0,8
tick,0x7fff4326feb4,58250412,0,0x0,8
tick,0x7fff4326feb4,58265023,0,0x0,8
tick,0x7fff4326feb4,58280197,0,0x0,8
tick,0x7fff4326feb4,58296189,0,0x0,8
tick,0x7fff4326feb4,58311193,0,0x0,8
tick,0x7fff4326feb4,58327203,0,0x0,8
tick,0x7fff4326feb4,58342212,0,0x0,8
tick,0x7fff4326feb4,58358211,0,0x0,8
tick,0x7fff4326feb4,58373460,0,0x0,8
tick,0x7fff4326feb4,58389456,0,0x0,8
tick,0x7fff4326feb4,58405066,0,0x0,8
tick,0x7fff4326feb4,58420392,0,0x0,8
tick,0x7fff4326feb4,58435067,0,0x0,8
tick,0x7fff4326feb4,58450614,0,0x0,8
tick,0x7fff4326feb4,58466204,0,0x0,8
tick,0x7fff4326feb4,58481522,0,0x0,8
tick,0x7fff4326feb4,58496727,0,0x0,8
tick,0x7fff4326feb4,58512172,0,0x0,8
tick,0x7fff4326feb4,58527705,0,0x0,8
tick,0x7fff4326feb4,58543273,0,0x0,8
tick,0x7fff4326feb4,58558565,0,0x0,8
tick,0x7fff4326feb4,58574161,0,0x0,8
tick,0x7fff4326feb4,58590192,0,0x0,8
tick,0x7fff4326feb4,58605569,0,0x0,8
tick,0x7fff4326feb4,58620569,0,0x0,8
tick,0x7fff4326feb4,58636569,0,0x0,8
tick,0x7fff4326feb4,58651845,0,0x0,8
tick,0x7fff4326feb4,58667229,0,0x0,8
tick,0x7fff4326feb4,58682592,0,0x0,8
tick,0x7fff4326feb4,58698016,0,0x0,8
tick,0x7fff4326feb4,58713617,0,0x0,8
tick,0x7fff4326feb4,58728989,0,0x0,8
tick,0x7fff4326feb4,58744681,0,0x0,8
tick,0x7fff4326feb4,58759840,0,0x0,8
tick,0x7fff4326feb4,58775468,0,0x0,8
tick,0x7fff4326feb4,58791440,0,0x0,8
tick,0x7fff4326feb4,58807090,0,0x0,8
tick,0x7fff4326feb4,58823126,0,0x0,8
tick,0x7fff4326feb4,58838584,0,0x0,8
tick,0x7fff4326feb4,58854312,0,0x0,8
tick,0x7fff4326feb4,58870328,0,0x0,8
tick,0x7fff4326feb4,58886347,0,0x0,8
tick,0x7fff4326feb4,58901363,0,0x0,8
tick,0x7fff4326feb4,58916249,0,0x0,8
tick,0x7fff4326feb4,58931751,0,0x0,8
tick,0x7fff4326feb4,58946975,0,0x0,8
tick,0x7fff4326feb4,58963064,0,0x0,8
tick,0x7fff4326feb4,58979080,0,0x0,8
tick,0x7fff4326feb4,58994799,0,0x0,8
tick,0x7fff4326feb4,59010260,0,0x0,8
tick,0x7fff4326feb4,59025525,0,0x0,8
tick,0x7fff4326feb4,59041419,0,0x0,8
tick,0x7fff4326feb4,59057444,0,0x0,8
tick,0x7fff4326feb4,59073448,0,0x0,8
tick,0x7fff4326feb4,59089454,0,0x0,8
tick,0x7fff4326feb4,59104966,0,0x0,8
tick,0x7fff4326feb4,59120541,0,0x0,8
tick,0x7fff4326feb4,59135682,0,0x0,8
tick,0x7fff4326feb4,59150699,0,0x0,8
tick,0x7fff4326feb4,59167396,0,0x0,8
tick,0x7fff4326feb4,59182740,0,0x0,8
tick,0x7fff4326feb4,59199037,0,0x0,8
tick,0x7fff4326feb4,59215166,0,0x0,8
tick,0x7fff4326feb4,59230977,0,0x0,8
tick,0x7fff4326feb4,59245937,0,0x0,8
tick,0x7fff4326feb4,59261680,0,0x0,8
tick,0x7fff4326feb4,59277575,0,0x0,8
tick,0x7fff4326feb4,59293558,0,0x0,8
tick,0x7fff4326feb4,59308702,0,0x0,8
tick,0x7fff4326feb4,59324706,0,0x0,8
tick,0x7fff4326feb4,59340572,0,0x0,8
tick,0x7fff4326feb4,59356615,0,0x0,8
tick,0x7fff4326feb4,59372626,0,0x0,8
tick,0x7fff4326feb4,59388571,0,0x0,8
tick,0x7fff4326feb4,59404327,0,0x0,8
tick,0x7fff4326feb4,59420267,0,0x0,8
tick,0x7fff4326feb4,59435032,0,0x0,8
tick,0x7fff4326feb4,59450094,0,0x0,8
tick,0x7fff4326feb4,59465556,0,0x0,8
tick,0x7fff4326feb4,59481019,0,0x0,8
tick,0x7fff4326feb4,59496565,0,0x0,8
tick,0x7fff4326feb4,59512089,0,0x0,8
tick,0x7fff4326feb4,59527719,0,0x0,8
tick,0x7fff4326feb4,59543187,0,0x0,8
tick,0x7fff4326feb4,59558139,0,0x0,8
tick,0x7fff4326feb4,59574151,0,0x0,8
tick,0x7fff4326feb4,59590158,0,0x0,8
tick,0x7fff4326feb4,59604883,0,0x0,8
tick,0x7fff4326feb4,59620206,0,0x0,8
tick,0x7fff4326feb4,59636061,0,0x0,8
tick,0x7fff4326feb4,59652002,0,0x0,8
tick,0x7fff4326feb4,59666825,0,0x0,8
tick,0x7fff4326feb4,59682022,0,0x0,8
tick,0x7fff4326feb4,59697556,0,0x0,8
tick,0x7fff4326feb4,59712576,0,0x0,8
tick,0x7fff4326feb4,59728634,0,0x0,8
tick,0x7fff4326feb4,59744574,0,0x0,8
tick,0x7fff4326feb4,59759761,0,0x0,8
tick,0x7fff4326feb4,59774563,0,0x0,8
tick,0x7fff4326feb4,59790567,0,0x0,8
tick,0x7fff4326feb4,59806566,0,0x0,8
tick,0x7fff4326feb4,59821576,0,0x0,8
tick,0x7fff4326feb4,59837588,0,0x0,8
tick,0x7fff4326feb4,59853553,0,0x0,8
tick,0x7fff4326feb4,59868554,0,0x0,8
tick,0x7fff4326feb4,59884544,0,0x0,8
tick,0x7fff4326feb4,59899926,0,0x0,8
tick,0x7fff4326feb4,59915874,0,0x0,8
tick,0x7fff4326feb4,59931132,0,0x0,8
tick,0x7fff4326feb4,59946760,0,0x0,8
tick,0x7fff4326feb4,59962618,0,0x0,8
tick,0x7fff4326feb4,59978247,0,0x0,8
tick,0x7fff4326feb4,59994061,0,0x0,8
tick,0x7fff4326feb4,60009759,0,0x0,8
tick,0x7fff4326feb4,60025333,0,0x0,8
tick,0x7fff4326feb4,60040329,0,0x0,8
tick,0x7fff4326feb4,60056215,0,0x0,8
tick,0x7fff4326feb4,60071831,0,0x0,8
tick,0x7fff4326feb4,60087763,0,0x0,8
tick,0x7fff4326feb4,60103392,0,0x0,8
tick,0x7fff4326feb4,60118908,0,0x0,8
tick,0x7fff4326feb4,60134915,0,0x0,8
tick,0x7fff4326feb4,60150632,0,0x0,8
tick,0x7fff4326feb4,60166224,0,0x0,8
tick,0x7fff4326feb4,60181925,0,0x0,8
tick,0x7fff4326feb4,60197402,0,0x0,8
tick,0x7fff4326feb4,60213326,0,0x0,8
tick,0x7fff4326feb4,60228872,0,0x0,8
tick,0x7fff4326feb4,60244833,0,0x0,8
tick,0x7fff4326feb4,60261133,0,0x0,8
tick,0x7fff4326feb4,60276874,0,0x0,8
tick,0x7fff4326feb4,60293184,0,0x0,8
tick,0x7fff4326feb4,60308678,0,0x0,8
tick,0x7fff4326feb4,60324899,0,0x0,8
tick,0x7fff4326feb4,60340033,0,0x0,8
tick,0x7fff4326feb4,60355606,0,0x0,8
tick,0x7fff4326feb4,60371882,0,0x0,8
tick,0x7fff4326feb4,60387175,0,0x0,8
tick,0x7fff4326feb4,60402779,0,0x0,8
tick,0x7fff4326feb4,60418226,0,0x0,8
tick,0x7fff4326feb4,60434010,0,0x0,8
tick,0x7fff4326feb4,60449312,0,0x0,8
tick,0x7fff4326feb4,60464094,0,0x0,8
tick,0x7fff4326feb4,60480107,0,0x0,8
tick,0x7fff4326feb4,60496116,0,0x0,8
tick,0x7fff4326feb4,60512153,0,0x0,8
tick,0x7fff4326feb4,60527425,0,0x0,8
tick,0x7fff4326feb4,60542528,0,0x0,8
tick,0x7fff4326feb4,60557890,0,0x0,8
tick,0x7fff4326feb4,60573557,0,0x0,8
tick,0x7fff4326feb4,60588908,0,0x0,8
tick,0x7fff4326feb4,60604091,0,0x0,8
tick,0x7fff4326feb4,60619790,0,0x0,8
tick,0x7fff4326feb4,60635829,0,0x0,8
tick,0x7fff4326feb4,60651217,0,0x0,8
tick,0x7fff4326feb4,60666787,0,0x0,8
tick,0x7fff4326feb4,60682603,0,0x0,8
tick,0x7fff4326feb4,60698459,0,0x0,8
tick,0x7fff4326feb4,60714127,0,0x0,8
tick,0x7fff4326feb4,60729783,0,0x0,8
tick,0x7fff4326feb4,60745798,0,0x0,8
tick,0x7fff4326feb4,60760952,0,0x0,8
tick,0x7fff4326feb4,60777066,0,0x0,8
tick,0x7fff4326feb4,60792790,0,0x0,8
tick,0x7fff4326feb4,60808390,0,0x0,8
tick,0x7fff4326feb4,60824798,0,0x0,8
tick,0x7fff4326feb4,60841099,0,0x0,8
tick,0x7fff4326feb4,60856644,0,0x0,8
tick,0x7fff4326feb4,60872899,0,0x0,8
tick,0x7fff4326feb4,60888080,0,0x0,8
tick,0x7fff4326feb4,60904023,0,0x0,8
tick,0x7fff4326feb4,60919888,0,0x0,8
tick,0x7fff4326feb4,60935203,0,0x0,8
tick,0x7fff4326feb4,60951205,0,0x0,8
tick,0x7fff4326feb4,60966894,0,0x0,8
tick,0x7fff4326feb4,60982605,0,0x0,8
tick,0x7fff4326feb4,60997594,0,0x0,8
tick,0x7fff4326feb4,61012558,0,0x0,8
tick,0x7fff4326feb4,61027397,0,0x0,8
tick,0x7fff4326feb4,61042590,0,0x0,8
tick,0x7fff4326feb4,61058615,0,0x0,8
tick,0x7fff4326feb4,61073940,0,0x0,8
tick,0x7fff4326feb4,61089578,0,0x0,8
tick,0x7fff4326feb4,61104667,0,0x0,8
tick,0x7fff4326feb4,61120252,0,0x0,8
tick,0x7fff4326feb4,61135631,0,0x0,8
tick,0x7fff4326feb4,61151250,0,0x0,8
tick,0x7fff4326feb4,61166541,0,0x0,8
tick,0x7fff4326feb4,61181545,0,0x0,8
tick,0x7fff4326feb4,61197556,0,0x0,8
tick,0x7fff4326feb4,61212562,0,0x0,8
tick,0x7fff4326feb4,61227262,0,0x0,8
tick,0x7fff4326feb4,61243253,0,0x0,8
tick,0x7fff4326feb4,61258536,0,0x0,8
tick,0x7fff4326feb4,61274359,0,0x0,8
tick,0x7fff4326feb4,61290242,0,0x0,8
tick,0x7fff4326feb4,61305249,0,0x0,8
tick,0x7fff4326feb4,61321257,0,0x0,8
tick,0x7fff4326feb4,61337282,0,0x0,8
tick,0x7fff4326feb4,61352781,0,0x0,8
tick,0x7fff4326feb4,61368551,0,0x0,8
tick,0x7fff4326feb4,61383557,0,0x0,8
tick,0x7fff4326feb4,61399079,0,0x0,8
tick,0x7fff4326feb4,61414563,0,0x0,8
tick,0x7fff4326feb4,61429716,0,0x0,8
tick,0x7fff4326feb4,61445582,0,0x0,8
tick,0x7fff4326feb4,61460951,0,0x0,8
tick,0x7fff4326feb4,61476578,0,0x0,8
tick,0x7fff4326feb4,61491930,0,0x0,8
tick,0x7fff4326feb4,61507802,0,0x0,8
tick,0x7fff4326feb4,61522905,0,0x0,8
tick,0x7fff4326feb4,61539027,0,0x0,8
tick,0x7fff4326feb4,61554134,0,0x0,8
tick,0x7fff4326feb4,61569413,0,0x0,8
tick,0x7fff4326feb4,61584905,0,0x0,8
tick,0x7fff4326feb4,61601132,0,0x0,8
tick,0x7fff4326feb4,61617212,0,0x0,8
tick,0x7fff4326feb4,61632933,0,0x0,8
tick,0x7fff4326feb4,61648606,0,0x0,8
tick,0x7fff4326feb4,61663887,0,0x0,8
tick,0x7fff4326feb4,61679894,0,0x0,8
tick,0x7fff4326feb4,61695570,0,0x0,8
tick,0x7fff4326feb4,61711317,0,0x0,8
tick,0x7fff4326feb4,61727063,0,0x0,8
tick,0x7fff4326feb4,61742347,0,0x0,8
tick,0x7fff4326feb4,61758399,0,0x0,8
tick,0x7fff4326feb4,61774143,0,0x0,8
tick,0x7fff4326feb4,61790111,0,0x0,8
tick,0x7fff4326feb4,61805581,0,0x0,8
tick,0x7fff4326feb4,61820890,0,0x0,8
tick,0x7fff4326feb4,61836583,0,0x0,8
tick,0x7fff4326feb4,61852355,0,0x0,8
tick,0x7fff4326feb4,61868677,0,0x0,8
tick,0x7fff4326feb4,61884598,0,0x0,8
tick,0x7fff4326feb4,61900084,0,0x0,8
tick,0x7fff4326feb4,61915796,0,0x0,8
tick,0x7fff4326feb4,61930979,0,0x0,8
tick,0x7fff4326feb4,61946764,0,0x0,8
tick,0x7fff4326feb4,61962474,0,0x0,8
tick,0x7fff4326feb4,61978006,0,0x0,8
tick,0x7fff4326feb4,61993673,0,0x0,8
tick,0x7fff4326feb4,62009991,0,0x0,8
tick,0x7fff4326feb4,62026011,0,0x0,8
tick,0x7fff4326feb4,62041330,0,0x0,8
tick,0x7fff4326feb4,62056842,0,0x0,8
tick,0x7fff4326feb4,62073009,0,0x0,8
tick,0x7fff4326feb4,62089161,0,0x0,8
tick,0x7fff4326feb4,62104263,0,0x0,8
tick,0x7fff4326feb4,62119610,0,0x0,8
tick,0x7fff4326feb4,62135276,0,0x0,8
tick,0x7fff4326feb4,62151258,0,0x0,8
tick,0x7fff4326feb4,62166354,0,0x0,8
tick,0x7fff4326feb4,62181604,0,0x0,8
tick,0x7fff4326feb4,62196549,0,0x0,8
tick,0x7fff4326feb4,62212472,0,0x0,8
tick,0x7fff4326feb4,62228480,0,0x0,8
tick,0x7fff4326feb4,62244486,0,0x0,8
tick,0x7fff4326feb4,62260479,0,0x0,8
tick,0x7fff4326feb4,62275382,0,0x0,8
tick,0x7fff4326feb4,62291515,0,0x0,8
tick,0x7fff4326feb4,62307002,0,0x0,8
tick,0x7fff4326feb4,62323127,0,0x0,8
tick,0x7fff4326feb4,62339370,0,0x0,8
tick,0x7fff4326feb4,62354658,0,0x0,8
tick,0x7fff4326feb4,62370341,0,0x0,8
tick,0x7fff4326feb4,62385996,0,0x0,8
tick,0x7fff4326feb4,62400896,0,0x0,8
tick,0x7fff4326feb4,62416260,0,0x0,8
tick,0x7fff4326feb4,62431964,0,0x0,8
tick,0x7fff4326feb4,62447636,0,0x0,8
tick,0x7fff4326feb4,62463022,0,0x0,8
tick,0x7fff4326feb4,62478665,0,0x0,8
tick,0x7fff4326feb4,62493883,0,0x0,8
tick,0x7fff4326feb4,62509479,0,0x0,8
tick,0x7fff4326feb4,62524867,0,0x0,8
tick,0x7fff4326feb4,62540563,0,0x0,8
tick,0x7fff4326feb4,62556164,0,0x0,8
tick,0x7fff4326feb4,62571852,0,0x0,8
tick,0x7fff4326feb4,62587459,0,0x0,8
tick,0x7fff4326feb4,62603167,0,0x0,8
tick,0x7fff4326feb4,62619039,0,0x0,8
tick,0x7fff4326feb4,62634637,0,0x0,8
tick,0x7fff4326feb4,62650010,0,0x0,8
tick,0x7fff4326feb4,62665627,0,0x0,8
tick,0x7fff4326feb4,62681223,0,0x0,8
tick,0x7fff4326feb4,62697130,0,0x0,8
tick,0x7fff4326feb4,62712348,0,0x0,8
tick,0x7fff4326feb4,62727928,0,0x0,8
tick,0x7fff4326feb4,62743344,0,0x0,8
tick,0x7fff4326feb4,62759032,0,0x0,8
tick,0x7fff4326feb4,62774988,0,0x0,8
tick,0x7fff4326feb4,62790296,0,0x0,8
tick,0x7fff4326feb4,62806306,0,0x0,8
tick,0x7fff4326feb4,62821996,0,0x0,8
tick,0x7fff4326feb4,62837161,0,0x0,8
tick,0x7fff4326feb4,62852859,0,0x0,8
tick,0x7fff4326feb4,62868439,0,0x0,8
tick,0x7fff4326feb4,62884482,0,0x0,8
tick,0x7fff4326feb4,62899881,0,0x0,8
tick,0x7fff4326feb4,62916172,0,0x0,8
tick,0x7fff4326feb4,62932256,0,0x0,8
tick,0x7fff4326feb4,62948411,0,0x0,8
tick,0x7fff4326feb4,62963543,0,0x0,8
tick,0x7fff4326feb4,62979604,0,0x0,8
tick,0x7fff4326feb4,62995617,0,0x0,8
tick,0x7fff4326feb4,63011046,0,0x0,8
tick,0x7fff4326feb4,63026897,0,0x0,8
tick,0x7fff4326feb4,63041823,0,0x0,8
tick,0x7fff4326feb4,63057226,0,0x0,8
tick,0x7fff4326feb4,63073338,0,0x0,8
tick,0x7fff4326feb4,63088478,0,0x0,8
tick,0x7fff4326feb4,63104437,0,0x0,8
tick,0x7fff4326feb4,63120543,0,0x0,8
tick,0x7fff4326feb4,63136216,0,0x0,8
tick,0x7fff4326feb4,63152232,0,0x0,8
tick,0x7fff4326feb4,63168156,0,0x0,8
tick,0x7fff4326feb4,63184137,0,0x0,8
tick,0x7fff4326feb4,63199112,0,0x0,8
tick,0x7fff4326feb4,63214124,0,0x0,8
tick,0x7fff4326feb4,63229017,0,0x0,8
tick,0x7fff4326feb4,63244755,0,0x0,8
tick,0x7fff4326feb4,63260061,0,0x0,8
tick,0x7fff4326feb4,63275368,0,0x0,8
tick,0x7fff4326feb4,63290989,0,0x0,8
tick,0x7fff4326feb4,63306753,0,0x0,8
tick,0x7fff4326feb4,63322007,0,0x0,8
tick,0x7fff4326feb4,63337723,0,0x0,8
tick,0x7fff4326feb4,63353615,0,0x0,8
tick,0x7fff4326feb4,63369151,0,0x0,8
tick,0x7fff4326feb4,63384719,0,0x0,8
tick,0x7fff4326feb4,63400510,0,0x0,8
tick,0x7fff4326feb4,63416633,0,0x0,8
tick,0x7fff4326feb4,63432297,0,0x0,8
tick,0x7fff4326feb4,63447892,0,0x0,8
tick,0x7fff4326feb4,63463315,0,0x0,8
tick,0x7fff4326feb4,63479223,0,0x0,8
tick,0x7fff4326feb4,63495227,0,0x0,8
tick,0x7fff4326feb4,63511158,0,0x0,8
tick,0x7fff4326feb4,63526520,0,0x0,8
tick,0x7fff4326feb4,63541529,0,0x0,8
tick,0x7fff4326feb4,63557224,0,0x0,8
tick,0x7fff4326feb4,63573221,0,0x0,8
tick,0x7fff4326feb4,63588470,0,0x0,8
tick,0x7fff4326feb4,63604446,0,0x0,8
tick,0x7fff4326feb4,63620440,0,0x0,8
tick,0x7fff4326feb4,63635753,0,0x0,8
tick,0x7fff4326feb4,63651834,0,0x0,8
tick,0x7fff4326feb4,63666996,0,0x0,8
tick,0x7fff4326feb4,63683033,0,0x0,8
tick,0x7fff4326feb4,63698618,0,0x0,8
tick,0x7fff4326feb4,63714904,0,0x0,8
tick,0x7fff4326feb4,63730638,0,0x0,8
tick,0x7fff4326feb4,63746366,0,0x0,8
tick,0x7fff4326feb4,63762106,0,0x0,8
tick,0x7fff4326feb4,63777701,0,0x0,8
tick,0x7fff4326feb4,63793548,0,0x0,8
tick,0x7fff4326feb4,63809662,0,0x0,8
tick,0x7fff4326feb4,63825233,0,0x0,8
tick,0x7fff4326feb4,63841294,0,0x0,8
tick,0x7fff4326feb4,63856747,0,0x0,8
tick,0x7fff4326feb4,63872431,0,0x0,8
tick,0x7fff4326feb4,63887946,0,0x0,8
tick,0x7fff4326feb4,63904032,0,0x0,8
tick,0x7fff4326feb4,63919553,0,0x0,8
tick,0x7fff4326feb4,63935553,0,0x0,8
tick,0x7fff4326feb4,63951357,0,0x0,8
tick,0x7fff4326feb4,63966747,0,0x0,8
tick,0x7fff4326feb4,63982057,0,0x0,8
tick,0x7fff4326feb4,63997037,0,0x0,8
tick,0x7fff4326feb4,64012002,0,0x0,8
tick,0x7fff4326feb4,64027480,0,0x0,8
tick,0x7fff4326feb4,64043026,0,0x0,8
tick,0x7fff4326feb4,64058304,0,0x0,8
tick,0x7fff4326feb4,64074452,0,0x0,8
tick,0x7fff4326feb4,64090080,0,0x0,8
tick,0x7fff4326feb4,64105758,0,0x0,8
tick,0x7fff4326feb4,64120825,0,0x0,8
tick,0x7fff4326feb4,64136303,0,0x0,8
tick,0x7fff4326feb4,64151523,0,0x0,8
tick,0x7fff4326feb4,64167680,0,0x0,8
tick,0x7fff4326feb4,64183022,0,0x0,8
tick,0x7fff4326feb4,64198642,0,0x0,8
tick,0x7fff4326feb4,64214139,0,0x0,8
tick,0x7fff4326feb4,64230041,0,0x0,8
tick,0x7fff4326feb4,64245576,0,0x0,8
tick,0x7fff4326feb4,64261568,0,0x0,8
tick,0x7fff4326feb4,64277313,0,0x0,8
tick,0x7fff4326feb4,64292596,0,0x0,8
tick,0x7fff4326feb4,64308231,0,0x0,8
tick,0x7fff4326feb4,64323262,0,0x0,8
tick,0x7fff4326feb4,64338555,0,0x0,8
tick,0x7fff4326feb4,64354373,0,0x0,8
tick,0x7fff4326feb4,64369935,0,0x0,8
tick,0x7fff4326feb4,64385416,0,0x0,8
tick,0x7fff4326feb4,64400981,0,0x0,8
tick,0x7fff4326feb4,64417018,0,0x0,8
tick,0x7fff4326feb4,64433028,0,0x0,8
tick,0x7fff4326feb4,64448692,0,0x0,8
tick,0x7fff4326feb4,64463989,0,0x0,8
tick,0x7fff4326feb4,64479740,0,0x0,8
tick,0x7fff4326feb4,64495824,0,0x0,8
tick,0x7fff4326feb4,64511157,0,0x0,8
tick,0x7fff4326feb4,64526469,0,0x0,8
tick,0x7fff4326feb4,64542653,0,0x0,8
tick,0x7fff4326feb4,64558301,0,0x0,8
tick,0x7fff4326feb4,64574139,0,0x0,8
tick,0x7fff4326feb4,64589217,0,0x0,8
tick,0x7fff4326feb4,64604800,0,0x0,8
tick,0x7fff4326feb4,64620269,0,0x0,8
tick,0x7fff4326feb4,64636565,0,0x0,8
tick,0x7fff4326feb4,64651994,0,0x0,8
tick,0x7fff4326feb4,64668317,0,0x0,8
tick,0x7fff4326feb4,64684186,0,0x0,8
tick,0x7fff4326feb4,64699882,0,0x0,8
tick,0x7fff4326feb4,64714948,0,0x0,8
tick,0x7fff4326feb4,64730421,0,0x0,8
tick,0x7fff4326feb4,64745306,0,0x0,8
tick,0x7fff4326feb4,64760598,0,0x0,8
tick,0x7fff4326feb4,64776015,0,0x0,8
tick,0x7fff4326feb4,64792316,0,0x0,8
tick,0x7fff4326feb4,64807242,0,0x0,8
tick,0x7fff4326feb4,64822950,0,0x0,8
tick,0x7fff4326feb4,64838286,0,0x0,8
tick,0x7fff4326feb4,64854551,0,0x0,8
tick,0x7fff4326feb4,64870099,0,0x0,8
tick,0x7fff4326feb4,64884961,0,0x0,8
tick,0x7fff4326feb4,64900863,0,0x0,8
tick,0x7fff4326feb4,64916235,0,0x0,8
tick,0x7fff4326feb4,64931555,0,0x0,8
tick,0x7fff4326feb4,64946811,0,0x0,8
tick,0x7fff4326feb4,64961945,0,0x0,8
tick,0x7fff4326feb4,64978070,0,0x0,8
tick,0x7fff4326feb4,64993237,0,0x0,8
tick,0x7fff4326feb4,65008585,0,0x0,8
tick,0x7fff4326feb4,65024058,0,0x0,8
tick,0x7fff4326feb4,65038963,0,0x0,8
tick,0x7fff4326feb4,65054571,0,0x0,8
tick,0x7fff4326feb4,65070597,0,0x0,8
tick,0x7fff4326feb4,65086659,0,0x0,8
tick,0x7fff4326feb4,65102616,0,0x0,8
tick,0x7fff4326feb4,65118189,0,0x0,8
tick,0x7fff4326feb4,65134176,0,0x0,8
tick,0x7fff4326feb4,65149556,0,0x0,8
tick,0x7fff4326feb4,65165509,0,0x0,8
tick,0x7fff4326feb4,65181564,0,0x0,8
tick,0x7fff4326feb4,65197263,0,0x0,8
tick,0x7fff4326feb4,65212670,0,0x0,8
tick,0x7fff4326feb4,65228504,0,0x0,8
tick,0x7fff4326feb4,65243990,0,0x0,8
tick,0x7fff4326feb4,65259186,0,0x0,8
tick,0x7fff4326feb4,65274430,0,0x0,8
tick,0x7fff4326feb4,65290160,0,0x0,8
tick,0x7fff4326feb4,65306170,0,0x0,8
tick,0x7fff4326feb4,65322169,0,0x0,8
tick,0x7fff4326feb4,65338176,0,0x0,8
tick,0x7fff4326feb4,65354205,0,0x0,8
tick,0x7fff4326feb4,65370079,0,0x0,8
tick,0x7fff4326feb4,65386240,0,0x0,8
tick,0x7fff4326feb4,65402135,0,0x0,8
tick,0x7fff4326feb4,65416743,0,0x0,8
tick,0x7fff4326feb4,65432714,0,0x0,8
tick,0x7fff4326feb4,65448289,0,0x0,8
tick,0x7fff4326feb4,65464129,0,0x0,8
tick,0x7fff4326feb4,65479825,0,0x0,8
tick,0x7fff4326feb4,65494850,0,0x0,8
tick,0x7fff4326feb4,65510429,0,0x0,8
tick,0x7fff4326feb4,65526068,0,0x0,8
tick,0x7fff4326feb4,65542319,0,0x0,8
tick,0x7fff4326feb4,65557995,0,0x0,8
tick,0x7fff4326feb4,65573283,0,0x0,8
tick,0x7fff4326feb4,65588359,0,0x0,8
tick,0x7fff4326feb4,65603811,0,0x0,8
tick,0x7fff4326feb4,65618797,0,0x0,8
tick,0x7fff4326feb4,65633529,0,0x0,8
tick,0x7fff4326feb4,65649506,0,0x0,8
tick,0x7fff4326feb4,65665366,0,0x0,8
tick,0x7fff4326feb4,65680599,0,0x0,8
tick,0x7fff4326feb4,65696584,0,0x0,8
tick,0x7fff4326feb4,65712092,0,0x0,8
tick,0x7fff4326feb4,65727108,0,0x0,8
tick,0x7fff4326feb4,65743097,0,0x0,8
tick,0x7fff4326feb4,65759430,0,0x0,8
tick,0x7fff4326feb4,65775252,0,0x0,8
tick,0x7fff4326feb4,65790574,0,0x0,8
tick,0x7fff4326feb4,65806527,0,0x0,8
tick,0x7fff4326feb4,65822041,0,0x0,8
tick,0x7fff4326feb4,65837819,0,0x0,8
tick,0x7fff4326feb4,65853865,0,0x0,8
tick,0x7fff4326feb4,65869250,0,0x0,8
tick,0x7fff4326feb4,65884830,0,0x0,8
tick,0x7fff4326feb4,65900406,0,0x0,8
tick,0x7fff4326feb4,65915765,0,0x0,8
tick,0x7fff4326feb4,65931367,0,0x0,8
tick,0x7fff4326feb4,65946745,0,0x0,8
tick,0x7fff4326feb4,65962326,0,0x0,8
tick,0x7fff4326feb4,65977754,0,0x0,8
tick,0x7fff4326feb4,65993520,0,0x0,8
tick,0x7fff4326feb4,66009553,0,0x0,8
tick,0x7fff4326feb4,66025124,0,0x0,8
tick,0x7fff4326feb4,66040331,0,0x0,8
tick,0x7fff4326feb4,66056378,0,0x0,8
tick,0x7fff4326feb4,66071863,0,0x0,8
tick,0x7fff4326feb4,66086756,0,0x0,8
tick,0x7fff4326feb4,66102089,0,0x0,8
tick,0x7fff4326feb4,66117284,0,0x0,8
tick,0x7fff4326feb4,66132553,0,0x0,8
tick,0x7fff4326feb4,66148156,0,0x0,8
tick,0x7fff4326feb4,66164163,0,0x0,8
tick,0x7fff4326feb4,66179207,0,0x0,8
tick,0x7fff4326feb4,66195131,0,0x0,8
tick,0x7fff4326feb4,66211128,0,0x0,8
tick,0x7fff4326feb4,66227003,0,0x0,8
tick,0x7fff4326feb4,66242834,0,0x0,8
tick,0x7fff4326feb4,66258863,0,0x0,8
tick,0x7fff4326feb4,66274068,0,0x0,8
tick,0x7fff4326feb4,66290042,0,0x0,8
tick,0x7fff4326feb4,66305654,0,0x0,8
tick,0x7fff4326feb4,66321066,0,0x0,8
tick,0x7fff4326feb4,66337048,0,0x0,8
tick,0x7fff4326feb4,66352635,0,0x0,8
tick,0x7fff4326feb4,66368627,0,0x0,8
tick,0x7fff4326feb4,66385175,0,0x0,8
tick,0x7fff4326feb4,66400402,0,0x0,8
tick,0x7fff4326feb4,66416038,0,0x0,8
tick,0x7fff4326feb4,66432185,0,0x0,8
tick,0x7fff4326feb4,66447315,0,0x0,8
tick,0x7fff4326feb4,66462894,0,0x0,8
tick,0x7fff4326feb4,66478770,0,0x0,8
tick,0x7fff4326feb4,66494382,0,0x0,8
tick,0x7fff4326feb4,66510133,0,0x0,8
tick,0x7fff4326feb4,66525158,0,0x0,8
tick,0x7fff4326feb4,66540383,0,0x0,8
tick,0x7fff4326feb4,66555824,0,0x0,8
tick,0x7fff4326feb4,66571876,0,0x0,8
tick,0x7fff4326feb4,66587488,0,0x0,8
tick,0x7fff4326feb4,66603816,0,0x0,8
tick,0x7fff4326feb4,66619141,0,0x0,8
tick,0x7fff4326feb4,66634840,0,0x0,8
tick,0x7fff4326feb4,66650125,0,0x0,8
tick,0x7fff4326feb4,66665606,0,0x0,8
tick,0x7fff4326feb4,66681614,0,0x0,8
tick,0x7fff4326feb4,66698044,0,0x0,8
tick,0x7fff4326feb4,66713669,0,0x0,8
tick,0x7fff4326feb4,66729753,0,0x0,8
tick,0x7fff4326feb4,66745274,0,0x0,8
tick,0x7fff4326feb4,66761584,0,0x0,8
tick,0x7fff4326feb4,66776643,0,0x0,8
tick,0x7fff4326feb4,66792586,0,0x0,8
tick,0x7fff4326feb4,66808055,0,0x0,8
tick,0x7fff4326feb4,66824313,0,0x0,8
tick,0x7fff4326feb4,66839625,0,0x0,8
tick,0x7fff4326feb4,66855702,0,0x0,8
tick,0x7fff4326feb4,66871543,0,0x0,8
tick,0x7fff4326feb4,66886866,0,0x0,8
tick,0x7fff4326feb4,66902480,0,0x0,8
tick,0x7fff4326feb4,66918451,0,0x0,8
tick,0x7fff4326feb4,66933086,0,0x0,8
tick,0x7fff4326feb4,66948711,0,0x0,8
tick,0x7fff4326feb4,66964725,0,0x0,8
tick,0x7fff4326feb4,66980117,0,0x0,8
tick,0x7fff4326feb4,66995369,0,0x0,8
tick,0x7fff4326feb4,67011703,0,0x0,8
tick,0x7fff4326feb4,67027126,0,0x0,8
tick,0x7fff4326feb4,67043386,0,0x0,8
tick,0x7fff4326feb4,67059040,0,0x0,8
tick,0x7fff4326feb4,67074798,0,0x0,8
tick,0x7fff4326feb4,67090640,0,0x0,8
tick,0x7fff4326feb4,67105701,0,0x0,8
tick,0x7fff4326feb4,67120942,0,0x0,8
tick,0x7fff4326feb4,67136138,0,0x0,8
tick,0x7fff4326feb4,67151671,0,0x0,8
tick,0x7fff4326feb4,67166978,0,0x0,8
tick,0x7fff4326feb4,67182142,0,0x0,8
tick,0x7fff4326feb4,67197384,0,0x0,8
tick,0x7fff4326feb4,67212685,0,0x0,8
tick,0x7fff4326feb4,67228822,0,0x0,8
tick,0x7fff4326feb4,67244046,0,0x0,8
tick,0x7fff4326feb4,67259502,0,0x0,8
tick,0x7fff4326feb4,67275466,0,0x0,8
tick,0x7fff4326feb4,67291077,0,0x0,8
tick,0x7fff4326feb4,67307452,0,0x0,8
tick,0x7fff4326feb4,67323396,0,0x0,8
tick,0x7fff4326feb4,67339462,0,0x0,8
tick,0x7fff4326feb4,67355071,0,0x0,8
tick,0x7fff4326feb4,67371239,0,0x0,8
tick,0x7fff4326feb4,67386468,0,0x0,8
tick,0x7fff4326feb4,67402423,0,0x0,8
tick,0x7fff4326feb4,67418227,0,0x0,8
tick,0x7fff4326feb4,67433285,0,0x0,8
tick,0x7fff4326feb4,67448217,0,0x0,8
tick,0x7fff4326feb4,67463830,0,0x0,8
tick,0x7fff4326feb4,67479370,0,0x0,8
tick,0x7fff4326feb4,67495109,0,0x0,8
tick,0x7fff4326feb4,67510341,0,0x0,8
tick,0x7fff4326feb4,67525405,0,0x0,8
tick,0x7fff4326feb4,67540446,0,0x0,8
tick,0x7fff4326feb4,67555649,0,0x0,8
tick,0x7fff4326feb4,67571662,0,0x0,8
tick,0x7fff4326feb4,67587353,0,0x0,8
tick,0x7fff4326feb4,67603060,0,0x0,8
tick,0x7fff4326feb4,67619355,0,0x0,8
tick,0x7fff4326feb4,67635229,0,0x0,8
tick,0x7fff4326feb4,67650273,0,0x0,8
tick,0x7fff4326feb4,67665950,0,0x0,8
tick,0x7fff4326feb4,67682357,0,0x0,8
tick,0x7fff4326feb4,67697566,0,0x0,8
tick,0x7fff4326feb4,67713170,0,0x0,8
tick,0x7fff4326feb4,67728786,0,0x0,8
tick,0x7fff4326feb4,67744581,0,0x0,8
tick,0x7fff4326feb4,67759871,0,0x0,8
tick,0x7fff4326feb4,67775071,0,0x0,8
tick,0x7fff4326feb4,67790556,0,0x0,8
tick,0x7fff4326feb4,67805997,0,0x0,8
tick,0x7fff4326feb4,67821557,0,0x0,8
tick,0x7fff4326feb4,67837550,0,0x0,8
tick,0x7fff4326feb4,67853545,0,0x0,8
tick,0x7fff4326feb4,67869560,0,0x0,8
tick,0x7fff4326feb4,67885548,0,0x0,8
tick,0x7fff4326feb4,67901571,0,0x0,8
tick,0x7fff4326feb4,67917657,0,0x0,8
tick,0x7fff4326feb4,67933557,0,0x0,8
tick,0x7fff4326feb4,67948668,0,0x0,8
tick,0x7fff4326feb4,67964562,0,0x0,8
tick,0x7fff4326feb4,67980012,0,0x0,8
tick,0x7fff4326feb4,67995229,0,0x0,8
tick,0x7fff4326feb4,68010500,0,0x0,8
tick,0x7fff4326feb4,68025826,0,0x0,8
tick,0x7fff4326feb4,68041529,0,0x0,8
tick,0x7fff4326feb4,68056950,0,0x0,8
tick,0x7fff4326feb4,68072582,0,0x0,8
tick,0x7fff4326feb4,68087969,0,0x0,8
tick,0x7fff4326feb4,68103810,0,0x0,8
tick,0x7fff4326feb4,68119130,0,0x0,8
tick,0x7fff4326feb4,68135127,0,0x0,8
tick,0x7fff4326feb4,68151116,0,0x0,8
tick,0x7fff4326feb4,68166663,0,0x0,8
tick,0x7fff4326feb4,68182178,0,0x0,8
tick,0x7fff4326feb4,68197514,0,0x0,8
tick,0x7fff4326feb4,68213390,0,0x0,8
tick,0x7fff4326feb4,68228837,0,0x0,8
tick,0x7fff4326feb4,68244889,0,0x0,8
tick,0x7fff4326feb4,68260446,0,0x0,8
tick,0x7fff4326feb4,68276453,0,0x0,8
tick,0x7fff4326feb4,68292817,0,0x0,8
tick,0x7fff4326feb4,68308843,0,0x0,8
tick,0x7fff4326feb4,68324087,0,0x0,8
tick,0x7fff4326feb4,68340089,0,0x0,8
tick,0x7fff4326feb4,68355713,0,0x0,8
tick,0x7fff4326feb4,68371635,0,0x0,8
tick,0x7fff4326feb4,68386912,0,0x0,8
tick,0x7fff4326feb4,68402703,0,0x0,8
tick,0x7fff4326feb4,68417445,0,0x0,8
tick,0x7fff4326feb4,68433561,0,0x0,8
tick,0x7fff4326feb4,68449464,0,0x0,8
tick,0x7fff4326feb4,68465455,0,0x0,8
tick,0x7fff4326feb4,68480658,0,0x0,8
tick,0x7fff4326feb4,68496210,0,0x0,8
tick,0x7fff4326feb4,68512256,0,0x0,8
tick,0x7fff4326feb4,68527645,0,0x0,8
tick,0x7fff4326feb4,68542842,0,0x0,8
tick,0x7fff4326feb4,68558888,0,0x0,8
tick,0x7fff4326feb4,68574233,0,0x0,8
tick,0x7fff4326feb4,68589126,0,0x0,8
tick,0x7fff4326feb4,68604543,0,0x0,8
tick,0x7fff4326feb4,68619538,0,0x0,8
tick,0x7fff4326feb4,68635561,0,0x0,8
tick,0x7fff4326feb4,68651169,0,0x0,8
tick,0x7fff4326feb4,68666959,0,0x0,8
tick,0x7fff4326feb4,68682103,0,0x0,8
tick,0x7fff4326feb4,68697394,0,0x0,8
tick,0x7fff4326feb4,68713112,0,0x0,8
tick,0x7fff4326feb4,68728731,0,0x0,8
tick,0x7fff4326feb4,68744396,0,0x0,8
tick,0x7fff4326feb4,68760680,0,0x0,8
tick,0x7fff4326feb4,68775769,0,0x0,8
tick,0x7fff4326feb4,68791518,0,0x0,8
tick,0x7fff4326feb4,68807132,0,0x0,8
tick,0x7fff4326feb4,68822871,0,0x0,8
tick,0x7fff4326feb4,68838645,0,0x0,8
tick,0x7fff4326feb4,68854166,0,0x0,8
tick,0x7fff4326feb4,68870166,0,0x0,8
tick,0x7fff4326feb4,68886414,0,0x0,8
tick,0x7fff4326feb4,68901953,0,0x0,8
tick,0x7fff4326feb4,68917957,0,0x0,8
tick,0x7fff4326feb4,68933817,0,0x0,8
tick,0x7fff4326feb4,68949932,0,0x0,8
tick,0x7fff4326feb4,68965246,0,0x0,8
tick,0x7fff4326feb4,68980425,0,0x0,8
tick,0x7fff4326feb4,68995852,0,0x0,8
tick,0x7fff4326feb4,69011408,0,0x0,8
tick,0x7fff4326feb4,69027737,0,0x0,8
tick,0x7fff4326feb4,69043119,0,0x0,8
tick,0x7fff4326feb4,69058797,0,0x0,8
tick,0x7fff4326feb4,69073966,0,0x0,8
tick,0x7fff4326feb4,69089782,0,0x0,8
tick,0x7fff4326feb4,69106112,0,0x0,8
tick,0x7fff4326feb4,69121738,0,0x0,8
tick,0x7fff4326feb4,69138130,0,0x0,8
tick,0x7fff4326feb4,69154104,0,0x0,8
tick,0x7fff4326feb4,69168798,0,0x0,8
tick,0x7fff4326feb4,69184723,0,0x0,8
tick,0x7fff4326feb4,69200332,0,0x0,8
tick,0x7fff4326feb4,69216338,0,0x0,8
tick,0x7fff4326feb4,69232241,0,0x0,8
tick,0x7fff4326feb4,69247399,0,0x0,8
tick,0x7fff4326feb4,69263098,0,0x0,8
tick,0x7fff4326feb4,69278401,0,0x0,8
tick,0x7fff4326feb4,69294369,0,0x0,8
tick,0x7fff4326feb4,69310116,0,0x0,8
tick,0x7fff4326feb4,69326389,0,0x0,8
tick,0x7fff4326feb4,69342107,0,0x0,8
tick,0x7fff4326feb4,69358457,0,0x0,8
tick,0x7fff4326feb4,69373751,0,0x0,8
tick,0x7fff4326feb4,69389729,0,0x0,8
tick,0x7fff4326feb4,69405138,0,0x0,8
tick,0x7fff4326feb4,69420724,0,0x0,8
tick,0x7fff4326feb4,69436147,0,0x0,8
tick,0x7fff4326feb4,69451858,0,0x0,8
tick,0x7fff4326feb4,69467864,0,0x0,8
tick,0x7fff4326feb4,69483879,0,0x0,8
tick,0x7fff4326feb4,69499227,0,0x0,8
tick,0x7fff4326feb4,69514628,0,0x0,8
tick,0x7fff4326feb4,69530244,0,0x0,8
tick,0x7fff4326feb4,69545841,0,0x0,8
tick,0x7fff4326feb4,69561279,0,0x0,8
tick,0x7fff4326feb4,69576883,0,0x0,8
tick,0x7fff4326feb4,69592202,0,0x0,8
tick,0x7fff4326feb4,69607863,0,0x0,8
tick,0x7fff4326feb4,69623880,0,0x0,8
tick,0x7fff4326feb4,69639510,0,0x0,8
tick,0x7fff4326feb4,69655249,0,0x0,8
tick,0x7fff4326feb4,69670816,0,0x0,8
tick,0x7fff4326feb4,69685967,0,0x0,8
tick,0x7fff4326feb4,69701973,0,0x0,8
tick,0x7fff4326feb4,69716674,0,0x0,8
tick,0x7fff4326feb4,69732011,0,0x0,8
tick,0x7fff4326feb4,69747969,0,0x0,8
tick,0x7fff4326feb4,69763888,0,0x0,8
tick,0x7fff4326feb4,69779238,0,0x0,8
tick,0x7fff4326feb4,69794910,0,0x0,8
tick,0x7fff4326feb4,69810584,0,0x0,8
tick,0x7fff4326feb4,69826248,0,0x0,8
tick,0x7fff4326feb4,69841637,0,0x0,8
tick,0x7fff4326feb4,69857895,0,0x0,8
tick,0x7fff4326feb4,69873308,0,0x0,8
tick,0x7fff4326feb4,69889132,0,0x0,8
tick,0x7fff4326feb4,69905147,0,0x0,8
tick,0x7fff4326feb4,69920890,0,0x0,8
tick,0x7fff4326feb4,69935828,0,0x0,8
tick,0x7fff4326feb4,69951557,0,0x0,8
tick,0x7fff4326feb4,69966575,0,0x0,8
tick,0x7fff4326feb4,69981763,0,0x0,8
tick,0x7fff4326feb4,69997570,0,0x0,8
tick,0x7fff4326feb4,70012566,0,0x0,8
tick,0x7fff4326feb4,70027773,0,0x0,8
tick,0x7fff4326feb4,70042993,0,0x0,8
tick,0x7fff4326feb4,70059008,0,0x0,8
tick,0x7fff4326feb4,70074370,0,0x0,8
tick,0x7fff4326feb4,70090063,0,0x0,8
tick,0x7fff4326feb4,70105215,0,0x0,8
tick,0x7fff4326feb4,70121078,0,0x0,8
tick,0x7fff4326feb4,70137090,0,0x0,8
tick,0x7fff4326feb4,70153075,0,0x0,8
tick,0x7fff4326feb4,70168767,0,0x0,8
tick,0x7fff4326feb4,70184155,0,0x0,8
tick,0x7fff4326feb4,70200175,0,0x0,8
tick,0x7fff4326feb4,70215655,0,0x0,8
tick,0x7fff4326feb4,70231238,0,0x0,8
tick,0x7fff4326feb4,70246771,0,0x0,8
tick,0x7fff4326feb4,70262310,0,0x0,8
tick,0x7fff4326feb4,70277856,0,0x0,8
tick,0x7fff4326feb4,70293173,0,0x0,8
tick,0x7fff4326feb4,70308646,0,0x0,8
tick,0x7fff4326feb4,70323926,0,0x0,8
tick,0x7fff4326feb4,70339167,0,0x0,8
tick,0x7fff4326feb4,70354894,0,0x0,8
tick,0x7fff4326feb4,70370355,0,0x0,8
tick,0x7fff4326feb4,70385193,0,0x0,8
tick,0x7fff4326feb4,70401182,0,0x0,8
tick,0x7fff4326feb4,70416731,0,0x0,8
tick,0x7fff4326feb4,70432527,0,0x0,8
tick,0x7fff4326feb4,70448043,0,0x0,8
tick,0x7fff4326feb4,70464316,0,0x0,8
tick,0x7fff4326feb4,70480365,0,0x0,8
tick,0x7fff4326feb4,70495485,0,0x0,8
tick,0x7fff4326feb4,70511050,0,0x0,8
tick,0x7fff4326feb4,70526481,0,0x0,8
tick,0x7fff4326feb4,70542180,0,0x0,8
tick,0x7fff4326feb4,70558169,0,0x0,8
tick,0x7fff4326feb4,70573603,0,0x0,8
tick,0x7fff4326feb4,70589793,0,0x0,8
tick,0x7fff4326feb4,70605412,0,0x0,8
tick,0x7fff4326feb4,70620819,0,0x0,8
tick,0x7fff4326feb4,70636260,0,0x0,8
tick,0x7fff4326feb4,70652287,0,0x0,8
tick,0x7fff4326feb4,70668582,0,0x0,8
tick,0x7fff4326feb4,70684287,0,0x0,8
tick,0x7fff4326feb4,70700289,0,0x0,8
tick,0x7fff4326feb4,70716048,0,0x0,8
tick,0x7fff4326feb4,70731469,0,0x0,8
tick,0x7fff4326feb4,70746851,0,0x0,8
tick,0x7fff4326feb4,70762351,0,0x0,8
tick,0x7fff4326feb4,70778565,0,0x0,8
tick,0x7fff4326feb4,70794094,0,0x0,8
tick,0x7fff4326feb4,70809590,0,0x0,8
tick,0x7fff4326feb4,70824908,0,0x0,8
tick,0x7fff4326feb4,70840632,0,0x0,8
tick,0x7fff4326feb4,70856379,0,0x0,8
tick,0x7fff4326feb4,70872063,0,0x0,8
tick,0x7fff4326feb4,70887866,0,0x0,8
tick,0x7fff4326feb4,70903499,0,0x0,8
tick,0x7fff4326feb4,70919492,0,0x0,8
tick,0x7fff4326feb4,70935801,0,0x0,8
tick,0x7fff4326feb4,70950789,0,0x0,8
tick,0x7fff4326feb4,70966195,0,0x0,8
tick,0x7fff4326feb4,70982004,0,0x0,8
tick,0x7fff4326feb4,70997630,0,0x0,8
tick,0x7fff4326feb4,71012741,0,0x0,8
tick,0x7fff4326feb4,71028644,0,0x0,8
tick,0x7fff4326feb4,71043829,0,0x0,8
tick,0x7fff4326feb4,71059043,0,0x0,8
tick,0x7fff4326feb4,71075319,0,0x0,8
tick,0x7fff4326feb4,71090909,0,0x0,8
tick,0x7fff4326feb4,71106769,0,0x0,8
tick,0x7fff4326feb4,71122078,0,0x0,8
tick,0x7fff4326feb4,71138067,0,0x0,8
tick,0x7fff4326feb4,71154065,0,0x0,8
tick,0x7fff4326feb4,71169763,0,0x0,8
tick,0x7fff4326feb4,71186205,0,0x0,8
tick,0x7fff4326feb4,71201686,0,0x0,8
tick,0x7fff4326feb4,71216691,0,0x0,8
tick,0x7fff4326feb4,71232504,0,0x0,8
tick,0x7fff4326feb4,71248203,0,0x0,8
tick,0x7fff4326feb4,71263723,0,0x0,8
tick,0x7fff4326feb4,71279223,0,0x0,8
tick,0x7fff4326feb4,71294704,0,0x0,8
tick,0x7fff4326feb4,71310606,0,0x0,8
tick,0x7fff4326feb4,71326561,0,0x0,8
tick,0x7fff4326feb4,71342465,0,0x0,8
tick,0x7fff4326feb4,71357652,0,0x0,8
tick,0x7fff4326feb4,71374046,0,0x0,8
tick,0x7fff4326feb4,71390476,0,0x0,8
tick,0x7fff4326feb4,71406003,0,0x0,8
tick,0x7fff4326feb4,71422075,0,0x0,8
tick,0x7fff4326feb4,71437525,0,0x0,8
tick,0x7fff4326feb4,71452797,0,0x0,8
tick,0x7fff4326feb4,71467845,0,0x0,8
tick,0x7fff4326feb4,71483378,0,0x0,8
tick,0x7fff4326feb4,71498977,0,0x0,8
tick,0x7fff4326feb4,71514263,0,0x0,8
tick,0x7fff4326feb4,71529890,0,0x0,8
tick,0x7fff4326feb4,71545701,0,0x0,8
tick,0x7fff4326feb4,71561219,0,0x0,8
tick,0x7fff4326feb4,71576335,0,0x0,8
tick,0x7fff4326feb4,71592303,0,0x0,8
tick,0x7fff4326feb4,71607860,0,0x0,8
tick,0x7fff4326feb4,71623299,0,0x0,8
tick,0x7fff4326feb4,71639013,0,0x0,8
tick,0x7fff4326feb4,71654574,0,0x0,8
tick,0x7fff4326feb4,71670612,0,0x0,8
tick,0x7fff4326feb4,71686342,0,0x0,8
tick,0x7fff4326feb4,71702016,0,0x0,8
tick,0x7fff4326feb4,71717850,0,0x0,8
tick,0x7fff4326feb4,71733074,0,0x0,8
tick,0x7fff4326feb4,71748766,0,0x0,8
tick,0x7fff4326feb4,71764220,0,0x0,8
tick,0x7fff4326feb4,71779743,0,0x0,8
tick,0x7fff4326feb4,71795739,0,0x0,8
tick,0x7fff4326feb4,71811377,0,0x0,8
tick,0x7fff4326feb4,71826974,0,0x0,8
tick,0x7fff4326feb4,71842538,0,0x0,8
tick,0x7fff4326feb4,71858446,0,0x0,8
tick,0x7fff4326feb4,71874048,0,0x0,8
tick,0x7fff4326feb4,71889771,0,0x0,8
tick,0x7fff4326feb4,71905327,0,0x0,8
tick,0x7fff4326feb4,71920831,0,0x0,8
tick,0x7fff4326feb4,71936130,0,0x0,8
tick,0x7fff4326feb4,71951629,0,0x0,8
tick,0x7fff4326feb4,71967468,0,0x0,8
tick,0x7fff4326feb4,71983742,0,0x0,8
tick,0x7fff4326feb4,71999295,0,0x0,8
tick,0x7fff4326feb4,72014727,0,0x0,8
tick,0x7fff4326feb4,72029978,0,0x0,8
tick,0x7fff4326feb4,72046285,0,0x0,8
tick,0x7fff4326feb4,72061824,0,0x0,8
tick,0x7fff4326feb4,72077928,0,0x0,8
tick,0x7fff4326feb4,72093342,0,0x0,8
tick,0x7fff4326feb4,72108814,0,0x0,8
tick,0x7fff4326feb4,72124432,0,0x0,8
tick,0x7fff4326feb4,72139513,0,0x0,8
tick,0x7fff4326feb4,72155802,0,0x0,8
tick,0x7fff4326feb4,72171754,0,0x0,8
tick,0x7fff4326feb4,72187535,0,0x0,8
tick,0x7fff4326feb4,72202834,0,0x0,8
tick,0x7fff4326feb4,72218277,0,0x0,8
tick,0x7fff4326feb4,72233857,0,0x0,8
tick,0x7fff4326feb4,72250242,0,0x0,8
tick,0x7fff4326feb4,72266455,0,0x0,8
tick,0x7fff4326feb4,72281888,0,0x0,8
tick,0x7fff4326feb4,72297328,0,0x0,8
tick,0x7fff4326feb4,72312765,0,0x0,8
tick,0x7fff4326feb4,72328330,0,0x0,8
tick,0x7fff4326feb4,72343478,0,0x0,8
tick,0x7fff4326feb4,72359595,0,0x0,8
tick,0x7fff4326feb4,72375855,0,0x0,8
tick,0x7fff4326feb4,72391296,0,0x0,8
tick,0x7fff4326feb4,72406830,0,0x0,8
tick,0x7fff4326feb4,72421983,0,0x0,8
tick,0x7fff4326feb4,72437393,0,0x0,8
tick,0x7fff4326feb4,72452758,0,0x0,8
tick,0x7fff4326feb4,72468808,0,0x0,8
tick,0x7fff4326feb4,72484512,0,0x0,8
tick,0x7fff4326feb4,72500165,0,0x0,8
tick,0x7fff4326feb4,72515851,0,0x0,8
tick,0x7fff4326feb4,72531254,0,0x0,8
tick,0x7fff4326feb4,72546409,0,0x0,8
tick,0x7fff4326feb4,72561849,0,0x0,8
tick,0x7fff4326feb4,72578022,0,0x0,8
tick,0x7fff4326feb4,72594043,0,0x0,8
tick,0x7fff4326feb4,72609048,0,0x0,8
tick,0x7fff4326feb4,72624532,0,0x0,8
tick,0x7fff4326feb4,72640557,0,0x0,8
tick,0x7fff4326feb4,72656582,0,0x0,8
tick,0x7fff4326feb4,72671835,0,0x0,8
tick,0x7fff4326feb4,72687945,0,0x0,8
tick,0x7fff4326feb4,72703282,0,0x0,8
tick,0x7fff4326feb4,72719048,0,0x0,8
tick,0x7fff4326feb4,72734929,0,0x0,8
tick,0x7fff4326feb4,72750807,0,0x0,8
tick,0x7fff4326feb4,72766778,0,0x0,8
tick,0x7fff4326feb4,72781978,0,0x0,8
tick,0x7fff4326feb4,72797783,0,0x0,8
tick,0x7fff4326feb4,72813792,0,0x0,8
tick,0x7fff4326feb4,72829820,0,0x0,8
tick,0x7fff4326feb4,72845315,0,0x0,8
tick,0x7fff4326feb4,72861001,0,0x0,8
tick,0x7fff4326feb4,72876780,0,0x0,8
tick,0x7fff4326feb4,72892633,0,0x0,8
tick,0x7fff4326feb4,72908265,0,0x0,8
tick,0x7fff4326feb4,72924265,0,0x0,8
tick,0x7fff4326feb4,72940260,0,0x0,8
tick,0x7fff4326feb4,72955820,0,0x0,8
tick,0x7fff4326feb4,72971567,0,0x0,8
tick,0x7fff4326feb4,72986618,0,0x0,8
tick,0x7fff4326feb4,73002279,0,0x0,8
tick,0x7fff4326feb4,73017988,0,0x0,8
tick,0x7fff4326feb4,73033496,0,0x0,8
tick,0x7fff4326feb4,73048640,0,0x0,8
tick,0x7fff4326feb4,73064089,0,0x0,8
tick,0x7fff4326feb4,73079676,0,0x0,8
tick,0x7fff4326feb4,73095339,0,0x0,8
tick,0x7fff4326feb4,73111039,0,0x0,8
tick,0x7fff4326feb4,73126653,0,0x0,8
tick,0x7fff4326feb4,73142795,0,0x0,8
tick,0x7fff4326feb4,73158647,0,0x0,8
tick,0x7fff4326feb4,73174901,0,0x0,8
tick,0x7fff4326feb4,73190574,0,0x0,8
tick,0x7fff4326feb4,73206140,0,0x0,8
tick,0x7fff4326feb4,73221366,0,0x0,8
tick,0x7fff4326feb4,73237284,0,0x0,8
tick,0x7fff4326feb4,73252747,0,0x0,8
tick,0x7fff4326feb4,73268583,0,0x0,8
tick,0x7fff4326feb4,73284039,0,0x0,8
tick,0x7fff4326feb4,73299403,0,0x0,8
tick,0x7fff4326feb4,73315031,0,0x0,8
tick,0x7fff4326feb4,73331041,0,0x0,8
tick,0x7fff4326feb4,73347018,0,0x0,8
tick,0x7fff4326feb4,73363029,0,0x0,8
tick,0x7fff4326feb4,73378792,0,0x0,8
tick,0x7fff4326feb4,73394843,0,0x0,8
tick,0x7fff4326feb4,73410715,0,0x0,8
tick,0x7fff4326feb4,73426032,0,0x0,8
tick,0x7fff4326feb4,73441384,0,0x0,8
tick,0x7fff4326feb4,73457482,0,0x0,8
tick,0x7fff4326feb4,73472282,0,0x0,8
tick,0x7fff4326feb4,73487614,0,0x0,8
tick,0x7fff4326feb4,73503184,0,0x0,8
tick,0x7fff4326feb4,73519466,0,0x0,8
tick,0x7fff4326feb4,73535746,0,0x0,8
tick,0x7fff4326feb4,73551676,0,0x0,8
tick,0x7fff4326feb4,73567588,0,0x0,8
tick,0x7fff4326feb4,73583483,0,0x0,8
tick,0x7fff4326feb4,73598528,0,0x0,8
tick,0x7fff4326feb4,73614086,0,0x0,8
tick,0x7fff4326feb4,73629540,0,0x0,8
tick,0x7fff4326feb4,73645107,0,0x0,8
tick,0x7fff4326feb4,73660717,0,0x0,8
tick,0x7fff4326feb4,73675866,0,0x0,8
tick,0x7fff4326feb4,73691931,0,0x0,8
tick,0x7fff4326feb4,73706920,0,0x0,8
tick,0x7fff4326feb4,73722317,0,0x0,8
tick,0x7fff4326feb4,73737970,0,0x0,8
tick,0x7fff4326feb4,73754253,0,0x0,8
tick,0x7fff4326feb4,73769311,0,0x0,8
tick,0x7fff4326feb4,73785121,0,0x0,8
tick,0x7fff4326feb4,73799903,0,0x0,8
tick,0x7fff4326feb4,73815411,0,0x0,8
tick,0x7fff4326feb4,73831073,0,0x0,8
tick,0x7fff4326feb4,73846818,0,0x0,8
tick,0x7fff4326feb4,73862775,0,0x0,8
tick,0x7fff4326feb4,73878603,0,0x0,8
tick,0x7fff4326feb4,73894756,0,0x0,8
tick,0x7fff4326feb4,73909802,0,0x0,8
tick,0x7fff4326feb4,73926149,0,0x0,8
tick,0x7fff4326feb4,73941753,0,0x0,8
tick,0x7fff4326feb4,73957430,0,0x0,8
tick,0x7fff4326feb4,73972842,0,0x0,8
tick,0x7fff4326feb4,73989118,0,0x0,8
tick,0x7fff4326feb4,74004486,0,0x0,8
tick,0x7fff4326feb4,74019844,0,0x0,8
tick,0x7fff4326feb4,74036217,0,0x0,8
tick,0x7fff4326feb4,74051461,0,0x0,8
tick,0x7fff4326feb4,74066908,0,0x0,8
tick,0x7fff4326feb4,74082164,0,0x0,8
tick,0x7fff4326feb4,74097683,0,0x0,8
tick,0x7fff4326feb4,74113149,0,0x0,8
tick,0x7fff4326feb4,74128466,0,0x0,8
tick,0x7fff4326feb4,74144391,0,0x0,8
tick,0x7fff4326feb4,74160655,0,0x0,8
tick,0x7fff4326feb4,74175714,0,0x0,8
tick,0x7fff4326feb4,74191700,0,0x0,8
tick,0x7fff4326feb4,74207736,0,0x0,8
tick,0x7fff4326feb4,74223099,0,0x0,8
tick,0x7fff4326feb4,74238429,0,0x0,8
tick,0x7fff4326feb4,74253849,0,0x0,8
tick,0x7fff4326feb4,74269325,0,0x0,8
tick,0x7fff4326feb4,74285562,0,0x0,8
tick,0x7fff4326feb4,74301485,0,0x0,8
tick,0x7fff4326feb4,74316320,0,0x0,8
tick,0x7fff4326feb4,74331801,0,0x0,8
tick,0x7fff4326feb4,74347109,0,0x0,8
tick,0x7fff4326feb4,74363165,0,0x0,8
tick,0x7fff4326feb4,74378978,0,0x0,8
tick,0x7fff4326feb4,74394732,0,0x0,8
tick,0x7fff4326feb4,74410543,0,0x0,8
tick,0x7fff4326feb4,74425817,0,0x0,8
tick,0x7fff4326feb4,74441436,0,0x0,8
tick,0x7fff4326feb4,74456854,0,0x0,8
tick,0x7fff4326feb4,74472074,0,0x0,8
tick,0x7fff4326feb4,74487798,0,0x0,8
tick,0x7fff4326feb4,74503467,0,0x0,8
tick,0x7fff4326feb4,74518759,0,0x0,8
tick,0x7fff4326feb4,74534776,0,0x0,8
tick,0x7fff4326feb4,74550325,0,0x0,8
tick,0x7fff4326feb4,74565860,0,0x0,8
tick,0x7fff4326feb4,74580946,0,0x0,8
tick,0x7fff4326feb4,74596403,0,0x0,8
tick,0x7fff4326feb4,74611984,0,0x0,8
tick,0x7fff4326feb4,74627132,0,0x0,8
tick,0x7fff4326feb4,74642576,0,0x0,8
tick,0x7fff4326feb4,74658176,0,0x0,8
tick,0x7fff4326feb4,74673075,0,0x0,8
tick,0x7fff4326feb4,74689269,0,0x0,8
tick,0x7fff4326feb4,74704630,0,0x0,8
tick,0x7fff4326feb4,74720076,0,0x0,8
tick,0x7fff4326feb4,74735615,0,0x0,8
tick,0x7fff4326feb4,74750721,0,0x0,8
tick,0x7fff4326feb4,74766241,0,0x0,8
tick,0x7fff4326feb4,74781517,0,0x0,8
tick,0x7fff4326feb4,74797637,0,0x0,8
tick,0x7fff4326feb4,74813386,0,0x0,8
tick,0x7fff4326feb4,74828725,0,0x0,8
tick,0x7fff4326feb4,74844174,0,0x0,8
tick,0x7fff4326feb4,74859763,0,0x0,8
tick,0x7fff4326feb4,74874781,0,0x0,8
tick,0x7fff4326feb4,74890615,0,0x0,8
tick,0x7fff4326feb4,74905812,0,0x0,8
tick,0x7fff4326feb4,74920895,0,0x0,8
tick,0x7fff4326feb4,74936860,0,0x0,8
tick,0x7fff4326feb4,74952971,0,0x0,8
tick,0x7fff4326feb4,74968888,0,0x0,8
tick,0x7fff4326feb4,74983864,0,0x0,8
tick,0x7fff4326feb4,74999107,0,0x0,8
tick,0x7fff4326feb4,75014824,0,0x0,8
tick,0x7fff4326feb4,75030723,0,0x0,8
tick,0x7fff4326feb4,75046350,0,0x0,8
tick,0x7fff4326feb4,75061998,0,0x0,8
tick,0x7fff4326feb4,75077671,0,0x0,8
tick,0x7fff4326feb4,75093142,0,0x0,8
tick,0x7fff4326feb4,75107870,0,0x0,8
tick,0x7fff4326feb4,75123343,0,0x0,8
tick,0x7fff4326feb4,75139418,0,0x0,8
tick,0x7fff4326feb4,75155804,0,0x0,8
tick,0x7fff4326feb4,75170366,0,0x0,8
tick,0x7fff4326feb4,75185845,0,0x0,8
tick,0x7fff4326feb4,75201438,0,0x0,8
tick,0x7fff4326feb4,75217549,0,0x0,8
tick,0x7fff4326feb4,75232772,0,0x0,8
tick,0x7fff4326feb4,75248125,0,0x0,8
tick,0x7fff4326feb4,75263482,0,0x0,8
tick,0x7fff4326feb4,75278950,0,0x0,8
tick,0x7fff4326feb4,75294478,0,0x0,8
tick,0x7fff4326feb4,75309809,0,0x0,8
tick,0x7fff4326feb4,75325606,0,0x0,8
tick,0x7fff4326feb4,75341225,0,0x0,8
tick,0x7fff4326feb4,75356367,0,0x0,8
tick,0x7fff4326feb4,75371650,0,0x0,8
tick,0x7fff4326feb4,75387108,0,0x0,8
tick,0x7fff4326feb4,75402556,0,0x0,8
tick,0x7fff4326feb4,75418277,0,0x0,8
tick,0x7fff4326feb4,75433837,0,0x0,8
tick,0x7fff4326feb4,75448724,0,0x0,8
tick,0x7fff4326feb4,75464740,0,0x0,8
tick,0x7fff4326feb4,75480748,0,0x0,8
tick,0x7fff4326feb4,75496768,0,0x0,8
tick,0x7fff4326feb4,75512783,0,0x0,8
tick,0x7fff4326feb4,75528801,0,0x0,8
tick,0x7fff4326feb4,75544814,0,0x0,8
tick,0x7fff4326feb4,75560860,0,0x0,8
tick,0x7fff4326feb4,75576590,0,0x0,8
tick,0x7fff4326feb4,75592655,0,0x0,8
tick,0x7fff4326feb4,75608256,0,0x0,8
tick,0x7fff4326feb4,75624281,0,0x0,8
tick,0x7fff4326feb4,75640324,0,0x0,8
tick,0x7fff4326feb4,75656331,0,0x0,8
tick,0x7fff4326feb4,75672350,0,0x0,8
tick,0x7fff4326feb4,75688421,0,0x0,8
tick,0x7fff4326feb4,75704017,0,0x0,8
tick,0x7fff4326feb4,75720210,0,0x0,8
tick,0x7fff4326feb4,75735035,0,0x0,8
tick,0x7fff4326feb4,75750941,0,0x0,8
tick,0x7fff4326feb4,75765900,0,0x0,8
tick,0x7fff4326feb4,75781638,0,0x0,8
tick,0x7fff4326feb4,75797224,0,0x0,8
tick,0x7fff4326feb4,75812877,0,0x0,8
tick,0x7fff4326feb4,75827655,0,0x0,8
tick,0x7fff4326feb4,75842583,0,0x0,8
tick,0x7fff4326feb4,75858124,0,0x0,8
tick,0x7fff4326feb4,75873417,0,0x0,8
tick,0x7fff4326feb4,75888826,0,0x0,8
tick,0x7fff4326feb4,75904065,0,0x0,8
tick,0x7fff4326feb4,75919660,0,0x0,8
tick,0x7fff4326feb4,75935036,0,0x0,8
tick,0x7fff4326feb4,75950954,0,0x0,8
tick,0x7fff4326feb4,75966998,0,0x0,8
tick,0x7fff4326feb4,75983135,0,0x0,8
tick,0x7fff4326feb4,75998618,0,0x0,8
tick,0x7fff4326feb4,76013602,0,0x0,8
tick,0x7fff4326feb4,76029228,0,0x0,8
tick,0x7fff4326feb4,76044644,0,0x0,8
tick,0x7fff4326feb4,76060154,0,0x0,8
tick,0x7fff4326feb4,76075842,0,0x0,8
tick,0x7fff4326feb4,76091186,0,0x0,8
tick,0x7fff4326feb4,76106498,0,0x0,8
tick,0x7fff4326feb4,76121805,0,0x0,8
tick,0x7fff4326feb4,76136996,0,0x0,8
tick,0x7fff4326feb4,76152976,0,0x0,8
tick,0x7fff4326feb4,76168987,0,0x0,8
tick,0x7fff4326feb4,76184055,0,0x0,8
tick,0x7fff4326feb4,76199548,0,0x0,8
tick,0x7fff4326feb4,76215878,0,0x0,8
tick,0x7fff4326feb4,76230784,0,0x0,8
tick,0x7fff4326feb4,76246096,0,0x0,8
tick,0x7fff4326feb4,76261856,0,0x0,8
tick,0x7fff4326feb4,76277053,0,0x0,8
tick,0x7fff4326feb4,76292970,0,0x0,8
tick,0x7fff4326feb4,76308396,0,0x0,8
tick,0x7fff4326feb4,76323704,0,0x0,8
tick,0x7fff4326feb4,76339403,0,0x0,8
tick,0x7fff4326feb4,76355204,0,0x0,8
tick,0x7fff4326feb4,76370506,0,0x0,8
tick,0x7fff4326feb4,76385807,0,0x0,8
tick,0x7fff4326feb4,76401709,0,0x0,8
tick,0x7fff4326feb4,76417416,0,0x0,8
tick,0x7fff4326feb4,76433080,0,0x0,8
tick,0x7fff4326feb4,76448613,0,0x0,8
tick,0x7fff4326feb4,76463922,0,0x0,8
tick,0x7fff4326feb4,76479177,0,0x0,8
tick,0x7fff4326feb4,76494546,0,0x0,8
tick,0x7fff4326feb4,76510549,0,0x0,8
tick,0x7fff4326feb4,76525910,0,0x0,8
tick,0x7fff4326feb4,76541230,0,0x0,8
tick,0x7fff4326feb4,76557285,0,0x0,8
tick,0x7fff4326feb4,76573266,0,0x0,8
tick,0x7fff4326feb4,76589103,0,0x0,8
tick,0x7fff4326feb4,76604465,0,0x0,8
tick,0x7fff4326feb4,76620668,0,0x0,8
tick,0x7fff4326feb4,76635970,0,0x0,8
tick,0x7fff4326feb4,76652145,0,0x0,8
tick,0x7fff4326feb4,76667781,0,0x0,8
tick,0x7fff4326feb4,76683895,0,0x0,8
tick,0x7fff4326feb4,76699414,0,0x0,8
tick,0x7fff4326feb4,76715024,0,0x0,8
tick,0x7fff4326feb4,76731428,0,0x0,8
tick,0x7fff4326feb4,76746559,0,0x0,8
tick,0x7fff4326feb4,76762039,0,0x0,8
tick,0x7fff4326feb4,76777792,0,0x0,8
tick,0x7fff4326feb4,76793869,0,0x0,8
tick,0x7fff4326feb4,76809417,0,0x0,8
tick,0x7fff4326feb4,76825619,0,0x0,8
tick,0x7fff4326feb4,76841595,0,0x0,8
tick,0x7fff4326feb4,76857465,0,0x0,8
tick,0x7fff4326feb4,76873467,0,0x0,8
tick,0x7fff4326feb4,76889259,0,0x0,8
tick,0x7fff4326feb4,76904870,0,0x0,8
tick,0x7fff4326feb4,76920530,0,0x0,8
tick,0x7fff4326feb4,76936129,0,0x0,8
tick,0x7fff4326feb4,76951436,0,0x0,8
tick,0x7fff4326feb4,76967041,0,0x0,8
tick,0x7fff4326feb4,76982437,0,0x0,8
tick,0x7fff4326feb4,76997716,0,0x0,8
tick,0x7fff4326feb4,77012668,0,0x0,8
tick,0x7fff4326feb4,77027927,0,0x0,8
tick,0x7fff4326feb4,77043760,0,0x0,8
tick,0x7fff4326feb4,77059036,0,0x0,8
tick,0x7fff4326feb4,77075061,0,0x0,8
tick,0x7fff4326feb4,77090425,0,0x0,8
tick,0x7fff4326feb4,77105897,0,0x0,8
tick,0x7fff4326feb4,77121633,0,0x0,8
tick,0x7fff4326feb4,77137033,0,0x0,8
tick,0x7fff4326feb4,77153054,0,0x0,8
tick,0x7fff4326feb4,77167959,0,0x0,8
tick,0x7fff4326feb4,77183959,0,0x0,8
tick,0x7fff4326feb4,77199431,0,0x0,8
tick,0x7fff4326feb4,77215417,0,0x0,8
tick,0x7fff4326feb4,77230875,0,0x0,8
tick,0x7fff4326feb4,77246590,0,0x0,8
tick,0x7fff4326feb4,77262124,0,0x0,8
tick,0x7fff4326feb4,77278299,0,0x0,8
tick,0x7fff4326feb4,77292781,0,0x0,8
tick,0x7fff4326feb4,77308694,0,0x0,8
tick,0x7fff4326feb4,77323981,0,0x0,8
tick,0x7fff4326feb4,77339600,0,0x0,8
tick,0x7fff4326feb4,77355321,0,0x0,8
tick,0x7fff4326feb4,77370792,0,0x0,8
tick,0x7fff4326feb4,77386214,0,0x0,8
tick,0x7fff4326feb4,77401837,0,0x0,8
tick,0x7fff4326feb4,77417279,0,0x0,8
tick,0x7fff4326feb4,77433246,0,0x0,8
tick,0x7fff4326feb4,77448447,0,0x0,8
tick,0x7fff4326feb4,77464544,0,0x0,8
tick,0x7fff4326feb4,77480171,0,0x0,8
tick,0x7fff4326feb4,77496442,0,0x0,8
tick,0x7fff4326feb4,77512683,0,0x0,8
tick,0x7fff4326feb4,77528710,0,0x0,8
tick,0x7fff4326feb4,77544298,0,0x0,8
tick,0x7fff4326feb4,77559448,0,0x0,8
tick,0x7fff4326feb4,77575486,0,0x0,8
tick,0x7fff4326feb4,77590811,0,0x0,8
tick,0x7fff4326feb4,77606125,0,0x0,8
tick,0x7fff4326feb4,77622069,0,0x0,8
tick,0x7fff4326feb4,77637737,0,0x0,8
tick,0x7fff4326feb4,77653641,0,0x0,8
tick,0x7fff4326feb4,77668978,0,0x0,8
tick,0x7fff4326feb4,77684502,0,0x0,8
tick,0x7fff4326feb4,77700050,0,0x0,8
tick,0x7fff4326feb4,77715618,0,0x0,8
tick,0x7fff4326feb4,77731941,0,0x0,8
tick,0x7fff4326feb4,77747617,0,0x0,8
tick,0x7fff4326feb4,77763933,0,0x0,8
tick,0x7fff4326feb4,77779021,0,0x0,8
tick,0x7fff4326feb4,77794716,0,0x0,8
tick,0x7fff4326feb4,77810466,0,0x0,8
tick,0x7fff4326feb4,77826454,0,0x0,8
tick,0x7fff4326feb4,77841762,0,0x0,8
tick,0x7fff4326feb4,77857507,0,0x0,8
tick,0x7fff4326feb4,77872954,0,0x0,8
tick,0x7fff4326feb4,77888585,0,0x0,8
tick,0x7fff4326feb4,77904470,0,0x0,8
tick,0x7fff4326feb4,77919896,0,0x0,8
tick,0x7fff4326feb4,77935501,0,0x0,8
tick,0x7fff4326feb4,77951122,0,0x0,8
tick,0x7fff4326feb4,77965922,0,0x0,8
tick,0x7fff4326feb4,77981402,0,0x0,8
tick,0x7fff4326feb4,77996626,0,0x0,8
tick,0x7fff4326feb4,78011473,0,0x0,8
tick,0x7fff4326feb4,78026965,0,0x0,8
tick,0x7fff4326feb4,78042363,0,0x0,8
tick,0x7fff4326feb4,78057648,0,0x0,8
tick,0x7fff4326feb4,78073079,0,0x0,8
tick,0x7fff4326feb4,78088811,0,0x0,8
tick,0x7fff4326feb4,78104952,0,0x0,8
tick,0x7fff4326feb4,78120957,0,0x0,8
tick,0x7fff4326feb4,78136984,0,0x0,8
tick,0x7fff4326feb4,78152669,0,0x0,8
tick,0x7fff4326feb4,78167966,0,0x0,8
tick,0x7fff4326feb4,78183633,0,0x0,8
tick,0x7fff4326feb4,78198782,0,0x0,8
tick,0x7fff4326feb4,78214499,0,0x0,8
tick,0x7fff4326feb4,78230474,0,0x0,8
tick,0x7fff4326feb4,78246062,0,0x0,8
tick,0x7fff4326feb4,78261817,0,0x0,8
tick,0x7fff4326feb4,78278223,0,0x0,8
tick,0x7fff4326feb4,78293879,0,0x0,8
tick,0x7fff4326feb4,78309189,0,0x0,8
tick,0x7fff4326feb4,78324594,0,0x0,8
tick,0x7fff4326feb4,78340503,0,0x0,8
tick,0x7fff4326feb4,78356089,0,0x0,8
tick,0x7fff4326feb4,78371830,0,0x0,8
tick,0x7fff4326feb4,78386892,0,0x0,8
tick,0x7fff4326feb4,78402977,0,0x0,8
tick,0x7fff4326feb4,78418272,0,0x0,8
tick,0x7fff4326feb4,78433812,0,0x0,8
tick,0x7fff4326feb4,78448963,0,0x0,8
tick,0x7fff4326feb4,78463786,0,0x0,8
tick,0x7fff4326feb4,78479021,0,0x0,8
tick,0x7fff4326feb4,78494160,0,0x0,8
tick,0x7fff4326feb4,78509506,0,0x0,8
tick,0x7fff4326feb4,78524865,0,0x0,8
tick,0x7fff4326feb4,78541113,0,0x0,8
tick,0x7fff4326feb4,78557080,0,0x0,8
tick,0x7fff4326feb4,78573156,0,0x0,8
tick,0x7fff4326feb4,78588912,0,0x0,8
tick,0x7fff4326feb4,78604494,0,0x0,8
tick,0x7fff4326feb4,78620524,0,0x0,8
tick,0x7fff4326feb4,78635796,0,0x0,8
tick,0x7fff4326feb4,78652143,0,0x0,8
tick,0x7fff4326feb4,78668006,0,0x0,8
tick,0x7fff4326feb4,78684303,0,0x0,8
tick,0x7fff4326feb4,78700183,0,0x0,8
tick,0x7fff4326feb4,78716162,0,0x0,8
tick,0x7fff4326feb4,78731552,0,0x0,8
tick,0x7fff4326feb4,78747561,0,0x0,8
tick,0x7fff4326feb4,78763301,0,0x0,8
tick,0x7fff4326feb4,78778028,0,0x0,8
tick,0x7fff4326feb4,78793376,0,0x0,8
tick,0x7fff4326feb4,78808530,0,0x0,8
tick,0x7fff4326feb4,78824614,0,0x0,8
tick,0x7fff4326feb4,78840314,0,0x0,8
tick,0x7fff4326feb4,78855504,0,0x0,8
tick,0x7fff4326feb4,78871054,0,0x0,8
tick,0x7fff4326feb4,78886874,0,0x0,8
tick,0x7fff4326feb4,78903210,0,0x0,8
tick,0x7fff4326feb4,78919157,0,0x0,8
tick,0x7fff4326feb4,78934771,0,0x0,8
tick,0x7fff4326feb4,78950680,0,0x0,8
tick,0x7fff4326feb4,78965874,0,0x0,8
tick,0x7fff4326feb4,78981799,0,0x0,8
tick,0x7fff4326feb4,78997600,0,0x0,8
tick,0x7fff4326feb4,79013111,0,0x0,8
tick,0x7fff4326feb4,79029113,0,0x0,8
tick,0x7fff4326feb4,79044260,0,0x0,8
tick,0x7fff4326feb4,79060467,0,0x0,8
tick,0x7fff4326feb4,79076350,0,0x0,8
tick,0x7fff4326feb4,79092013,0,0x0,8
tick,0x7fff4326feb4,79107150,0,0x0,8
tick,0x7fff4326feb4,79122568,0,0x0,8
tick,0x7fff4326feb4,79137952,0,0x0,8
tick,0x7fff4326feb4,79153919,0,0x0,8
tick,0x7fff4326feb4,79169655,0,0x0,8
tick,0x7fff4326feb4,79185164,0,0x0,8
tick,0x7fff4326feb4,79200889,0,0x0,8
tick,0x7fff4326feb4,79215547,0,0x0,8
tick,0x7fff4326feb4,79231773,0,0x0,8
tick,0x7fff4326feb4,79247147,0,0x0,8
tick,0x7fff4326feb4,79262871,0,0x0,8
tick,0x7fff4326feb4,79278521,0,0x0,8
tick,0x7fff4326feb4,79294161,0,0x0,8
tick,0x7fff4326feb4,79308984,0,0x0,8
tick,0x7fff4326feb4,79325045,0,0x0,8
tick,0x7fff4326feb4,79340360,0,0x0,8
tick,0x7fff4326feb4,79355892,0,0x0,8
tick,0x7fff4326feb4,79371256,0,0x0,8
tick,0x7fff4326feb4,79386673,0,0x0,8
tick,0x7fff4326feb4,79402112,0,0x0,8
tick,0x7fff4326feb4,79417230,0,0x0,8
tick,0x7fff4326feb4,79432900,0,0x0,8
tick,0x7fff4326feb4,79448253,0,0x0,8
tick,0x7fff4326feb4,79463740,0,0x0,8
tick,0x7fff4326feb4,79479414,0,0x0,8
tick,0x7fff4326feb4,79495359,0,0x0,8
tick,0x7fff4326feb4,79510842,0,0x0,8
tick,0x7fff4326feb4,79526447,0,0x0,8
tick,0x7fff4326feb4,79542440,0,0x0,8
tick,0x7fff4326feb4,79558012,0,0x0,8
tick,0x7fff4326feb4,79573370,0,0x0,8
tick,0x7fff4326feb4,79589148,0,0x0,8
tick,0x7fff4326feb4,79605382,0,0x0,8
tick,0x7fff4326feb4,79621421,0,0x0,8
tick,0x7fff4326feb4,79636814,0,0x0,8
tick,0x7fff4326feb4,79652088,0,0x0,8
tick,0x7fff4326feb4,79668049,0,0x0,8
tick,0x7fff4326feb4,79684292,0,0x0,8
tick,0x7fff4326feb4,79700232,0,0x0,8
tick,0x7fff4326feb4,79716190,0,0x0,8
tick,0x7fff4326feb4,79732319,0,0x0,8
tick,0x7fff4326feb4,79747534,0,0x0,8
tick,0x7fff4326feb4,79762987,0,0x0,8
tick,0x7fff4326feb4,79779008,0,0x0,8
tick,0x7fff4326feb4,79794378,0,0x0,8
tick,0x7fff4326feb4,79809669,0,0x0,8
tick,0x7fff4326feb4,79825347,0,0x0,8
tick,0x7fff4326feb4,79840956,0,0x0,8
tick,0x7fff4326feb4,79856565,0,0x0,8
tick,0x7fff4326feb4,79872381,0,0x0,8
tick,0x7fff4326feb4,79888134,0,0x0,8
tick,0x7fff4326feb4,79903576,0,0x0,8
tick,0x7fff4326feb4,79918780,0,0x0,8
tick,0x7fff4326feb4,79934539,0,0x0,8
tick,0x7fff4326feb4,79949846,0,0x0,8
tick,0x7fff4326feb4,79965542,0,0x0,8
tick,0x7fff4326feb4,79981229,0,0x0,8
tick,0x7fff4326feb4,79996863,0,0x0,8
tick,0x7fff4326feb4,80012550,0,0x0,8
tick,0x7fff4326feb4,80028236,0,0x0,8
tick,0x7fff4326feb4,80044231,0,0x0,8
tick,0x7fff4326feb4,80059669,0,0x0,8
tick,0x7fff4326feb4,80074895,0,0x0,8
tick,0x7fff4326feb4,80090374,0,0x0,8
tick,0x7fff4326feb4,80105886,0,0x0,8
tick,0x7fff4326feb4,80121285,0,0x0,8
tick,0x7fff4326feb4,80137526,0,0x0,8
tick,0x7fff4326feb4,80153306,0,0x0,8
tick,0x7fff4326feb4,80169243,0,0x0,8
tick,0x7fff4326feb4,80185554,0,0x0,8
tick,0x7fff4326feb4,80201201,0,0x0,8
tick,0x7fff4326feb4,80217109,0,0x0,8
tick,0x7fff4326feb4,80232873,0,0x0,8
tick,0x7fff4326feb4,80248419,0,0x0,8
tick,0x7fff4326feb4,80264054,0,0x0,8
tick,0x7fff4326feb4,80279872,0,0x0,8
tick,0x7fff4326feb4,80295872,0,0x0,8
tick,0x7fff4326feb4,80311878,0,0x0,8
tick,0x7fff4326feb4,80328236,0,0x0,8
tick,0x7fff4326feb4,80343657,0,0x0,8
tick,0x7fff4326feb4,80359113,0,0x0,8
tick,0x7fff4326feb4,80375559,0,0x0,8
tick,0x7fff4326feb4,80391516,0,0x0,8
tick,0x7fff4326feb4,80407219,0,0x0,8
tick,0x7fff4326feb4,80422707,0,0x0,8
tick,0x7fff4326feb4,80438207,0,0x0,8
tick,0x7fff4326feb4,80453500,0,0x0,8
tick,0x7fff4326feb4,80468339,0,0x0,8
tick,0x7fff4326feb4,80484794,0,0x0,8
tick,0x7fff4326feb4,80500823,0,0x0,8
tick,0x7fff4326feb4,80515933,0,0x0,8
tick,0x7fff4326feb4,80531162,0,0x0,8
tick,0x7fff4326feb4,80547062,0,0x0,8
tick,0x7fff4326feb4,80562777,0,0x0,8
tick,0x7fff4326feb4,80578811,0,0x0,8
tick,0x7fff4326feb4,80594211,0,0x0,8
tick,0x7fff4326feb4,80610050,0,0x0,8
tick,0x7fff4326feb4,80625570,0,0x0,8
tick,0x7fff4326feb4,80641276,0,0x0,8
tick,0x7fff4326feb4,80656735,0,0x0,8
tick,0x7fff4326feb4,80672616,0,0x0,8
tick,0x7fff4326feb4,80688023,0,0x0,8
tick,0x7fff4326feb4,80703920,0,0x0,8
tick,0x7fff4326feb4,80719598,0,0x0,8
tick,0x7fff4326feb4,80735300,0,0x0,8
tick,0x7fff4326feb4,80750980,0,0x0,8
tick,0x7fff4326feb4,80766390,0,0x0,8
tick,0x7fff4326feb4,80781577,0,0x0,8
tick,0x7fff4326feb4,80797015,0,0x0,8
tick,0x7fff4326feb4,80812580,0,0x0,8
tick,0x7fff4326feb4,80827874,0,0x0,8
tick,0x7fff4326feb4,80843761,0,0x0,8
tick,0x7fff4326feb4,80858753,0,0x0,8
tick,0x7fff4326feb4,80874167,0,0x0,8
tick,0x7fff4326feb4,80890093,0,0x0,8
tick,0x7fff4326feb4,80905897,0,0x0,8
tick,0x7fff4326feb4,80921101,0,0x0,8
tick,0x7fff4326feb4,80936280,0,0x0,8
tick,0x7fff4326feb4,80951939,0,0x0,8
tick,0x7fff4326feb4,80967017,0,0x0,8
tick,0x7fff4326feb4,80983016,0,0x0,8
tick,0x7fff4326feb4,80998846,0,0x0,8
tick,0x7fff4326feb4,81014122,0,0x0,8
tick,0x7fff4326feb4,81029316,0,0x0,8
tick,0x7fff4326feb4,81045364,0,0x0,8
tick,0x7fff4326feb4,81060708,0,0x0,8
tick,0x7fff4326feb4,81076996,0,0x0,8
tick,0x7fff4326feb4,81092439,0,0x0,8
tick,0x7fff4326feb4,81108051,0,0x0,8
tick,0x7fff4326feb4,81123278,0,0x0,8
tick,0x7fff4326feb4,81139610,0,0x0,8
tick,0x7fff4326feb4,81155657,0,0x0,8
tick,0x7fff4326feb4,81171057,0,0x0,8
tick,0x7fff4326feb4,81186271,0,0x0,8
tick,0x7fff4326feb4,81201762,0,0x0,8
tick,0x7fff4326feb4,81217304,0,0x0,8
tick,0x7fff4326feb4,81233242,0,0x0,8
tick,0x7fff4326feb4,81248211,0,0x0,8
tick,0x7fff4326feb4,81264271,0,0x0,8
tick,0x7fff4326feb4,81279744,0,0x0,8
tick,0x7fff4326feb4,81295196,0,0x0,8
tick,0x7fff4326feb4,81310511,0,0x0,8
tick,0x7fff4326feb4,81325908,0,0x0,8
tick,0x7fff4326feb4,81342217,0,0x0,8
tick,0x7fff4326feb4,81357617,0,0x0,8
tick,0x7fff4326feb4,81373002,0,0x0,8
tick,0x7fff4326feb4,81388885,0,0x0,8
tick,0x7fff4326feb4,81404747,0,0x0,8
tick,0x7fff4326feb4,81420192,0,0x0,8
tick,0x7fff4326feb4,81435959,0,0x0,8
tick,0x7fff4326feb4,81452102,0,0x0,8
tick,0x7fff4326feb4,81467746,0,0x0,8
tick,0x7fff4326feb4,81483589,0,0x0,8
tick,0x7fff4326feb4,81499124,0,0x0,8
tick,0x7fff4326feb4,81514449,0,0x0,8
tick,0x7fff4326feb4,81529771,0,0x0,8
tick,0x7fff4326feb4,81545782,0,0x0,8
tick,0x7fff4326feb4,81561793,0,0x0,8
tick,0x7fff4326feb4,81577817,0,0x0,8
tick,0x7fff4326feb4,81592736,0,0x0,8
tick,0x7fff4326feb4,81607838,0,0x0,8
tick,0x7fff4326feb4,81623242,0,0x0,8
tick,0x7fff4326feb4,81639614,0,0x0,8
tick,0x7fff4326feb4,81655719,0,0x0,8
tick,0x7fff4326feb4,81671283,0,0x0,8
tick,0x7fff4326feb4,81687429,0,0x0,8
tick,0x7fff4326feb4,81702819,0,0x0,8
tick,0x7fff4326feb4,81717545,0,0x0,8
tick,0x7fff4326feb4,81733282,0,0x0,8
tick,0x7fff4326feb4,81748746,0,0x0,8
tick,0x7fff4326feb4,81764643,0,0x0,8
tick,0x7fff4326feb4,81780317,0,0x0,8
tick,0x7fff4326feb4,81796023,0,0x0,8
tick,0x7fff4326feb4,81811405,0,0x0,8
tick,0x7fff4326feb4,81827304,0,0x0,8
tick,0x7fff4326feb4,81843492,0,0x0,8
tick,0x7fff4326feb4,81859027,0,0x0,8
tick,0x7fff4326feb4,81874638,0,0x0,8
tick,0x7fff4326feb4,81890629,0,0x0,8
tick,0x7fff4326feb4,81906786,0,0x0,8
tick,0x7fff4326feb4,81921885,0,0x0,8
tick,0x7fff4326feb4,81937876,0,0x0,8
tick,0x7fff4326feb4,81953670,0,0x0,8
tick,0x7fff4326feb4,81969926,0,0x0,8
tick,0x7fff4326feb4,81985110,0,0x0,8
tick,0x7fff4326feb4,82000841,0,0x0,8
tick,0x7fff4326feb4,82016861,0,0x0,8
tick,0x7fff4326feb4,82031916,0,0x0,8
tick,0x7fff4326feb4,82047543,0,0x0,8
tick,0x7fff4326feb4,82063290,0,0x0,8
tick,0x7fff4326feb4,82078537,0,0x0,8
tick,0x7fff4326feb4,82094450,0,0x0,8
tick,0x7fff4326feb4,82109893,0,0x0,8
tick,0x7fff4326feb4,82125272,0,0x0,8
tick,0x7fff4326feb4,82141203,0,0x0,8
tick,0x7fff4326feb4,82157258,0,0x0,8
tick,0x7fff4326feb4,82172820,0,0x0,8
tick,0x7fff4326feb4,82188014,0,0x0,8
tick,0x7fff4326feb4,82203462,0,0x0,8
tick,0x7fff4326feb4,82219111,0,0x0,8
tick,0x7fff4326feb4,82234785,0,0x0,8
tick,0x7fff4326feb4,82250486,0,0x0,8
tick,0x7fff4326feb4,82266162,0,0x0,8
tick,0x7fff4326feb4,82281828,0,0x0,8
tick,0x7fff4326feb4,82297847,0,0x0,8
tick,0x7fff4326feb4,82312845,0,0x0,8
tick,0x7fff4326feb4,82328286,0,0x0,8
tick,0x7fff4326feb4,82343606,0,0x0,8
tick,0x7fff4326feb4,82359167,0,0x0,8
tick,0x7fff4326feb4,82374934,0,0x0,8
tick,0x7fff4326feb4,82390961,0,0x0,8
tick,0x7fff4326feb4,82406389,0,0x0,8
tick,0x7fff4326feb4,82421528,0,0x0,8
tick,0x7fff4326feb4,82437918,0,0x0,8
tick,0x7fff4326feb4,82453149,0,0x0,8
tick,0x7fff4326feb4,82469116,0,0x0,8
tick,0x7fff4326feb4,82484873,0,0x0,8
tick,0x7fff4326feb4,82501168,0,0x0,8
tick,0x7fff4326feb4,82516621,0,0x0,8
tick,0x7fff4326feb4,82531297,0,0x0,8
tick,0x7fff4326feb4,82546359,0,0x0,8
tick,0x7fff4326feb4,82562216,0,0x0,8
tick,0x7fff4326feb4,82577474,0,0x0,8
tick,0x7fff4326feb4,82593275,0,0x0,8
tick,0x7fff4326feb4,82608946,0,0x0,8
tick,0x7fff4326feb4,82624493,0,0x0,8
tick,0x7fff4326feb4,82640103,0,0x0,8
tick,0x7fff4326feb4,82656339,0,0x0,8
tick,0x7fff4326feb4,82671660,0,0x0,8
tick,0x7fff4326feb4,82687081,0,0x0,8
tick,0x7fff4326feb4,82703032,0,0x0,8
tick,0x7fff4326feb4,82718658,0,0x0,8
tick,0x7fff4326feb4,82734538,0,0x0,8
tick,0x7fff4326feb4,82749955,0,0x0,8
tick,0x7fff4326feb4,82765658,0,0x0,8
tick,0x7fff4326feb4,82781332,0,0x0,8
tick,0x7fff4326feb4,82797730,0,0x0,8
tick,0x7fff4326feb4,82813331,0,0x0,8
tick,0x7fff4326feb4,82829147,0,0x0,8
tick,0x7fff4326feb4,82845056,0,0x0,8
tick,0x7fff4326feb4,82860657,0,0x0,8
tick,0x7fff4326feb4,82876762,0,0x0,8
tick,0x7fff4326feb4,82892457,0,0x0,8
tick,0x7fff4326feb4,82907603,0,0x0,8
tick,0x7fff4326feb4,82923622,0,0x0,8
tick,0x7fff4326feb4,82938788,0,0x0,8
tick,0x7fff4326feb4,82954738,0,0x0,8
tick,0x7fff4326feb4,82971034,0,0x0,8
tick,0x7fff4326feb4,82986696,0,0x0,8
tick,0x7fff4326feb4,83002715,0,0x0,8
tick,0x7fff4326feb4,83018467,0,0x0,8
tick,0x7fff4326feb4,83034173,0,0x0,8
tick,0x7fff4326feb4,83048971,0,0x0,8
tick,0x7fff4326feb4,83065257,0,0x0,8
tick,0x7fff4326feb4,83080462,0,0x0,8
tick,0x7fff4326feb4,83096063,0,0x0,8
tick,0x7fff4326feb4,83111422,0,0x0,8
tick,0x7fff4326feb4,83126514,0,0x0,8
tick,0x7fff4326feb4,83142242,0,0x0,8
tick,0x7fff4326feb4,83158392,0,0x0,8
tick,0x7fff4326feb4,83174004,0,0x0,8
tick,0x7fff4326feb4,83190327,0,0x0,8
tick,0x7fff4326feb4,83205783,0,0x0,8
tick,0x7fff4326feb4,83221188,0,0x0,8
tick,0x7fff4326feb4,83236839,0,0x0,8
tick,0x7fff4326feb4,83252466,0,0x0,8
tick,0x7fff4326feb4,83268141,0,0x0,8
tick,0x7fff4326feb4,83283837,0,0x0,8
tick,0x7fff4326feb4,83299331,0,0x0,8
tick,0x7fff4326feb4,83315208,0,0x0,8
tick,0x7fff4326feb4,83330374,0,0x0,8
tick,0x7fff4326feb4,83345989,0,0x0,8
tick,0x7fff4326feb4,83361676,0,0x0,8
tick,0x7fff4326feb4,83377236,0,0x0,8
tick,0x7fff4326feb4,83393683,0,0x0,8
tick,0x7fff4326feb4,83409690,0,0x0,8
tick,0x7fff4326feb4,83426008,0,0x0,8
tick,0x7fff4326feb4,83441323,0,0x0,8
tick,0x7fff4326feb4,83457690,0,0x0,8
tick,0x7fff4326feb4,83473794,0,0x0,8
tick,0x7fff4326feb4,83489382,0,0x0,8
tick,0x7fff4326feb4,83504929,0,0x0,8
tick,0x7fff4326feb4,83520526,0,0x0,8
tick,0x7fff4326feb4,83535924,0,0x0,8
tick,0x7fff4326feb4,83551116,0,0x0,8
tick,0x7fff4326feb4,83566766,0,0x0,8
tick,0x7fff4326feb4,83582979,0,0x0,8
tick,0x7fff4326feb4,83598900,0,0x0,8
tick,0x7fff4326feb4,83614171,0,0x0,8
tick,0x7fff4326feb4,83629927,0,0x0,8
tick,0x7fff4326feb4,83645691,0,0x0,8
tick,0x7fff4326feb4,83661895,0,0x0,8
tick,0x7fff4326feb4,83677699,0,0x0,8
tick,0x7fff4326feb4,83693314,0,0x0,8
tick,0x7fff4326feb4,83709019,0,0x0,8
tick,0x7fff4326feb4,83724394,0,0x0,8
tick,0x7fff4326feb4,83740336,0,0x0,8
tick,0x7fff4326feb4,83755979,0,0x0,8
tick,0x7fff4326feb4,83770938,0,0x0,8
tick,0x7fff4326feb4,83786443,0,0x0,8
tick,0x7fff4326feb4,83802012,0,0x0,8
tick,0x7fff4326feb4,83817697,0,0x0,8
tick,0x7fff4326feb4,83833379,0,0x0,8
tick,0x7fff4326feb4,83849054,0,0x0,8
tick,0x7fff4326feb4,83864447,0,0x0,8
tick,0x7fff4326feb4,83879941,0,0x0,8
tick,0x7fff4326feb4,83895886,0,0x0,8
tick,0x7fff4326feb4,83911700,0,0x0,8
tick,0x7fff4326feb4,83926923,0,0x0,8
tick,0x7fff4326feb4,83942869,0,0x0,8
tick,0x7fff4326feb4,83958190,0,0x0,8
tick,0x7fff4326feb4,83974399,0,0x0,8
tick,0x7fff4326feb4,83990351,0,0x0,8
tick,0x7fff4326feb4,84005573,0,0x0,8
tick,0x7fff4326feb4,84021210,0,0x0,8
tick,0x7fff4326feb4,84036459,0,0x0,8
tick,0x7fff4326feb4,84051760,0,0x0,8
tick,0x7fff4326feb4,84067344,0,0x0,8
tick,0x7fff4326feb4,84083133,0,0x0,8
tick,0x7fff4326feb4,84098424,0,0x0,8
tick,0x7fff4326feb4,84113868,0,0x0,8
tick,0x7fff4326feb4,84129201,0,0x0,8
tick,0x7fff4326feb4,84145153,0,0x0,8
tick,0x7fff4326feb4,84161501,0,0x0,8
tick,0x7fff4326feb4,84177713,0,0x0,8
tick,0x7fff4326feb4,84193562,0,0x0,8
tick,0x7fff4326feb4,84209403,0,0x0,8
tick,0x7fff4326feb4,84225396,0,0x0,8
tick,0x7fff4326feb4,84240846,0,0x0,8
tick,0x7fff4326feb4,84255798,0,0x0,8
tick,0x7fff4326feb4,84271228,0,0x0,8
tick,0x7fff4326feb4,84286367,0,0x0,8
tick,0x7fff4326feb4,84301799,0,0x0,8
tick,0x7fff4326feb4,84317278,0,0x0,8
tick,0x7fff4326feb4,84333181,0,0x0,8
tick,0x7fff4326feb4,84348251,0,0x0,8
tick,0x7fff4326feb4,84363920,0,0x0,8
tick,0x7fff4326feb4,84379855,0,0x0,8
tick,0x7fff4326feb4,84395826,0,0x0,8
tick,0x7fff4326feb4,84411133,0,0x0,8
tick,0x7fff4326feb4,84426828,0,0x0,8
tick,0x7fff4326feb4,84442830,0,0x0,8
tick,0x7fff4326feb4,84458228,0,0x0,8
tick,0x7fff4326feb4,84473397,0,0x0,8
tick,0x7fff4326feb4,84489948,0,0x0,8
tick,0x7fff4326feb4,84505175,0,0x0,8
tick,0x7fff4326feb4,84521223,0,0x0,8
tick,0x7fff4326feb4,84537243,0,0x0,8
tick,0x7fff4326feb4,84552494,0,0x0,8
tick,0x7fff4326feb4,84568011,0,0x0,8
tick,0x7fff4326feb4,84583448,0,0x0,8
tick,0x7fff4326feb4,84599844,0,0x0,8
tick,0x7fff4326feb4,84614849,0,0x0,8
tick,0x7fff4326feb4,84630509,0,0x0,8
tick,0x7fff4326feb4,84646388,0,0x0,8
tick,0x7fff4326feb4,84661799,0,0x0,8
tick,0x7fff4326feb4,84677269,0,0x0,8
tick,0x7fff4326feb4,84692872,0,0x0,8
tick,0x7fff4326feb4,84708021,0,0x0,8
tick,0x7fff4326feb4,84723587,0,0x0,8
tick,0x7fff4326feb4,84739081,0,0x0,8
tick,0x7fff4326feb4,84755119,0,0x0,8
tick,0x7fff4326feb4,84770754,0,0x0,8
tick,0x7fff4326feb4,84786315,0,0x0,8
tick,0x7fff4326feb4,84802020,0,0x0,8
tick,0x7fff4326feb4,84817731,0,0x0,8
tick,0x7fff4326feb4,84833364,0,0x0,8
tick,0x7fff4326feb4,84848766,0,0x0,8
tick,0x7fff4326feb4,84864497,0,0x0,8
tick,0x7fff4326feb4,84879833,0,0x0,8
tick,0x7fff4326feb4,84895748,0,0x0,8
tick,0x7fff4326feb4,84910830,0,0x0,8
tick,0x7fff4326feb4,84926321,0,0x0,8
tick,0x7fff4326feb4,84942394,0,0x0,8
tick,0x7fff4326feb4,84958232,0,0x0,8
tick,0x7fff4326feb4,84973201,0,0x0,8
tick,0x7fff4326feb4,84988282,0,0x0,8
tick,0x7fff4326feb4,85004274,0,0x0,8
tick,0x7fff4326feb4,85020417,0,0x0,8
tick,0x7fff4326feb4,85035964,0,0x0,8
tick,0x7fff4326feb4,85051566,0,0x0,8
tick,0x7fff4326feb4,85066295,0,0x0,8
tick,0x7fff4326feb4,85081910,0,0x0,8
tick,0x7fff4326feb4,85098054,0,0x0,8
tick,0x7fff4326feb4,85114012,0,0x0,8
tick,0x7fff4326feb4,85129869,0,0x0,8
tick,0x7fff4326feb4,85145086,0,0x0,8
tick,0x7fff4326feb4,85160898,0,0x0,8
tick,0x7fff4326feb4,85176183,0,0x0,8
tick,0x7fff4326feb4,85191750,0,0x0,8
tick,0x7fff4326feb4,85207433,0,0x0,8
tick,0x7fff4326feb4,85223182,0,0x0,8
tick,0x7fff4326feb4,85238810,0,0x0,8
tick,0x7fff4326feb4,85254330,0,0x0,8
tick,0x7fff4326feb4,85269841,0,0x0,8
tick,0x7fff4326feb4,85285821,0,0x0,8
tick,0x7fff4326feb4,85302040,0,0x0,8
tick,0x7fff4326feb4,85318094,0,0x0,8
tick,0x7fff4326feb4,85332581,0,0x0,8
tick,0x7fff4326feb4,85347840,0,0x0,8
tick,0x7fff4326feb4,85363898,0,0x0,8
tick,0x7fff4326feb4,85380218,0,0x0,8
tick,0x7fff4326feb4,85395551,0,0x0,8
tick,0x7fff4326feb4,85411055,0,0x0,8
tick,0x7fff4326feb4,85427244,0,0x0,8
tick,0x7fff4326feb4,85443295,0,0x0,8
tick,0x7fff4326feb4,85458625,0,0x0,8
tick,0x7fff4326feb4,85474399,0,0x0,8
tick,0x7fff4326feb4,85489046,0,0x0,8
tick,0x7fff4326feb4,85504899,0,0x0,8
tick,0x7fff4326feb4,85520627,0,0x0,8
tick,0x7fff4326feb4,85536251,0,0x0,8
tick,0x7fff4326feb4,85551856,0,0x0,8
tick,0x7fff4326feb4,85567142,0,0x0,8
tick,0x7fff4326feb4,85582438,0,0x0,8
tick,0x7fff4326feb4,85598503,0,0x0,8
tick,0x7fff4326feb4,85614120,0,0x0,8
tick,0x7fff4326feb4,85630243,0,0x0,8
tick,0x7fff4326feb4,85645483,0,0x0,8
tick,0x7fff4326feb4,85661412,0,0x0,8
tick,0x7fff4326feb4,85676430,0,0x0,8
tick,0x7fff4326feb4,85691623,0,0x0,8
tick,0x7fff4326feb4,85706921,0,0x0,8
tick,0x7fff4326feb4,85722585,0,0x0,8
tick,0x7fff4326feb4,85738261,0,0x0,8
tick,0x7fff4326feb4,85754070,0,0x0,8
tick,0x7fff4326feb4,85769819,0,0x0,8
tick,0x7fff4326feb4,85785538,0,0x0,8
tick,0x7fff4326feb4,85801586,0,0x0,8
tick,0x7fff4326feb4,85816382,0,0x0,8
tick,0x7fff4326feb4,85831914,0,0x0,8
tick,0x7fff4326feb4,85847601,0,0x0,8
tick,0x7fff4326feb4,85863337,0,0x0,8
tick,0x7fff4326feb4,85878548,0,0x0,8
tick,0x7fff4326feb4,85894577,0,0x0,8
tick,0x7fff4326feb4,85910624,0,0x0,8
tick,0x7fff4326feb4,85926102,0,0x0,8
tick,0x7fff4326feb4,85942119,0,0x0,8
tick,0x7fff4326feb4,85957787,0,0x0,8
tick,0x7fff4326feb4,85973159,0,0x0,8
tick,0x7fff4326feb4,85989239,0,0x0,8
tick,0x7fff4326feb4,86004776,0,0x0,8
tick,0x7fff4326feb4,86020581,0,0x0,8
tick,0x7fff4326feb4,86036156,0,0x0,8
tick,0x7fff4326feb4,86051907,0,0x0,8
tick,0x7fff4326feb4,86067258,0,0x0,8
tick,0x7fff4326feb4,86083305,0,0x0,8
tick,0x7fff4326feb4,86098616,0,0x0,8
tick,0x7fff4326feb4,86114149,0,0x0,8
tick,0x7fff4326feb4,86129786,0,0x0,8
tick,0x7fff4326feb4,86146059,0,0x0,8
tick,0x7fff4326feb4,86161474,0,0x0,8
tick,0x7fff4326feb4,86176830,0,0x0,8
tick,0x7fff4326feb4,86193178,0,0x0,8
tick,0x7fff4326feb4,86208955,0,0x0,8
tick,0x7fff4326feb4,86224402,0,0x0,8
tick,0x7fff4326feb4,86240117,0,0x0,8
tick,0x7fff4326feb4,86255548,0,0x0,8
tick,0x7fff4326feb4,86270853,0,0x0,8
tick,0x7fff4326feb4,86285984,0,0x0,8
tick,0x7fff4326feb4,86302183,0,0x0,8
tick,0x7fff4326feb4,86317247,0,0x0,8
tick,0x7fff4326feb4,86332643,0,0x0,8
tick,0x7fff4326feb4,86348398,0,0x0,8
tick,0x7fff4326feb4,86364277,0,0x0,8
tick,0x7fff4326feb4,86380215,0,0x0,8
tick,0x7fff4326feb4,86396094,0,0x0,8
tick,0x7fff4326feb4,86411161,0,0x0,8
tick,0x7fff4326feb4,86426997,0,0x0,8
tick,0x7fff4326feb4,86442551,0,0x0,8
tick,0x7fff4326feb4,86458335,0,0x0,8
tick,0x7fff4326feb4,86473836,0,0x0,8
tick,0x7fff4326feb4,86488967,0,0x0,8
tick,0x7fff4326feb4,86505138,0,0x0,8
tick,0x7fff4326feb4,86520371,0,0x0,8
tick,0x7fff4326feb4,86536225,0,0x0,8
tick,0x7fff4326feb4,86551806,0,0x0,8
tick,0x7fff4326feb4,86567847,0,0x0,8
tick,0x7fff4326feb4,86583496,0,0x0,8
tick,0x7fff4326feb4,86599341,0,0x0,8
tick,0x7fff4326feb4,86614762,0,0x0,8
tick,0x7fff4326feb4,86630368,0,0x0,8
tick,0x7fff4326feb4,86646692,0,0x0,8
tick,0x7fff4326feb4,86662330,0,0x0,8
tick,0x7fff4326feb4,86677592,0,0x0,8
tick,0x7fff4326feb4,86693810,0,0x0,8
tick,0x7fff4326feb4,86709357,0,0x0,8
tick,0x7fff4326feb4,86725233,0,0x0,8
tick,0x7fff4326feb4,86740628,0,0x0,8
tick,0x7fff4326feb4,86756650,0,0x0,8
tick,0x7fff4326feb4,86771961,0,0x0,8
tick,0x7fff4326feb4,86787269,0,0x0,8
tick,0x7fff4326feb4,86803285,0,0x0,8
tick,0x7fff4326feb4,86819040,0,0x0,8
tick,0x7fff4326feb4,86834274,0,0x0,8
tick,0x7fff4326feb4,86849892,0,0x0,8
tick,0x7fff4326feb4,86865265,0,0x0,8
tick,0x7fff4326feb4,86881213,0,0x0,8
tick,0x7fff4326feb4,86897534,0,0x0,8
tick,0x7fff4326feb4,86912820,0,0x0,8
tick,0x7fff4326feb4,86928441,0,0x0,8
tick,0x7fff4326feb4,86944116,0,0x0,8
tick,0x7fff4326feb4,86959412,0,0x0,8
tick,0x7fff4326feb4,86975154,0,0x0,8
tick,0x7fff4326feb4,86991081,0,0x0,8
tick,0x7fff4326feb4,87007084,0,0x0,8
tick,0x7fff4326feb4,87022140,0,0x0,8
tick,0x7fff4326feb4,87037892,0,0x0,8
tick,0x7fff4326feb4,87053436,0,0x0,8
tick,0x7fff4326feb4,87068827,0,0x0,8
tick,0x7fff4326feb4,87083938,0,0x0,8
tick,0x7fff4326feb4,87099997,0,0x0,8
tick,0x7fff4326feb4,87114983,0,0x0,8
tick,0x7fff4326feb4,87130768,0,0x0,8
tick,0x7fff4326feb4,87145782,0,0x0,8
tick,0x7fff4326feb4,87161764,0,0x0,8
tick,0x7fff4326feb4,87177006,0,0x0,8
tick,0x7fff4326feb4,87192192,0,0x0,8
tick,0x7fff4326feb4,87207478,0,0x0,8
tick,0x7fff4326feb4,87223487,0,0x0,8
tick,0x7fff4326feb4,87239500,0,0x0,8
tick,0x7fff4326feb4,87254699,0,0x0,8
tick,0x7fff4326feb4,87270579,0,0x0,8
tick,0x7fff4326feb4,87285776,0,0x0,8
tick,0x7fff4326feb4,87300640,0,0x0,8
tick,0x7fff4326feb4,87316288,0,0x0,8
tick,0x7fff4326feb4,87332286,0,0x0,8
tick,0x7fff4326feb4,87347665,0,0x0,8
tick,0x7fff4326feb4,87363858,0,0x0,8
tick,0x7fff4326feb4,87380055,0,0x0,8
tick,0x7fff4326feb4,87396011,0,0x0,8
tick,0x7fff4326feb4,87411267,0,0x0,8
tick,0x7fff4326feb4,87426962,0,0x0,8
tick,0x7fff4326feb4,87442639,0,0x0,8
tick,0x7fff4326feb4,87458291,0,0x0,8
tick,0x7fff4326feb4,87473660,0,0x0,8
tick,0x7fff4326feb4,87489573,0,0x0,8
tick,0x7fff4326feb4,87505149,0,0x0,8
tick,0x7fff4326feb4,87520253,0,0x0,8
tick,0x7fff4326feb4,87536252,0,0x0,8
tick,0x7fff4326feb4,87551838,0,0x0,8
tick,0x7fff4326feb4,87567459,0,0x0,8
tick,0x7fff4326feb4,87583127,0,0x0,8
tick,0x7fff4326feb4,87597886,0,0x0,8
tick,0x7fff4326feb4,87614025,0,0x0,8
tick,0x7fff4326feb4,87630107,0,0x0,8
tick,0x7fff4326feb4,87645152,0,0x0,8
tick,0x7fff4326feb4,87660383,0,0x0,8
tick,0x7fff4326feb4,87676042,0,0x0,8
tick,0x7fff4326feb4,87692198,0,0x0,8
tick,0x7fff4326feb4,87707679,0,0x0,8
tick,0x7fff4326feb4,87723729,0,0x0,8
tick,0x7fff4326feb4,87738854,0,0x0,8
tick,0x7fff4326feb4,87754498,0,0x0,8
tick,0x7fff4326feb4,87770085,0,0x0,8
tick,0x7fff4326feb4,87786425,0,0x0,8
tick,0x7fff4326feb4,87802456,0,0x0,8
tick,0x7fff4326feb4,87817491,0,0x0,8
tick,0x7fff4326feb4,87832976,0,0x0,8
tick,0x7fff4326feb4,87848052,0,0x0,8
tick,0x7fff4326feb4,87863721,0,0x0,8
tick,0x7fff4326feb4,87879186,0,0x0,8
tick,0x7fff4326feb4,87894865,0,0x0,8
tick,0x7fff4326feb4,87911032,0,0x0,8
tick,0x7fff4326feb4,87926562,0,0x0,8
tick,0x7fff4326feb4,87942042,0,0x0,8
tick,0x7fff4326feb4,87957864,0,0x0,8
tick,0x7fff4326feb4,87973869,0,0x0,8
tick,0x7fff4326feb4,87990159,0,0x0,8
tick,0x7fff4326feb4,88005861,0,0x0,8
tick,0x7fff4326feb4,88021536,0,0x0,8
tick,0x7fff4326feb4,88037147,0,0x0,8
tick,0x7fff4326feb4,88052900,0,0x0,8
tick,0x7fff4326feb4,88069245,0,0x0,8
tick,0x7fff4326feb4,88084948,0,0x0,8
tick,0x7fff4326feb4,88100608,0,0x0,8
tick,0x7fff4326feb4,88116118,0,0x0,8
tick,0x7fff4326feb4,88132378,0,0x0,8
tick,0x7fff4326feb4,88147997,0,0x0,8
tick,0x7fff4326feb4,88164073,0,0x0,8
tick,0x7fff4326feb4,88179679,0,0x0,8
tick,0x7fff4326feb4,88195719,0,0x0,8
tick,0x7fff4326feb4,88211896,0,0x0,8
tick,0x7fff4326feb4,88227384,0,0x0,8
tick,0x7fff4326feb4,88242988,0,0x0,8
tick,0x7fff4326feb4,88259091,0,0x0,8
tick,0x7fff4326feb4,88274616,0,0x0,8
tick,0x7fff4326feb4,88290596,0,0x0,8
tick,0x7fff4326feb4,88306101,0,0x0,8
tick,0x7fff4326feb4,88321044,0,0x0,8
tick,0x7fff4326feb4,88337030,0,0x0,8
tick,0x7fff4326feb4,88353029,0,0x0,8
tick,0x7fff4326feb4,88368030,0,0x0,8
tick,0x7fff4326feb4,88384303,0,0x0,8
tick,0x7fff4326feb4,88399634,0,0x0,8
tick,0x7fff4326feb4,88414968,0,0x0,8
tick,0x7fff4326feb4,88430676,0,0x0,8
tick,0x7fff4326feb4,88445976,0,0x0,8
tick,0x7fff4326feb4,88461587,0,0x0,8
tick,0x7fff4326feb4,88477335,0,0x0,8
tick,0x7fff4326feb4,88492883,0,0x0,8
tick,0x7fff4326feb4,88509187,0,0x0,8
tick,0x7fff4326feb4,88524125,0,0x0,8
tick,0x7fff4326feb4,88539349,0,0x0,8
tick,0x7fff4326feb4,88555012,0,0x0,8
tick,0x7fff4326feb4,88570070,0,0x0,8
tick,0x7fff4326feb4,88585678,0,0x0,8
tick,0x7fff4326feb4,88602081,0,0x0,8
tick,0x7fff4326feb4,88617374,0,0x0,8
tick,0x7fff4326feb4,88632775,0,0x0,8
tick,0x7fff4326feb4,88648199,0,0x0,8
tick,0x7fff4326feb4,88663787,0,0x0,8
tick,0x7fff4326feb4,88679180,0,0x0,8
tick,0x7fff4326feb4,88695187,0,0x0,8
tick,0x7fff4326feb4,88710820,0,0x0,8
tick,0x7fff4326feb4,88726314,0,0x0,8
tick,0x7fff4326feb4,88742274,0,0x0,8
tick,0x7fff4326feb4,88757651,0,0x0,8
tick,0x7fff4326feb4,88774119,0,0x0,8
tick,0x7fff4326feb4,88789307,0,0x0,8
tick,0x7fff4326feb4,88804989,0,0x0,8
tick,0x7fff4326feb4,88820718,0,0x0,8
tick,0x7fff4326feb4,88836067,0,0x0,8
tick,0x7fff4326feb4,88851530,0,0x0,8
tick,0x7fff4326feb4,88867546,0,0x0,8
tick,0x7fff4326feb4,88883534,0,0x0,8
tick,0x7fff4326feb4,88898552,0,0x0,8
tick,0x7fff4326feb4,88914567,0,0x0,8
tick,0x7fff4326feb4,88930380,0,0x0,8
tick,0x7fff4326feb4,88945530,0,0x0,8
tick,0x7fff4326feb4,88961582,0,0x0,8
tick,0x7fff4326feb4,88977603,0,0x0,8
tick,0x7fff4326feb4,88993465,0,0x0,8
tick,0x7fff4326feb4,89009472,0,0x0,8
tick,0x7fff4326feb4,89025347,0,0x0,8
tick,0x7fff4326feb4,89041344,0,0x0,8
tick,0x7fff4326feb4,89057466,0,0x0,8
tick,0x7fff4326feb4,89072897,0,0x0,8
tick,0x7fff4326feb4,89087979,0,0x0,8
tick,0x7fff4326feb4,89103275,0,0x0,8
tick,0x7fff4326feb4,89119289,0,0x0,8
tick,0x7fff4326feb4,89135003,0,0x0,8
tick,0x7fff4326feb4,89150748,0,0x0,8
tick,0x7fff4326feb4,89166328,0,0x0,8
tick,0x7fff4326feb4,89181745,0,0x0,8
tick,0x7fff4326feb4,89197573,0,0x0,8
tick,0x7fff4326feb4,89212397,0,0x0,8
tick,0x7fff4326feb4,89227742,0,0x0,8
tick,0x7fff4326feb4,89243140,0,0x0,8
tick,0x7fff4326feb4,89258410,0,0x0,8
tick,0x7fff4326feb4,89273733,0,0x0,8
tick,0x7fff4326feb4,89289729,0,0x0,8
tick,0x7fff4326feb4,89304519,0,0x0,8
tick,0x7fff4326feb4,89320533,0,0x0,8
tick,0x7fff4326feb4,89336540,0,0x0,8
tick,0x7fff4326feb4,89352499,0,0x0,8
tick,0x7fff4326feb4,89367855,0,0x0,8
tick,0x7fff4326feb4,89383056,0,0x0,8
tick,0x7fff4326feb4,89398765,0,0x0,8
tick,0x7fff4326feb4,89414599,0,0x0,8
tick,0x7fff4326feb4,89430413,0,0x0,8
tick,0x7fff4326feb4,89445716,0,0x0,8
tick,0x7fff4326feb4,89461022,0,0x0,8
tick,0x7fff4326feb4,89476729,0,0x0,8
tick,0x7fff4326feb4,89492390,0,0x0,8
tick,0x7fff4326feb4,89508227,0,0x0,8
tick,0x7fff4326feb4,89523398,0,0x0,8
tick,0x7fff4326feb4,89538788,0,0x0,8
tick,0x7fff4326feb4,89554115,0,0x0,8
tick,0x7fff4326feb4,89569424,0,0x0,8
tick,0x7fff4326feb4,89585428,0,0x0,8
tick,0x7fff4326feb4,89600600,0,0x0,8
tick,0x7fff4326feb4,89616057,0,0x0,8
tick,0x7fff4326feb4,89631743,0,0x0,8
tick,0x7fff4326feb4,89646523,0,0x0,8
tick,0x7fff4326feb4,89662567,0,0x0,8
tick,0x7fff4326feb4,89678110,0,0x0,8
tick,0x7fff4326feb4,89694330,0,0x0,8
tick,0x7fff4326feb4,89710691,0,0x0,8
tick,0x7fff4326feb4,89726588,0,0x0,8
tick,0x7fff4326feb4,89742250,0,0x0,8
tick,0x7fff4326feb4,89757928,0,0x0,8
tick,0x7fff4326feb4,89773534,0,0x0,8
tick,0x7fff4326feb4,89789225,0,0x0,8
tick,0x7fff4326feb4,89804914,0,0x0,8
tick,0x7fff4326feb4,89820476,0,0x0,8
tick,0x7fff4326feb4,89835467,0,0x0,8
tick,0x7fff4326feb4,89851491,0,0x0,8
tick,0x7fff4326feb4,89866541,0,0x0,8
tick,0x7fff4326feb4,89882561,0,0x0,8
tick,0x7fff4326feb4,89898225,0,0x0,8
tick,0x7fff4326feb4,89913250,0,0x0,8
tick,0x7fff4326feb4,89929416,0,0x0,8
tick,0x7fff4326feb4,89945171,0,0x0,8
tick,0x7fff4326feb4,89960521,0,0x0,8
tick,0x7fff4326feb4,89976560,0,0x0,8
tick,0x7fff4326feb4,89992274,0,0x0,8
tick,0x7fff4326feb4,90007590,0,0x0,8
tick,0x7fff4326feb4,90023261,0,0x0,8
tick,0x7fff4326feb4,90038377,0,0x0,8
tick,0x7fff4326feb4,90054086,0,0x0,8
tick,0x7fff4326feb4,90069682,0,0x0,8
tick,0x7fff4326feb4,90085679,0,0x0,8
tick,0x7fff4326feb4,90101281,0,0x0,8
tick,0x7fff4326feb4,90116963,0,0x0,8
tick,0x7fff4326feb4,90132711,0,0x0,8
tick,0x7fff4326feb4,90148709,0,0x0,8
tick,0x7fff4326feb4,90164007,0,0x0,8
tick,0x7fff4326feb4,90179375,0,0x0,8
tick,0x7fff4326feb4,90195530,0,0x0,8
tick,0x7fff4326feb4,90211256,0,0x0,8
tick,0x7fff4326feb4,90226940,0,0x0,8
tick,0x7fff4326feb4,90242551,0,0x0,8
tick,0x7fff4326feb4,90258584,0,0x0,8
tick,0x7fff4326feb4,90274527,0,0x0,8
tick,0x7fff4326feb4,90289717,0,0x0,8
tick,0x7fff4326feb4,90304971,0,0x0,8
tick,0x7fff4326feb4,90320588,0,0x0,8
tick,0x7fff4326feb4,90335961,0,0x0,8
tick,0x7fff4326feb4,90351837,0,0x0,8
tick,0x7fff4326feb4,90367284,0,0x0,8
tick,0x7fff4326feb4,90382322,0,0x0,8
tick,0x7fff4326feb4,90397844,0,0x0,8
tick,0x7fff4326feb4,90413087,0,0x0,8
tick,0x7fff4326feb4,90429383,0,0x0,8
tick,0x7fff4326feb4,90444718,0,0x0,8
tick,0x7fff4326feb4,90459959,0,0x0,8
tick,0x7fff4326feb4,90475975,0,0x0,8
tick,0x7fff4326feb4,90491268,0,0x0,8
tick,0x7fff4326feb4,90507082,0,0x0,8
tick,0x7fff4326feb4,90522782,0,0x0,8
tick,0x7fff4326feb4,90537671,0,0x0,8
tick,0x7fff4326feb4,90552985,0,0x0,8
tick,0x7fff4326feb4,90568569,0,0x0,8
tick,0x7fff4326feb4,90584088,0,0x0,8
tick,0x7fff4326feb4,90599342,0,0x0,8
tick,0x7fff4326feb4,90615044,0,0x0,8
tick,0x7fff4326feb4,90630499,0,0x0,8
tick,0x7fff4326feb4,90646265,0,0x0,8
tick,0x7fff4326feb4,90661748,0,0x0,8
tick,0x7fff4326feb4,90677423,0,0x0,8
tick,0x7fff4326feb4,90693189,0,0x0,8
tick,0x7fff4326feb4,90708597,0,0x0,8
tick,0x7fff4326feb4,90724043,0,0x0,8
tick,0x7fff4326feb4,90739502,0,0x0,8
tick,0x7fff4326feb4,90754629,0,0x0,8
tick,0x7fff4326feb4,90769967,0,0x0,8
tick,0x7fff4326feb4,90785992,0,0x0,8
tick,0x7fff4326feb4,90802019,0,0x0,8
tick,0x7fff4326feb4,90818016,0,0x0,8
tick,0x7fff4326feb4,90834019,0,0x0,8
tick,0x7fff4326feb4,90849484,0,0x0,8
tick,0x7fff4326feb4,90865504,0,0x0,8
tick,0x7fff4326feb4,90880798,0,0x0,8
tick,0x7fff4326feb4,90896553,0,0x0,8
tick,0x7fff4326feb4,90912001,0,0x0,8
tick,0x7fff4326feb4,90927528,0,0x0,8
tick,0x7fff4326feb4,90942669,0,0x0,8
tick,0x7fff4326feb4,90957911,0,0x0,8
tick,0x7fff4326feb4,90973533,0,0x0,8
tick,0x7fff4326feb4,90989555,0,0x0,8
tick,0x7fff4326feb4,91005528,0,0x0,8
tick,0x7fff4326feb4,91020543,0,0x0,8
tick,0x7fff4326feb4,91036564,0,0x0,8
tick,0x7fff4326feb4,91052010,0,0x0,8
tick,0x7fff4326feb4,91067779,0,0x0,8
tick,0x7fff4326feb4,91083739,0,0x0,8
tick,0x7fff4326feb4,91098722,0,0x0,8
tick,0x7fff4326feb4,91114030,0,0x0,8
tick,0x7fff4326feb4,91130343,0,0x0,8
tick,0x7fff4326feb4,91146103,0,0x0,8
tick,0x7fff4326feb4,91162013,0,0x0,8
tick,0x7fff4326feb4,91177448,0,0x0,8
tick,0x7fff4326feb4,91192809,0,0x0,8
tick,0x7fff4326feb4,91208992,0,0x0,8
tick,0x7fff4326feb4,91224099,0,0x0,8
tick,0x7fff4326feb4,91239799,0,0x0,8
tick,0x7fff4326feb4,91255522,0,0x0,8
tick,0x7fff4326feb4,91271545,0,0x0,8
tick,0x7fff4326feb4,91286557,0,0x0,8
tick,0x7fff4326feb4,91302573,0,0x0,8
tick,0x7fff4326feb4,91318015,0,0x0,8
tick,0x7fff4326feb4,91333564,0,0x0,8
tick,0x7fff4326feb4,91348533,0,0x0,8
tick,0x7fff4326feb4,91364531,0,0x0,8
tick,0x7fff4326feb4,91379942,0,0x0,8
tick,0x7fff4326feb4,91395430,0,0x0,8
tick,0x7fff4326feb4,91410999,0,0x0,8
tick,0x7fff4326feb4,91427046,0,0x0,8
tick,0x7fff4326feb4,91442528,0,0x0,8
tick,0x7fff4326feb4,91458305,0,0x0,8
tick,0x7fff4326feb4,91473999,0,0x0,8
tick,0x7fff4326feb4,91489995,0,0x0,8
tick,0x7fff4326feb4,91506022,0,0x0,8
tick,0x7fff4326feb4,91522012,0,0x0,8
tick,0x7fff4326feb4,91537666,0,0x0,8
tick,0x7fff4326feb4,91553009,0,0x0,8
tick,0x7fff4326feb4,91569157,0,0x0,8
tick,0x7fff4326feb4,91584507,0,0x0,8
tick,0x7fff4326feb4,91599516,0,0x0,8
tick,0x7fff4326feb4,91615586,0,0x0,8
tick,0x7fff4326feb4,91631671,0,0x0,8
tick,0x7fff4326feb4,91646391,0,0x0,8
tick,0x7fff4326feb4,91661773,0,0x0,8
tick,0x7fff4326feb4,91677623,0,0x0,8
tick,0x7fff4326feb4,91692951,0,0x0,8
tick,0x7fff4326feb4,91708430,0,0x0,8
tick,0x7fff4326feb4,91723351,0,0x0,8
tick,0x7fff4326feb4,91739367,0,0x0,8
tick,0x7fff4326feb4,91754567,0,0x0,8
tick,0x7fff4326feb4,91770432,0,0x0,8
tick,0x7fff4326feb4,91786118,0,0x0,8
tick,0x7fff4326feb4,91802130,0,0x0,8
tick,0x7fff4326feb4,91818139,0,0x0,8
tick,0x7fff4326feb4,91833290,0,0x0,8
tick,0x7fff4326feb4,91848789,0,0x0,8
tick,0x7fff4326feb4,91864122,0,0x0,8
tick,0x7fff4326feb4,91880117,0,0x0,8
tick,0x7fff4326feb4,91895542,0,0x0,8
tick,0x7fff4326feb4,91910500,0,0x0,8
tick,0x7fff4326feb4,91926508,0,0x0,8
tick,0x7fff4326feb4,91942079,0,0x0,8
tick,0x7fff4326feb4,91957777,0,0x0,8
tick,0x7fff4326feb4,91974301,0,0x0,8
tick,0x7fff4326feb4,91989820,0,0x0,8
tick,0x7fff4326feb4,92005071,0,0x0,8
tick,0x7fff4326feb4,92020351,0,0x0,8
tick,0x7fff4326feb4,92035575,0,0x0,8
tick,0x7fff4326feb4,92051090,0,0x0,8
tick,0x7fff4326feb4,92066639,0,0x0,8
tick,0x7fff4326feb4,92082626,0,0x0,8
tick,0x7fff4326feb4,92098359,0,0x0,8
tick,0x7fff4326feb4,92114150,0,0x0,8
tick,0x7fff4326feb4,92129680,0,0x0,8
tick,0x7fff4326feb4,92145143,0,0x0,8
tick,0x7fff4326feb4,92160352,0,0x0,8
tick,0x7fff4326feb4,92176315,0,0x0,8
tick,0x7fff4326feb4,92191778,0,0x0,8
tick,0x7fff4326feb4,92207132,0,0x0,8
tick,0x7fff4326feb4,92222117,0,0x0,8
tick,0x7fff4326feb4,92237790,0,0x0,8
tick,0x7fff4326feb4,92253074,0,0x0,8
tick,0x7fff4326feb4,92268519,0,0x0,8
tick,0x7fff4326feb4,92283893,0,0x0,8
tick,0x7fff4326feb4,92299298,0,0x0,8
tick,0x7fff4326feb4,92315211,0,0x0,8
tick,0x7fff4326feb4,92331400,0,0x0,8
tick,0x7fff4326feb4,92346808,0,0x0,8
tick,0x7fff4326feb4,92361805,0,0x0,8
tick,0x7fff4326feb4,92377195,0,0x0,8
tick,0x7fff4326feb4,92393041,0,0x0,8
tick,0x7fff4326feb4,92409210,0,0x0,8
tick,0x7fff4326feb4,92425613,0,0x0,8
tick,0x7fff4326feb4,92440706,0,0x0,8
tick,0x7fff4326feb4,92456775,0,0x0,8
tick,0x7fff4326feb4,92472091,0,0x0,8
tick,0x7fff4326feb4,92487832,0,0x0,8
tick,0x7fff4326feb4,92503778,0,0x0,8
tick,0x7fff4326feb4,92518843,0,0x0,8
tick,0x7fff4326feb4,92534222,0,0x0,8
tick,0x7fff4326feb4,92549560,0,0x0,8
tick,0x7fff4326feb4,92565550,0,0x0,8
tick,0x7fff4326feb4,92581541,0,0x0,8
tick,0x7fff4326feb4,92597532,0,0x0,8
tick,0x7fff4326feb4,92612542,0,0x0,8
tick,0x7fff4326feb4,92628090,0,0x0,8
tick,0x7fff4326feb4,92644275,0,0x0,8
tick,0x7fff4326feb4,92659501,0,0x0,8
tick,0x7fff4326feb4,92675130,0,0x0,8
tick,0x7fff4326feb4,92691181,0,0x0,8
tick,0x7fff4326feb4,92706270,0,0x0,8
tick,0x7fff4326feb4,92722375,0,0x0,8
tick,0x7fff4326feb4,92738219,0,0x0,8
tick,0x7fff4326feb4,92754203,0,0x0,8
tick,0x7fff4326feb4,92769498,0,0x0,8
tick,0x7fff4326feb4,92785049,0,0x0,8
tick,0x7fff4326feb4,92800643,0,0x0,8
tick,0x7fff4326feb4,92816156,0,0x0,8
tick,0x7fff4326feb4,92831824,0,0x0,8
tick,0x7fff4326feb4,92847084,0,0x0,8
tick,0x7fff4326feb4,92862011,0,0x0,8
tick,0x7fff4326feb4,92878067,0,0x0,8
tick,0x7fff4326feb4,92894475,0,0x0,8
tick,0x7fff4326feb4,92910153,0,0x0,8
tick,0x7fff4326feb4,92925692,0,0x0,8
tick,0x7fff4326feb4,92941479,0,0x0,8
tick,0x7fff4326feb4,92957514,0,0x0,8
tick,0x7fff4326feb4,92972534,0,0x0,8
tick,0x7fff4326feb4,92988158,0,0x0,8
tick,0x7fff4326feb4,93004136,0,0x0,8
tick,0x7fff4326feb4,93020224,0,0x0,8
tick,0x7fff4326feb4,93036222,0,0x0,8
tick,0x7fff4326feb4,93051524,0,0x0,8
tick,0x7fff4326feb4,93066756,0,0x0,8
tick,0x7fff4326feb4,93082161,0,0x0,8
tick,0x7fff4326feb4,93097577,0,0x0,8
tick,0x7fff4326feb4,93112804,0,0x0,8
tick,0x7fff4326feb4,93127694,0,0x0,8
tick,0x7fff4326feb4,93142952,0,0x0,8
tick,0x7fff4326feb4,93158283,0,0x0,8
tick,0x7fff4326feb4,93173558,0,0x0,8
tick,0x7fff4326feb4,93189567,0,0x0,8
tick,0x7fff4326feb4,93205556,0,0x0,8
tick,0x7fff4326feb4,93220531,0,0x0,8
tick,0x7fff4326feb4,93235659,0,0x0,8
tick,0x7fff4326feb4,93250659,0,0x0,8
tick,0x7fff4326feb4,93266664,0,0x0,8
tick,0x7fff4326feb4,93281652,0,0x0,8
tick,0x7fff4326feb4,93297652,0,0x0,8
tick,0x7fff4326feb4,93312649,0,0x0,8
tick,0x7fff4326feb4,93328657,0,0x0,8
tick,0x7fff4326feb4,93344650,0,0x0,8
tick,0x7fff4326feb4,93360779,0,0x0,8
tick,0x7fff4326feb4,93376360,0,0x0,8
tick,0x7fff4326feb4,93391516,0,0x0,8
tick,0x7fff4326feb4,93406921,0,0x0,8
tick,0x7fff4326feb4,93422805,0,0x0,8
tick,0x7fff4326feb4,93439337,0,0x0,8
tick,0x7fff4326feb4,93454340,0,0x0,8
tick,0x7fff4326feb4,93470639,0,0x0,8
tick,0x7fff4326feb4,93486403,0,0x0,8
tick,0x7fff4326feb4,93501937,0,0x0,8
tick,0x7fff4326feb4,93517637,0,0x0,8
tick,0x7fff4326feb4,93533071,0,0x0,8
tick,0x7fff4326feb4,93548607,0,0x0,8
tick,0x7fff4326feb4,93564071,0,0x0,8
tick,0x7fff4326feb4,93580084,0,0x0,8
tick,0x7fff4326feb4,93596075,0,0x0,8
tick,0x7fff4326feb4,93612227,0,0x0,8
tick,0x7fff4326feb4,93627106,0,0x0,8
tick,0x7fff4326feb4,93642613,0,0x0,8
tick,0x7fff4326feb4,93658625,0,0x0,8
tick,0x7fff4326feb4,93673825,0,0x0,8
tick,0x7fff4326feb4,93689125,0,0x0,8
tick,0x7fff4326feb4,93704416,0,0x0,8
tick,0x7fff4326feb4,93719679,0,0x0,8
tick,0x7fff4326feb4,93735122,0,0x0,8
tick,0x7fff4326feb4,93750985,0,0x0,8
tick,0x7fff4326feb4,93766166,0,0x0,8
tick,0x7fff4326feb4,93781242,0,0x0,8
tick,0x7fff4326feb4,93796413,0,0x0,8
tick,0x7fff4326feb4,93811583,0,0x0,8
tick,0x7fff4326feb4,93827198,0,0x0,8
tick,0x7fff4326feb4,93842794,0,0x0,8
tick,0x7fff4326feb4,93857736,0,0x0,8
tick,0x7fff4326feb4,93873427,0,0x0,8
tick,0x7fff4326feb4,93888678,0,0x0,8
tick,0x7fff4326feb4,93904521,0,0x0,8
tick,0x7fff4326feb4,93920628,0,0x0,8
tick,0x7fff4326feb4,93936205,0,0x0,8
tick,0x7fff4326feb4,93952353,0,0x0,8
tick,0x7fff4326feb4,93967833,0,0x0,8
tick,0x7fff4326feb4,93983522,0,0x0,8
tick,0x7fff4326feb4,93999666,0,0x0,8
tick,0x7fff4326feb4,94015173,0,0x0,8
tick,0x7fff4326feb4,94030862,0,0x0,8
tick,0x7fff4326feb4,94046740,0,0x0,8
tick,0x7fff4326feb4,94061957,0,0x0,8
tick,0x7fff4326feb4,94077706,0,0x0,8
tick,0x7fff4326feb4,94093589,0,0x0,8
tick,0x7fff4326feb4,94109427,0,0x0,8
tick,0x7fff4326feb4,94124386,0,0x0,8
tick,0x7fff4326feb4,94140103,0,0x0,8
tick,0x7fff4326feb4,94156294,0,0x0,8
tick,0x7fff4326feb4,94171947,0,0x0,8
tick,0x7fff4326feb4,94187429,0,0x0,8
tick,0x7fff4326feb4,94202826,0,0x0,8
tick,0x7fff4326feb4,94218277,0,0x0,8
tick,0x7fff4326feb4,94233706,0,0x0,8
tick,0x7fff4326feb4,94249147,0,0x0,8
tick,0x7fff4326feb4,94264991,0,0x0,8
tick,0x7fff4326feb4,94280410,0,0x0,8
tick,0x7fff4326feb4,94295514,0,0x0,8
tick,0x7fff4326feb4,94311035,0,0x0,8
tick,0x7fff4326feb4,94326186,0,0x0,8
tick,0x7fff4326feb4,94342199,0,0x0,8
tick,0x7fff4326feb4,94358221,0,0x0,8
tick,0x7fff4326feb4,94373543,0,0x0,8
tick,0x7fff4326feb4,94388836,0,0x0,8
tick,0x7fff4326feb4,94404168,0,0x0,8
tick,0x7fff4326feb4,94419865,0,0x0,8
tick,0x7fff4326feb4,94435413,0,0x0,8
tick,0x7fff4326feb4,94450562,0,0x0,8
tick,0x7fff4326feb4,94465440,0,0x0,8
tick,0x7fff4326feb4,94481530,0,0x0,8
tick,0x7fff4326feb4,94497701,0,0x0,8
tick,0x7fff4326feb4,94513285,0,0x0,8
tick,0x7fff4326feb4,94528864,0,0x0,8
tick,0x7fff4326feb4,94544256,0,0x0,8
tick,0x7fff4326feb4,94559654,0,0x0,8
tick,0x7fff4326feb4,94576116,0,0x0,8
tick,0x7fff4326feb4,94591726,0,0x0,8
tick,0x7fff4326feb4,94607718,0,0x0,8
tick,0x7fff4326feb4,94623751,0,0x0,8
tick,0x7fff4326feb4,94639225,0,0x0,8
tick,0x7fff4326feb4,94654849,0,0x0,8
tick,0x7fff4326feb4,94670818,0,0x0,8
tick,0x7fff4326feb4,94685798,0,0x0,8
tick,0x7fff4326feb4,94700908,0,0x0,8
tick,0x7fff4326feb4,94716460,0,0x0,8
tick,0x7fff4326feb4,94731900,0,0x0,8
tick,0x7fff4326feb4,94748370,0,0x0,8
tick,0x7fff4326feb4,94762334,0,0x0,8
tick,0x7fff4326feb4,94778131,0,0x0,8
tick,0x7fff4326feb4,94793631,0,0x0,8
tick,0x7fff4326feb4,94808947,0,0x0,8
tick,0x7fff4326feb4,94824396,0,0x0,8
tick,0x7fff4326feb4,94840130,0,0x0,8
tick,0x7fff4326feb4,94855572,0,0x0,8
tick,0x7fff4326feb4,94871303,0,0x0,8
tick,0x7fff4326feb4,94887198,0,0x0,8
tick,0x7fff4326feb4,94902805,0,0x0,8
tick,0x7fff4326feb4,94918668,0,0x0,8
tick,0x7fff4326feb4,94934435,0,0x0,8
tick,0x7fff4326feb4,94949775,0,0x0,8
tick,0x7fff4326feb4,94965876,0,0x0,8
tick,0x7fff4326feb4,94982189,0,0x0,8
tick,0x7fff4326feb4,94997905,0,0x0,8
tick,0x7fff4326feb4,95012859,0,0x0,8
tick,0x7fff4326feb4,95028480,0,0x0,8
tick,0x7fff4326feb4,95043884,0,0x0,8
tick,0x7fff4326feb4,95060155,0,0x0,8
tick,0x7fff4326feb4,95075513,0,0x0,8
tick,0x7fff4326feb4,95090803,0,0x0,8
tick,0x7fff4326feb4,95106730,0,0x0,8
tick,0x7fff4326feb4,95122274,0,0x0,8
tick,0x7fff4326feb4,95138011,0,0x0,8
tick,0x7fff4326feb4,95154334,0,0x0,8
tick,0x7fff4326feb4,95169874,0,0x0,8
tick,0x7fff4326feb4,95185904,0,0x0,8
tick,0x7fff4326feb4,95201856,0,0x0,8
tick,0x7fff4326feb4,95217506,0,0x0,8
tick,0x7fff4326feb4,95233418,0,0x0,8
tick,0x7fff4326feb4,95248733,0,0x0,8
tick,0x7fff4326feb4,95263963,0,0x0,8
tick,0x7fff4326feb4,95279767,0,0x0,8
tick,0x7fff4326feb4,95295398,0,0x0,8
tick,0x7fff4326feb4,95311674,0,0x0,8
tick,0x7fff4326feb4,95327258,0,0x0,8
tick,0x7fff4326feb4,95343255,0,0x0,8
tick,0x7fff4326feb4,95359278,0,0x0,8
tick,0x7fff4326feb4,95374921,0,0x0,8
tick,0x7fff4326feb4,95390887,0,0x0,8
tick,0x7fff4326feb4,95406653,0,0x0,8
tick,0x7fff4326feb4,95421653,0,0x0,8
tick,0x7fff4326feb4,95437659,0,0x0,8
tick,0x7fff4326feb4,95453538,0,0x0,8
tick,0x7fff4326feb4,95468989,0,0x0,8
tick,0x7fff4326feb4,95484759,0,0x0,8
tick,0x7fff4326feb4,95500622,0,0x0,8
tick,0x7fff4326feb4,95516316,0,0x0,8
tick,0x7fff4326feb4,95532634,0,0x0,8
tick,0x7fff4326feb4,95547608,0,0x0,8
tick,0x7fff4326feb4,95562983,0,0x0,8
tick,0x7fff4326feb4,95578400,0,0x0,8
tick,0x7fff4326feb4,95594318,0,0x0,8
tick,0x7fff4326feb4,95609157,0,0x0,8
tick,0x7fff4326feb4,95624800,0,0x0,8
tick,0x7fff4326feb4,95640771,0,0x0,8
tick,0x7fff4326feb4,95656760,0,0x0,8
tick,0x7fff4326feb4,95672471,0,0x0,8
tick,0x7fff4326feb4,95688270,0,0x0,8
tick,0x7fff4326feb4,95704451,0,0x0,8
tick,0x7fff4326feb4,95720347,0,0x0,8
tick,0x7fff4326feb4,95736332,0,0x0,8
tick,0x7fff4326feb4,95751402,0,0x0,8
tick,0x7fff4326feb4,95767480,0,0x0,8
tick,0x7fff4326feb4,95782949,0,0x0,8
tick,0x7fff4326feb4,95799425,0,0x0,8
tick,0x7fff4326feb4,95814886,0,0x0,8
tick,0x7fff4326feb4,95831423,0,0x0,8
tick,0x7fff4326feb4,95846149,0,0x0,8
tick,0x7fff4326feb4,95862095,0,0x0,8
tick,0x7fff4326feb4,95877174,0,0x0,8
tick,0x7fff4326feb4,95892794,0,0x0,8
tick,0x7fff4326feb4,95908311,0,0x0,8
tick,0x7fff4326feb4,95923533,0,0x0,8
tick,0x7fff4326feb4,95938688,0,0x0,8
tick,0x7fff4326feb4,95954478,0,0x0,8
tick,0x7fff4326feb4,95969842,0,0x0,8
tick,0x7fff4326feb4,95985803,0,0x0,8
tick,0x7fff4326feb4,96001288,0,0x0,8
tick,0x7fff4326feb4,96017230,0,0x0,8
tick,0x7fff4326feb4,96031948,0,0x0,8
tick,0x7fff4326feb4,96047678,0,0x0,8
tick,0x7fff4326feb4,96063214,0,0x0,8
tick,0x7fff4326feb4,96078903,0,0x0,8
tick,0x7fff4326feb4,96094579,0,0x0,8
tick,0x7fff4326feb4,96110985,0,0x0,8
tick,0x7fff4326feb4,96126641,0,0x0,8
tick,0x7fff4326feb4,96141974,0,0x0,8
tick,0x7fff4326feb4,96158247,0,0x0,8
tick,0x7fff4326feb4,96174606,0,0x0,8
tick,0x7fff4326feb4,96190435,0,0x0,8
tick,0x7fff4326feb4,96206097,0,0x0,8
tick,0x7fff4326feb4,96221971,0,0x0,8
tick,0x7fff4326feb4,96237560,0,0x0,8
tick,0x7fff4326feb4,96253839,0,0x0,8
tick,0x7fff4326feb4,96269696,0,0x0,8
tick,0x7fff4326feb4,96285413,0,0x0,8
tick,0x7fff4326feb4,96300618,0,0x0,8
tick,0x7fff4326feb4,96316570,0,0x0,8
tick,0x7fff4326feb4,96331705,0,0x0,8
tick,0x7fff4326feb4,96347243,0,0x0,8
tick,0x7fff4326feb4,96363462,0,0x0,8
tick,0x7fff4326feb4,96379497,0,0x0,8
tick,0x7fff4326feb4,96394591,0,0x0,8
tick,0x7fff4326feb4,96410926,0,0x0,8
tick,0x7fff4326feb4,96425606,0,0x0,8
tick,0x7fff4326feb4,96441914,0,0x0,8
tick,0x7fff4326feb4,96457840,0,0x0,8
tick,0x7fff4326feb4,96473763,0,0x0,8
tick,0x7fff4326feb4,96489341,0,0x0,8
tick,0x7fff4326feb4,96505195,0,0x0,8
tick,0x7fff4326feb4,96521261,0,0x0,8
tick,0x7fff4326feb4,96536669,0,0x0,8
tick,0x7fff4326feb4,96551808,0,0x0,8
tick,0x7fff4326feb4,96567774,0,0x0,8
tick,0x7fff4326feb4,96583124,0,0x0,8
tick,0x7fff4326feb4,96598667,0,0x0,8
tick,0x7fff4326feb4,96613824,0,0x0,8
tick,0x7fff4326feb4,96628950,0,0x0,8
tick,0x7fff4326feb4,96644448,0,0x0,8
tick,0x7fff4326feb4,96659306,0,0x0,8
tick,0x7fff4326feb4,96674996,0,0x0,8
tick,0x7fff4326feb4,96690781,0,0x0,8
tick,0x7fff4326feb4,96706328,0,0x0,8
tick,0x7fff4326feb4,96721790,0,0x0,8
tick,0x7fff4326feb4,96737815,0,0x0,8
tick,0x7fff4326feb4,96753304,0,0x0,8
tick,0x7fff4326feb4,96768777,0,0x0,8
tick,0x7fff4326feb4,96785005,0,0x0,8
tick,0x7fff4326feb4,96800496,0,0x0,8
tick,0x7fff4326feb4,96816064,0,0x0,8
tick,0x7fff4326feb4,96831718,0,0x0,8
tick,0x7fff4326feb4,96846987,0,0x0,8
tick,0x7fff4326feb4,96862995,0,0x0,8
tick,0x7fff4326feb4,96878543,0,0x0,8
tick,0x7fff4326feb4,96893845,0,0x0,8
tick,0x7fff4326feb4,96909522,0,0x0,8
tick,0x7fff4326feb4,96925544,0,0x0,8
tick,0x7fff4326feb4,96941547,0,0x0,8
tick,0x7fff4326feb4,96957544,0,0x0,8
tick,0x7fff4326feb4,96972540,0,0x0,8
tick,0x7fff4326feb4,96987981,0,0x0,8
tick,0x7fff4326feb4,97003833,0,0x0,8
tick,0x7fff4326feb4,97019402,0,0x0,8
tick,0x7fff4326feb4,97034739,0,0x0,8
tick,0x7fff4326feb4,97050013,0,0x0,8
tick,0x7fff4326feb4,97065826,0,0x0,8
tick,0x7fff4326feb4,97081807,0,0x0,8
tick,0x7fff4326feb4,97096924,0,0x0,8
tick,0x7fff4326feb4,97112233,0,0x0,8
tick,0x7fff4326feb4,97127606,0,0x0,8
tick,0x7fff4326feb4,97143238,0,0x0,8
tick,0x7fff4326feb4,97158547,0,0x0,8
tick,0x7fff4326feb4,97174220,0,0x0,8
tick,0x7fff4326feb4,97189610,0,0x0,8
tick,0x7fff4326feb4,97205077,0,0x0,8
tick,0x7fff4326feb4,97220641,0,0x0,8
tick,0x7fff4326feb4,97236418,0,0x0,8
tick,0x7fff4326feb4,97251619,0,0x0,8
tick,0x7fff4326feb4,97267587,0,0x0,8
tick,0x7fff4326feb4,97283588,0,0x0,8
tick,0x7fff4326feb4,97299585,0,0x0,8
tick,0x7fff4326feb4,97315585,0,0x0,8
tick,0x7fff4326feb4,97331579,0,0x0,8
tick,0x7fff4326feb4,97347590,0,0x0,8
tick,0x7fff4326feb4,97362909,0,0x0,8
tick,0x7fff4326feb4,97378845,0,0x0,8
tick,0x7fff4326feb4,97394092,0,0x0,8
tick,0x7fff4326feb4,97410370,0,0x0,8
tick,0x7fff4326feb4,97425717,0,0x0,8
tick,0x7fff4326feb4,97440925,0,0x0,8
tick,0x7fff4326feb4,97456587,0,0x0,8
tick,0x7fff4326feb4,97472718,0,0x0,8
tick,0x7fff4326feb4,97488644,0,0x0,8
tick,0x7fff4326feb4,97504491,0,0x0,8
tick,0x7fff4326feb4,97520304,0,0x0,8
tick,0x7fff4326feb4,97535495,0,0x0,8
tick,0x7fff4326feb4,97551237,0,0x0,8
tick,0x7fff4326feb4,97566702,0,0x0,8
tick,0x7fff4326feb4,97582657,0,0x0,8
tick,0x7fff4326feb4,97597301,0,0x0,8
tick,0x7fff4326feb4,97612989,0,0x0,8
tick,0x7fff4326feb4,97628049,0,0x0,8
tick,0x7fff4326feb4,97644071,0,0x0,8
tick,0x7fff4326feb4,97659987,0,0x0,8
tick,0x7fff4326feb4,97675387,0,0x0,8
tick,0x7fff4326feb4,97690762,0,0x0,8
tick,0x7fff4326feb4,97705837,0,0x0,8
tick,0x7fff4326feb4,97720804,0,0x0,8
tick,0x7fff4326feb4,97736413,0,0x0,8
tick,0x7fff4326feb4,97752290,0,0x0,8
tick,0x7fff4326feb4,97768417,0,0x0,8
tick,0x7fff4326feb4,97784139,0,0x0,8
tick,0x7fff4326feb4,97799496,0,0x0,8
tick,0x7fff4326feb4,97814414,0,0x0,8
tick,0x7fff4326feb4,97830030,0,0x0,8
tick,0x7fff4326feb4,97845820,0,0x0,8
tick,0x7fff4326feb4,97861249,0,0x0,8
tick,0x7fff4326feb4,97877264,0,0x0,8
tick,0x7fff4326feb4,97892538,0,0x0,8
tick,0x7fff4326feb4,97908056,0,0x0,8
tick,0x7fff4326feb4,97923842,0,0x0,8
tick,0x7fff4326feb4,97939411,0,0x0,8
tick,0x7fff4326feb4,97954568,0,0x0,8
tick,0x7fff4326feb4,97970352,0,0x0,8
tick,0x7fff4326feb4,97985885,0,0x0,8
tick,0x7fff4326feb4,98001352,0,0x0,8
tick,0x7fff4326feb4,98016839,0,0x0,8
tick,0x7fff4326feb4,98032073,0,0x0,8
tick,0x7fff4326feb4,98047937,0,0x0,8
tick,0x7fff4326feb4,98063766,0,0x0,8
tick,0x7fff4326feb4,98079240,0,0x0,8
tick,0x7fff4326feb4,98094919,0,0x0,8
tick,0x7fff4326feb4,98110444,0,0x0,8
tick,0x7fff4326feb4,98125794,0,0x0,8
tick,0x7fff4326feb4,98140945,0,0x0,8
tick,0x7fff4326feb4,98157201,0,0x0,8
tick,0x7fff4326feb4,98172398,0,0x0,8
tick,0x7fff4326feb4,98188692,0,0x0,8
tick,0x7fff4326feb4,98204007,0,0x0,8
tick,0x7fff4326feb4,98219403,0,0x0,8
tick,0x7fff4326feb4,98234498,0,0x0,8
tick,0x7fff4326feb4,98250518,0,0x0,8
tick,0x7fff4326feb4,98265903,0,0x0,8
tick,0x7fff4326feb4,98281586,0,0x0,8
tick,0x7fff4326feb4,98296473,0,0x0,8
tick,0x7fff4326feb4,98312553,0,0x0,8
tick,0x7fff4326feb4,98327841,0,0x0,8
tick,0x7fff4326feb4,98343314,0,0x0,8
tick,0x7fff4326feb4,98359440,0,0x0,8
tick,0x7fff4326feb4,98375260,0,0x0,8
tick,0x7fff4326feb4,98390850,0,0x0,8
tick,0x7fff4326feb4,98405871,0,0x0,8
tick,0x7fff4326feb4,98420882,0,0x0,8
tick,0x7fff4326feb4,98436467,0,0x0,8
tick,0x7fff4326feb4,98451935,0,0x0,8
tick,0x7fff4326feb4,98467615,0,0x0,8
tick,0x7fff4326feb4,98483618,0,0x0,8
tick,0x7fff4326feb4,98498993,0,0x0,8
tick,0x7fff4326feb4,98514517,0,0x0,8
tick,0x7fff4326feb4,98530581,0,0x0,8
tick,0x7fff4326feb4,98546170,0,0x0,8
tick,0x7fff4326feb4,98561381,0,0x0,8
tick,0x7fff4326feb4,98576438,0,0x0,8
tick,0x7fff4326feb4,98592113,0,0x0,8
tick,0x7fff4326feb4,98608435,0,0x0,8
tick,0x7fff4326feb4,98624271,0,0x0,8
tick,0x7fff4326feb4,98639767,0,0x0,8
tick,0x7fff4326feb4,98655131,0,0x0,8
tick,0x7fff4326feb4,98670914,0,0x0,8
tick,0x7fff4326feb4,98686467,0,0x0,8
tick,0x7fff4326feb4,98701840,0,0x0,8
tick,0x7fff4326feb4,98717822,0,0x0,8
tick,0x7fff4326feb4,98732859,0,0x0,8
tick,0x7fff4326feb4,98748677,0,0x0,8
tick,0x7fff4326feb4,98763678,0,0x0,8
tick,0x7fff4326feb4,98778983,0,0x0,8
tick,0x7fff4326feb4,98795010,0,0x0,8
tick,0x7fff4326feb4,98811281,0,0x0,8
tick,0x7fff4326feb4,98827014,0,0x0,8
tick,0x7fff4326feb4,98842879,0,0x0,8
tick,0x7fff4326feb4,98858458,0,0x0,8
tick,0x7fff4326feb4,98874049,0,0x0,8
tick,0x7fff4326feb4,98889794,0,0x0,8
tick,0x7fff4326feb4,98905867,0,0x0,8
tick,0x7fff4326feb4,98921688,0,0x0,8
tick,0x7fff4326feb4,98937121,0,0x0,8
tick,0x7fff4326feb4,98952740,0,0x0,8
tick,0x7fff4326feb4,98968086,0,0x0,8
tick,0x7fff4326feb4,98983936,0,0x0,8
tick,0x7fff4326feb4,98999697,0,0x0,8
tick,0x7fff4326feb4,99015112,0,0x0,8
tick,0x7fff4326feb4,99030749,0,0x0,8
tick,0x7fff4326feb4,99046816,0,0x0,8
tick,0x7fff4326feb4,99061912,0,0x0,8
tick,0x7fff4326feb4,99078076,0,0x0,8
tick,0x7fff4326feb4,99093150,0,0x0,8
tick,0x7fff4326feb4,99108825,0,0x0,8
tick,0x7fff4326feb4,99124354,0,0x0,8
tick,0x7fff4326feb4,99139918,0,0x0,8
tick,0x7fff4326feb4,99154874,0,0x0,8
tick,0x7fff4326feb4,99170106,0,0x0,8
tick,0x7fff4326feb4,99186011,0,0x0,8
tick,0x7fff4326feb4,99201928,0,0x0,8
tick,0x7fff4326feb4,99217424,0,0x0,8
tick,0x7fff4326feb4,99232888,0,0x0,8
tick,0x7fff4326feb4,99248491,0,0x0,8
tick,0x7fff4326feb4,99263811,0,0x0,8
tick,0x7fff4326feb4,99279824,0,0x0,8
tick,0x7fff4326feb4,99295538,0,0x0,8
tick,0x7fff4326feb4,99311758,0,0x0,8
tick,0x7fff4326feb4,99327341,0,0x0,8
tick,0x7fff4326feb4,99343553,0,0x0,8
tick,0x7fff4326feb4,99358957,0,0x0,8
tick,0x7fff4326feb4,99374576,0,0x0,8
tick,0x7fff4326feb4,99389822,0,0x0,8
tick,0x7fff4326feb4,99405207,0,0x0,8
tick,0x7fff4326feb4,99421130,0,0x0,8
tick,0x7fff4326feb4,99436482,0,0x0,8
tick,0x7fff4326feb4,99451900,0,0x0,8
tick,0x7fff4326feb4,99467441,0,0x0,8
tick,0x7fff4326feb4,99483047,0,0x0,8
tick,0x7fff4326feb4,99498498,0,0x0,8
tick,0x7fff4326feb4,99514066,0,0x0,8
tick,0x7fff4326feb4,99529764,0,0x0,8
tick,0x7fff4326feb4,99545115,0,0x0,8
tick,0x7fff4326feb4,99560466,0,0x0,8
tick,0x7fff4326feb4,99576107,0,0x0,8
tick,0x7fff4326feb4,99591717,0,0x0,8
tick,0x7fff4326feb4,99607794,0,0x0,8
tick,0x7fff4326feb4,99623328,0,0x0,8
tick,0x7fff4326feb4,99639436,0,0x0,8
tick,0x7fff4326feb4,99655155,0,0x0,8
tick,0x7fff4326feb4,99670756,0,0x0,8
tick,0x7fff4326feb4,99686202,0,0x0,8
tick,0x7fff4326feb4,99701718,0,0x0,8
tick,0x7fff4326feb4,99717466,0,0x0,8
tick,0x7fff4326feb4,99733541,0,0x0,8
tick,0x7fff4326feb4,99748571,0,0x0,8
tick,0x7fff4326feb4,99764682,0,0x0,8
tick,0x7fff4326feb4,99779977,0,0x0,8
tick,0x7fff4326feb4,99795517,0,0x0,8
tick,0x7fff4326feb4,99811009,0,0x0,8
tick,0x7fff4326feb4,99826666,0,0x0,8
tick,0x7fff4326feb4,99842089,0,0x0,8
tick,0x7fff4326feb4,99857857,0,0x0,8
tick,0x7fff4326feb4,99873391,0,0x0,8
tick,0x7fff4326feb4,99889029,0,0x0,8
tick,0x7fff4326feb4,99905041,0,0x0,8
tick,0x7fff4326feb4,99920659,0,0x0,8
tick,0x7fff4326feb4,99936777,0,0x0,8
tick,0x7fff4326feb4,99952435,0,0x0,8
tick,0x7fff4326feb4,99968114,0,0x0,8
tick,0x7fff4326feb4,99983780,0,0x0,8
tick,0x7fff4326feb4,99999498,0,0x0,8
tick,0x7fff4326feb4,100015184,0,0x0,8
tick,0x7fff4326feb4,100030468,0,0x0,8
tick,0x7fff4326feb4,100045933,0,0x0,8
tick,0x7fff4326feb4,100061533,0,0x0,8
tick,0x7fff4326feb4,100077169,0,0x0,8
tick,0x7fff4326feb4,100092909,0,0x0,8
tick,0x7fff4326feb4,100108936,0,0x0,8
tick,0x7fff4326feb4,100124898,0,0x0,8
tick,0x7fff4326feb4,100140841,0,0x0,8
tick,0x7fff4326feb4,100155704,0,0x0,8
tick,0x7fff4326feb4,100171712,0,0x0,8
tick,0x7fff4326feb4,100188180,0,0x0,8
tick,0x7fff4326feb4,100203129,0,0x0,8
tick,0x7fff4326feb4,100218569,0,0x0,8
tick,0x7fff4326feb4,100233690,0,0x0,8
tick,0x7fff4326feb4,100248723,0,0x0,8
tick,0x7fff4326feb4,100264494,0,0x0,8
tick,0x7fff4326feb4,100280498,0,0x0,8
tick,0x7fff4326feb4,100296068,0,0x0,8
tick,0x7fff4326feb4,100311173,0,0x0,8
tick,0x7fff4326feb4,100326484,0,0x0,8
tick,0x7fff4326feb4,100341630,0,0x0,8
tick,0x7fff4326feb4,100356919,0,0x0,8
tick,0x7fff4326feb4,100372627,0,0x0,8
tick,0x7fff4326feb4,100388344,0,0x0,8
tick,0x7fff4326feb4,100404165,0,0x0,8
tick,0x7fff4326feb4,100419725,0,0x0,8
tick,0x7fff4326feb4,100435962,0,0x0,8
tick,0x7fff4326feb4,100451492,0,0x0,8
tick,0x7fff4326feb4,100467346,0,0x0,8
tick,0x7fff4326feb4,100483437,0,0x0,8
tick,0x7fff4326feb4,100499678,0,0x0,8
tick,0x7fff4326feb4,100515010,0,0x0,8
tick,0x7fff4326feb4,100530390,0,0x0,8
tick,0x7fff4326feb4,100545709,0,0x0,8
tick,0x7fff4326feb4,100561349,0,0x0,8
tick,0x7fff4326feb4,100577018,0,0x0,8
tick,0x7fff4326feb4,100593094,0,0x0,8
tick,0x7fff4326feb4,100608780,0,0x0,8
tick,0x7fff4326feb4,100624108,0,0x0,8
tick,0x7fff4326feb4,100639751,0,0x0,8
tick,0x7fff4326feb4,100655485,0,0x0,8
tick,0x7fff4326feb4,100670852,0,0x0,8
tick,0x7fff4326feb4,100687136,0,0x0,8
tick,0x7fff4326feb4,100703241,0,0x0,8
tick,0x7fff4326feb4,100719192,0,0x0,8
tick,0x7fff4326feb4,100735107,0,0x0,8
tick,0x7fff4326feb4,100750644,0,0x0,8
tick,0x7fff4326feb4,100765959,0,0x0,8
tick,0x7fff4326feb4,100781356,0,0x0,8
tick,0x7fff4326feb4,100797027,0,0x0,8
tick,0x7fff4326feb4,100812445,0,0x0,8
tick,0x7fff4326feb4,100827556,0,0x0,8
tick,0x7fff4326feb4,100842880,0,0x0,8
tick,0x7fff4326feb4,100859195,0,0x0,8
tick,0x7fff4326feb4,100875372,0,0x0,8
tick,0x7fff4326feb4,100891195,0,0x0,8
tick,0x7fff4326feb4,100907188,0,0x0,8
tick,0x7fff4326feb4,100922701,0,0x0,8
tick,0x7fff4326feb4,100938437,0,0x0,8
tick,0x7fff4326feb4,100954031,0,0x0,8
tick,0x7fff4326feb4,100969690,0,0x0,8
tick,0x7fff4326feb4,100985735,0,0x0,8
tick,0x7fff4326feb4,101001367,0,0x0,8
tick,0x7fff4326feb4,101016807,0,0x0,8
tick,0x7fff4326feb4,101032196,0,0x0,8
tick,0x7fff4326feb4,101047869,0,0x0,8
tick,0x7fff4326feb4,101063375,0,0x0,8
tick,0x7fff4326feb4,101079698,0,0x0,8
tick,0x7fff4326feb4,101095987,0,0x0,8
tick,0x7fff4326feb4,101111457,0,0x0,8
tick,0x7fff4326feb4,101127150,0,0x0,8
tick,0x7fff4326feb4,101143145,0,0x0,8
tick,0x7fff4326feb4,101158595,0,0x0,8
tick,0x7fff4326feb4,101174441,0,0x0,8
tick,0x7fff4326feb4,101190137,0,0x0,8
tick,0x7fff4326feb4,101206170,0,0x0,8
tick,0x7fff4326feb4,101221518,0,0x0,8
tick,0x7fff4326feb4,101237524,0,0x0,8
tick,0x7fff4326feb4,101253625,0,0x0,8
tick,0x7fff4326feb4,101269475,0,0x0,8
tick,0x7fff4326feb4,101285517,0,0x0,8
tick,0x7fff4326feb4,101300628,0,0x0,8
tick,0x7fff4326feb4,101316515,0,0x0,8
tick,0x7fff4326feb4,101332493,0,0x0,8
tick,0x7fff4326feb4,101348531,0,0x0,8
tick,0x7fff4326feb4,101364030,0,0x0,8
tick,0x7fff4326feb4,101379807,0,0x0,8
tick,0x7fff4326feb4,101395424,0,0x0,8
tick,0x7fff4326feb4,101410539,0,0x0,8
tick,0x7fff4326feb4,101425348,0,0x0,8
tick,0x7fff4326feb4,101440524,0,0x0,8
tick,0x7fff4326feb4,101456683,0,0x0,8
tick,0x7fff4326feb4,101471927,0,0x0,8
tick,0x7fff4326feb4,101487643,0,0x0,8
tick,0x7fff4326feb4,101503647,0,0x0,8
tick,0x7fff4326feb4,101518817,0,0x0,8
tick,0x7fff4326feb4,101534393,0,0x0,8
tick,0x7fff4326feb4,101549708,0,0x0,8
tick,0x7fff4326feb4,101565768,0,0x0,8
tick,0x7fff4326feb4,101581868,0,0x0,8
tick,0x7fff4326feb4,101597539,0,0x0,8
tick,0x7fff4326feb4,101612548,0,0x0,8
tick,0x7fff4326feb4,101627846,0,0x0,8
tick,0x7fff4326feb4,101643140,0,0x0,8
tick,0x7fff4326feb4,101658196,0,0x0,8
tick,0x7fff4326feb4,101673584,0,0x0,8
tick,0x7fff4326feb4,101689819,0,0x0,8
tick,0x7fff4326feb4,101706140,0,0x0,8
tick,0x7fff4326feb4,101721818,0,0x0,8
tick,0x7fff4326feb4,101736935,0,0x0,8
tick,0x7fff4326feb4,101752545,0,0x0,8
tick,0x7fff4326feb4,101768188,0,0x0,8
tick,0x7fff4326feb4,101783966,0,0x0,8
tick,0x7fff4326feb4,101799651,0,0x0,8
tick,0x7fff4326feb4,101815345,0,0x0,8
tick,0x7fff4326feb4,101831046,0,0x0,8
tick,0x7fff4326feb4,101846554,0,0x0,8
tick,0x7fff4326feb4,101862050,0,0x0,8
tick,0x7fff4326feb4,101878088,0,0x0,8
tick,0x7fff4326feb4,101894109,0,0x0,8
tick,0x7fff4326feb4,101910161,0,0x0,8
tick,0x7fff4326feb4,101925920,0,0x0,8
tick,0x7fff4326feb4,101941461,0,0x0,8
tick,0x7fff4326feb4,101957184,0,0x0,8
tick,0x7fff4326feb4,101972695,0,0x0,8
tick,0x7fff4326feb4,101987930,0,0x0,8
tick,0x7fff4326feb4,102003989,0,0x0,8
tick,0x7fff4326feb4,102019411,0,0x0,8
tick,0x7fff4326feb4,102035018,0,0x0,8
tick,0x7fff4326feb4,102051418,0,0x0,8
tick,0x7fff4326feb4,102067521,0,0x0,8
tick,0x7fff4326feb4,102083533,0,0x0,8
tick,0x7fff4326feb4,102099930,0,0x0,8
tick,0x7fff4326feb4,102115581,0,0x0,8
tick,0x7fff4326feb4,102131478,0,0x0,8
tick,0x7fff4326feb4,102147504,0,0x0,8
tick,0x7fff4326feb4,102163514,0,0x0,8
tick,0x7fff4326feb4,102178863,0,0x0,8
tick,0x7fff4326feb4,102194744,0,0x0,8
tick,0x7fff4326feb4,102210251,0,0x0,8
tick,0x7fff4326feb4,102225747,0,0x0,8
tick,0x7fff4326feb4,102241546,0,0x0,8
tick,0x7fff4326feb4,102256811,0,0x0,8
tick,0x7fff4326feb4,102272186,0,0x0,8
tick,0x7fff4326feb4,102288524,0,0x0,8
tick,0x7fff4326feb4,102304127,0,0x0,8
tick,0x7fff4326feb4,102320110,0,0x0,8
tick,0x7fff4326feb4,102335703,0,0x0,8
tick,0x7fff4326feb4,102351507,0,0x0,8
tick,0x7fff4326feb4,102366900,0,0x0,8
tick,0x7fff4326feb4,102382436,0,0x0,8
tick,0x7fff4326feb4,102398197,0,0x0,8
tick,0x7fff4326feb4,102414508,0,0x0,8
tick,0x7fff4326feb4,102429879,0,0x0,8
tick,0x7fff4326feb4,102445859,0,0x0,8
tick,0x7fff4326feb4,102461535,0,0x0,8
tick,0x7fff4326feb4,102477531,0,0x0,8
tick,0x7fff4326feb4,102493541,0,0x0,8
tick,0x7fff4326feb4,102509833,0,0x0,8
tick,0x7fff4326feb4,102525836,0,0x0,8
tick,0x7fff4326feb4,102541060,0,0x0,8
tick,0x7fff4326feb4,102557085,0,0x0,8
tick,0x7fff4326feb4,102572680,0,0x0,8
tick,0x7fff4326feb4,102587946,0,0x0,8
tick,0x7fff4326feb4,102602822,0,0x0,8
tick,0x7fff4326feb4,102618028,0,0x0,8
tick,0x7fff4326feb4,102633773,0,0x0,8
tick,0x7fff4326feb4,102649096,0,0x0,8
tick,0x7fff4326feb4,102665532,0,0x0,8
tick,0x7fff4326feb4,102681650,0,0x0,8
tick,0x7fff4326feb4,102697447,0,0x0,8
tick,0x7fff4326feb4,102713440,0,0x0,8
tick,0x7fff4326feb4,102728671,0,0x0,8
tick,0x7fff4326feb4,102743945,0,0x0,8
tick,0x7fff4326feb4,102759138,0,0x0,8
tick,0x7fff4326feb4,102775453,0,0x0,8
tick,0x7fff4326feb4,102791762,0,0x0,8
tick,0x7fff4326feb4,102807439,0,0x0,8
tick,0x7fff4326feb4,102822918,0,0x0,8
tick,0x7fff4326feb4,102838528,0,0x0,8
tick,0x7fff4326feb4,102854219,0,0x0,8
tick,0x7fff4326feb4,102869713,0,0x0,8
tick,0x7fff4326feb4,102885304,0,0x0,8
tick,0x7fff4326feb4,102900741,0,0x0,8
tick,0x7fff4326feb4,102916031,0,0x0,8
tick,0x7fff4326feb4,102931626,0,0x0,8
tick,0x7fff4326feb4,102947779,0,0x0,8
tick,0x7fff4326feb4,102964021,0,0x0,8
tick,0x7fff4326feb4,102979267,0,0x0,8
tick,0x7fff4326feb4,102994877,0,0x0,8
tick,0x7fff4326feb4,103011206,0,0x0,8
tick,0x7fff4326feb4,103027375,0,0x0,8
tick,0x7fff4326feb4,103042774,0,0x0,8
tick,0x7fff4326feb4,103058402,0,0x0,8
tick,0x7fff4326feb4,103073768,0,0x0,8
tick,0x7fff4326feb4,103089199,0,0x0,8
tick,0x7fff4326feb4,103105012,0,0x0,8
tick,0x7fff4326feb4,103120782,0,0x0,8
tick,0x7fff4326feb4,103135983,0,0x0,8
tick,0x7fff4326feb4,103151445,0,0x0,8
tick,0x7fff4326feb4,103166763,0,0x0,8
tick,0x7fff4326feb4,103182275,0,0x0,8
tick,0x7fff4326feb4,103196974,0,0x0,8
tick,0x7fff4326feb4,103212840,0,0x0,8
tick,0x7fff4326feb4,103229099,0,0x0,8
tick,0x7fff4326feb4,103244845,0,0x0,8
tick,0x7fff4326feb4,103259881,0,0x0,8
tick,0x7fff4326feb4,103275886,0,0x0,8
tick,0x7fff4326feb4,103291744,0,0x0,8
tick,0x7fff4326feb4,103307584,0,0x0,8
tick,0x7fff4326feb4,103323232,0,0x0,8
tick,0x7fff4326feb4,103338299,0,0x0,8
tick,0x7fff4326feb4,103353843,0,0x0,8
tick,0x7fff4326feb4,103369985,0,0x0,8
tick,0x7fff4326feb4,103385617,0,0x0,8
tick,0x7fff4326feb4,103401631,0,0x0,8
tick,0x7fff4326feb4,103417936,0,0x0,8
tick,0x7fff4326feb4,103433241,0,0x0,8
tick,0x7fff4326feb4,103448845,0,0x0,8
tick,0x7fff4326feb4,103464241,0,0x0,8
tick,0x7fff4326feb4,103480314,0,0x0,8
tick,0x7fff4326feb4,103496217,0,0x0,8
tick,0x7fff4326feb4,103511596,0,0x0,8
tick,0x7fff4326feb4,103527863,0,0x0,8
tick,0x7fff4326feb4,103542920,0,0x0,8
tick,0x7fff4326feb4,103558552,0,0x0,8
tick,0x7fff4326feb4,103573876,0,0x0,8
tick,0x7fff4326feb4,103590037,0,0x0,8
tick,0x7fff4326feb4,103605891,0,0x0,8
tick,0x7fff4326feb4,103620763,0,0x0,8
tick,0x7fff4326feb4,103636769,0,0x0,8
tick,0x7fff4326feb4,103652784,0,0x0,8
tick,0x7fff4326feb4,103668822,0,0x0,8
tick,0x7fff4326feb4,103685195,0,0x0,8
tick,0x7fff4326feb4,103700913,0,0x0,8
tick,0x7fff4326feb4,103716561,0,0x0,8
tick,0x7fff4326feb4,103732308,0,0x0,8
tick,0x7fff4326feb4,103747849,0,0x0,8
tick,0x7fff4326feb4,103763239,0,0x0,8
tick,0x7fff4326feb4,103779145,0,0x0,8
tick,0x7fff4326feb4,103794992,0,0x0,8
tick,0x7fff4326feb4,103811003,0,0x0,8
tick,0x7fff4326feb4,103826322,0,0x0,8
tick,0x7fff4326feb4,103842701,0,0x0,8
tick,0x7fff4326feb4,103858296,0,0x0,8
tick,0x7fff4326feb4,103872991,0,0x0,8
tick,0x7fff4326feb4,103888483,0,0x0,8
tick,0x7fff4326feb4,103904795,0,0x0,8
tick,0x7fff4326feb4,103920484,0,0x0,8
tick,0x7fff4326feb4,103935509,0,0x0,8
tick,0x7fff4326feb4,103951790,0,0x0,8
tick,0x7fff4326feb4,103966919,0,0x0,8
tick,0x7fff4326feb4,103982296,0,0x0,8
tick,0x7fff4326feb4,103997724,0,0x0,8
tick,0x7fff4326feb4,104012589,0,0x0,8
tick,0x7fff4326feb4,104027810,0,0x0,8
tick,0x7fff4326feb4,104042805,0,0x0,8
tick,0x7fff4326feb4,104058818,0,0x0,8
tick,0x7fff4326feb4,104073777,0,0x0,8
tick,0x7fff4326feb4,104089353,0,0x0,8
tick,0x7fff4326feb4,104104429,0,0x0,8
tick,0x7fff4326feb4,104119804,0,0x0,8
tick,0x7fff4326feb4,104134948,0,0x0,8
tick,0x7fff4326feb4,104150787,0,0x0,8
tick,0x7fff4326feb4,104166855,0,0x0,8
tick,0x7fff4326feb4,104182491,0,0x0,8
tick,0x7fff4326feb4,104197805,0,0x0,8
tick,0x7fff4326feb4,104213007,0,0x0,8
tick,0x7fff4326feb4,104228508,0,0x0,8
tick,0x7fff4326feb4,104244272,0,0x0,8
tick,0x7fff4326feb4,104260242,0,0x0,8
tick,0x7fff4326feb4,104275557,0,0x0,8
tick,0x7fff4326feb4,104291568,0,0x0,8
tick,0x7fff4326feb4,104306963,0,0x0,8
tick,0x7fff4326feb4,104322983,0,0x0,8
tick,0x7fff4326feb4,104338361,0,0x0,8
tick,0x7fff4326feb4,104353812,0,0x0,8
tick,0x7fff4326feb4,104369901,0,0x0,8
tick,0x7fff4326feb4,104385871,0,0x0,8
tick,0x7fff4326feb4,104401616,0,0x0,8
tick,0x7fff4326feb4,104417290,0,0x0,8
tick,0x7fff4326feb4,104432785,0,0x0,8
tick,0x7fff4326feb4,104448607,0,0x0,8
tick,0x7fff4326feb4,104464091,0,0x0,8
tick,0x7fff4326feb4,104479616,0,0x0,8
tick,0x7fff4326feb4,104495273,0,0x0,8
tick,0x7fff4326feb4,104510536,0,0x0,8
tick,0x7fff4326feb4,104526297,0,0x0,8
tick,0x7fff4326feb4,104541842,0,0x0,8
tick,0x7fff4326feb4,104557525,0,0x0,8
tick,0x7fff4326feb4,104573815,0,0x0,8
tick,0x7fff4326feb4,104589153,0,0x0,8
tick,0x7fff4326feb4,104605023,0,0x0,8
tick,0x7fff4326feb4,104621149,0,0x0,8
tick,0x7fff4326feb4,104637156,0,0x0,8
tick,0x7fff4326feb4,104652515,0,0x0,8
tick,0x7fff4326feb4,104667844,0,0x0,8
tick,0x7fff4326feb4,104683824,0,0x0,8
tick,0x7fff4326feb4,104699263,0,0x0,8
tick,0x7fff4326feb4,104715011,0,0x0,8
tick,0x7fff4326feb4,104731003,0,0x0,8
tick,0x7fff4326feb4,104746999,0,0x0,8
tick,0x7fff4326feb4,104762664,0,0x0,8
tick,0x7fff4326feb4,104777873,0,0x0,8
tick,0x7fff4326feb4,104793745,0,0x0,8
tick,0x7fff4326feb4,104809313,0,0x0,8
tick,0x7fff4326feb4,104824145,0,0x0,8
tick,0x7fff4326feb4,104840012,0,0x0,8
tick,0x7fff4326feb4,104855955,0,0x0,8
tick,0x7fff4326feb4,104871817,0,0x0,8
tick,0x7fff4326feb4,104886676,0,0x0,8
tick,0x7fff4326feb4,104902700,0,0x0,8
tick,0x7fff4326feb4,104918704,0,0x0,8
tick,0x7fff4326feb4,104933859,0,0x0,8
tick,0x7fff4326feb4,104949547,0,0x0,8
tick,0x7fff4326feb4,104965521,0,0x0,8
tick,0x7fff4326feb4,104981136,0,0x0,8
tick,0x7fff4326feb4,104996824,0,0x0,8
tick,0x7fff4326feb4,105013175,0,0x0,8
tick,0x7fff4326feb4,105029240,0,0x0,8
tick,0x7fff4326feb4,105045088,0,0x0,8
tick,0x7fff4326feb4,105060527,0,0x0,8
tick,0x7fff4326feb4,105076538,0,0x0,8
tick,0x7fff4326feb4,105092528,0,0x0,8
tick,0x7fff4326feb4,105108251,0,0x0,8
tick,0x7fff4326feb4,105124072,0,0x0,8
tick,0x7fff4326feb4,105139531,0,0x0,8
tick,0x7fff4326feb4,105154798,0,0x0,8
tick,0x7fff4326feb4,105170632,0,0x0,8
tick,0x7fff4326feb4,105185783,0,0x0,8
tick,0x7fff4326feb4,105201353,0,0x0,8
tick,0x7fff4326feb4,105216569,0,0x0,8
tick,0x7fff4326feb4,105232729,0,0x0,8
tick,0x7fff4326feb4,105248435,0,0x0,8
tick,0x7fff4326feb4,105264698,0,0x0,8
tick,0x7fff4326feb4,105280425,0,0x0,8
tick,0x7fff4326feb4,105296430,0,0x0,8
tick,0x7fff4326feb4,105312426,0,0x0,8
tick,0x7fff4326feb4,105328441,0,0x0,8
tick,0x7fff4326feb4,105343427,0,0x0,8
tick,0x7fff4326feb4,105358429,0,0x0,8
tick,0x7fff4326feb4,105373904,0,0x0,8
tick,0x7fff4326feb4,105389821,0,0x0,8
tick,0x7fff4326feb4,105405041,0,0x0,8
tick,0x7fff4326feb4,105420544,0,0x0,8
tick,0x7fff4326feb4,105435557,0,0x0,8
tick,0x7fff4326feb4,105451592,0,0x0,8
tick,0x7fff4326feb4,105467157,0,0x0,8
tick,0x7fff4326feb4,105482601,0,0x0,8
tick,0x7fff4326feb4,105498147,0,0x0,8
tick,0x7fff4326feb4,105514137,0,0x0,8
tick,0x7fff4326feb4,105530175,0,0x0,8
tick,0x7fff4326feb4,105546203,0,0x0,8
tick,0x7fff4326feb4,105561362,0,0x0,8
tick,0x7fff4326feb4,105576671,0,0x0,8
tick,0x7fff4326feb4,105592378,0,0x0,8
tick,0x7fff4326feb4,105608340,0,0x0,8
tick,0x7fff4326feb4,105624423,0,0x0,8
tick,0x7fff4326feb4,105639324,0,0x0,8
tick,0x7fff4326feb4,105655101,0,0x0,8
tick,0x7fff4326feb4,105670850,0,0x0,8
tick,0x7fff4326feb4,105686168,0,0x0,8
tick,0x7fff4326feb4,105701764,0,0x0,8
tick,0x7fff4326feb4,105717660,0,0x0,8
tick,0x7fff4326feb4,105732971,0,0x0,8
tick,0x7fff4326feb4,105748730,0,0x0,8
tick,0x7fff4326feb4,105764202,0,0x0,8
tick,0x7fff4326feb4,105779886,0,0x0,8
tick,0x7fff4326feb4,105795621,0,0x0,8
tick,0x7fff4326feb4,105811278,0,0x0,8
tick,0x7fff4326feb4,105826967,0,0x0,8
tick,0x7fff4326feb4,105842908,0,0x0,8
tick,0x7fff4326feb4,105858696,0,0x0,8
tick,0x7fff4326feb4,105874396,0,0x0,8
tick,0x7fff4326feb4,105890231,0,0x0,8
tick,0x7fff4326feb4,105906122,0,0x0,8
tick,0x7fff4326feb4,105922021,0,0x0,8
tick,0x7fff4326feb4,105937435,0,0x0,8
tick,0x7fff4326feb4,105953732,0,0x0,8
tick,0x7fff4326feb4,105970111,0,0x0,8
tick,0x7fff4326feb4,105985389,0,0x0,8
tick,0x7fff4326feb4,106000767,0,0x0,8
tick,0x7fff4326feb4,106015899,0,0x0,8
tick,0x7fff4326feb4,106031346,0,0x0,8
tick,0x7fff4326feb4,106046540,0,0x0,8
tick,0x7fff4326feb4,106061970,0,0x0,8
tick,0x7fff4326feb4,106077527,0,0x0,8
tick,0x7fff4326feb4,106092280,0,0x0,8
tick,0x7fff4326feb4,106107347,0,0x0,8
tick,0x7fff4326feb4,106123406,0,0x0,8
tick,0x7fff4326feb4,106139419,0,0x0,8
tick,0x7fff4326feb4,106154411,0,0x0,8
tick,0x7fff4326feb4,106170185,0,0x0,8
tick,0x7fff4326feb4,106185703,0,0x0,8
tick,0x7fff4326feb4,106201259,0,0x0,8
tick,0x7fff4326feb4,106216884,0,0x0,8
tick,0x7fff4326feb4,106232368,0,0x0,8
tick,0x7fff4326feb4,106247887,0,0x0,8
tick,0x7fff4326feb4,106263254,0,0x0,8
tick,0x7fff4326feb4,106279602,0,0x0,8
tick,0x7fff4326feb4,106295146,0,0x0,8
tick,0x7fff4326feb4,106310816,0,0x0,8
tick,0x7fff4326feb4,106326141,0,0x0,8
tick,0x7fff4326feb4,106341590,0,0x0,8
tick,0x7fff4326feb4,106356671,0,0x0,8
tick,0x7fff4326feb4,106371835,0,0x0,8
tick,0x7fff4326feb4,106387205,0,0x0,8
tick,0x7fff4326feb4,106402531,0,0x0,8
tick,0x7fff4326feb4,106418554,0,0x0,8
tick,0x7fff4326feb4,106433973,0,0x0,8
tick,0x7fff4326feb4,106448981,0,0x0,8
tick,0x7fff4326feb4,106463981,0,0x0,8
tick,0x7fff4326feb4,106479532,0,0x0,8
tick,0x7fff4326feb4,106494537,0,0x0,8
tick,0x7fff4326feb4,106509783,0,0x0,8
tick,0x7fff4326feb4,106525514,0,0x0,8
tick,0x7fff4326feb4,106541528,0,0x0,8
tick,0x7fff4326feb4,106557517,0,0x0,8
tick,0x7fff4326feb4,106573544,0,0x0,8
tick,0x7fff4326feb4,106588508,0,0x0,8
tick,0x7fff4326feb4,106604455,0,0x0,8
tick,0x7fff4326feb4,106620138,0,0x0,8
tick,0x7fff4326feb4,106635782,0,0x0,8
tick,0x7fff4326feb4,106651429,0,0x0,8
tick,0x7fff4326feb4,106666762,0,0x0,8
tick,0x7fff4326feb4,106682394,0,0x0,8
tick,0x7fff4326feb4,106698757,0,0x0,8
tick,0x7fff4326feb4,106714721,0,0x0,8
tick,0x7fff4326feb4,106730079,0,0x0,8
tick,0x7fff4326feb4,106746374,0,0x0,8
tick,0x7fff4326feb4,106762124,0,0x0,8
tick,0x7fff4326feb4,106776996,0,0x0,8
tick,0x7fff4326feb4,106792431,0,0x0,8
tick,0x7fff4326feb4,106808843,0,0x0,8
tick,0x7fff4326feb4,106823596,0,0x0,8
tick,0x7fff4326feb4,106838977,0,0x0,8
tick,0x7fff4326feb4,106854674,0,0x0,8
tick,0x7fff4326feb4,106870691,0,0x0,8
tick,0x7fff4326feb4,106886768,0,0x0,8
tick,0x7fff4326feb4,106903104,0,0x0,8
tick,0x7fff4326feb4,106919355,0,0x0,8
tick,0x7fff4326feb4,106934904,0,0x0,8
tick,0x7fff4326feb4,106950604,0,0x0,8
tick,0x7fff4326feb4,106966912,0,0x0,8
tick,0x7fff4326feb4,106982487,0,0x0,8
tick,0x7fff4326feb4,106998308,0,0x0,8
tick,0x7fff4326feb4,107014476,0,0x0,8
tick,0x7fff4326feb4,107030085,0,0x0,8
tick,0x7fff4326feb4,107045910,0,0x0,8
tick,0x7fff4326feb4,107061846,0,0x0,8
tick,0x7fff4326feb4,107077637,0,0x0,8
tick,0x7fff4326feb4,107093222,0,0x0,8
tick,0x7fff4326feb4,107109613,0,0x0,8
tick,0x7fff4326feb4,107125033,0,0x0,8
tick,0x7fff4326feb4,107140771,0,0x0,8
tick,0x7fff4326feb4,107156429,0,0x0,8
tick,0x7fff4326feb4,107172225,0,0x0,8
tick,0x7fff4326feb4,107188324,0,0x0,8
tick,0x7fff4326feb4,107204035,0,0x0,8
tick,0x7fff4326feb4,107219812,0,0x0,8
tick,0x7fff4326feb4,107235104,0,0x0,8
tick,0x7fff4326feb4,107250896,0,0x0,8
tick,0x7fff4326feb4,107266415,0,0x0,8
tick,0x7fff4326feb4,107281453,0,0x0,8
tick,0x7fff4326feb4,107296968,0,0x0,8
tick,0x7fff4326feb4,107311686,0,0x0,8
tick,0x7fff4326feb4,107327025,0,0x0,8
tick,0x7fff4326feb4,107342663,0,0x0,8
tick,0x7fff4326feb4,107358292,0,0x0,8
tick,0x7fff4326feb4,107373485,0,0x0,8
tick,0x7fff4326feb4,107388876,0,0x0,8
tick,0x7fff4326feb4,107404157,0,0x0,8
tick,0x7fff4326feb4,107419840,0,0x0,8
tick,0x7fff4326feb4,107435207,0,0x0,8
tick,0x7fff4326feb4,107451110,0,0x0,8
tick,0x7fff4326feb4,107466377,0,0x0,8
tick,0x7fff4326feb4,107481784,0,0x0,8
tick,0x7fff4326feb4,107497203,0,0x0,8
tick,0x7fff4326feb4,107512929,0,0x0,8
tick,0x7fff4326feb4,107528688,0,0x0,8
tick,0x7fff4326feb4,107544687,0,0x0,8
tick,0x7fff4326feb4,107560015,0,0x0,8
tick,0x7fff4326feb4,107576007,0,0x0,8
tick,0x7fff4326feb4,107592084,0,0x0,8
tick,0x7fff4326feb4,107607412,0,0x0,8
tick,0x7fff4326feb4,107623252,0,0x0,8
tick,0x7fff4326feb4,107638734,0,0x0,8
tick,0x7fff4326feb4,107654800,0,0x0,8
tick,0x7fff4326feb4,107670460,0,0x0,8
tick,0x7fff4326feb4,107686475,0,0x0,8
tick,0x7fff4326feb4,107702458,0,0x0,8
tick,0x7fff4326feb4,107718479,0,0x0,8
tick,0x7fff4326feb4,107734641,0,0x0,8
tick,0x7fff4326feb4,107750800,0,0x0,8
tick,0x7fff4326feb4,107765881,0,0x0,8
tick,0x7fff4326feb4,107781517,0,0x0,8
tick,0x7fff4326feb4,107797505,0,0x0,8
tick,0x7fff4326feb4,107812513,0,0x0,8
tick,0x7fff4326feb4,107827937,0,0x0,8
tick,0x7fff4326feb4,107843514,0,0x0,8
tick,0x7fff4326feb4,107859769,0,0x0,8
tick,0x7fff4326feb4,107875117,0,0x0,8
tick,0x7fff4326feb4,107891321,0,0x0,8
tick,0x7fff4326feb4,107906646,0,0x0,8
tick,0x7fff4326feb4,107922361,0,0x0,8
tick,0x7fff4326feb4,107938073,0,0x0,8
tick,0x7fff4326feb4,107954150,0,0x0,8
tick,0x7fff4326feb4,107969826,0,0x0,8
tick,0x7fff4326feb4,107985770,0,0x0,8
tick,0x7fff4326feb4,108001297,0,0x0,8
tick,0x7fff4326feb4,108017368,0,0x0,8
tick,0x7fff4326feb4,108032925,0,0x0,8
tick,0x7fff4326feb4,108048702,0,0x0,8
tick,0x7fff4326feb4,108064184,0,0x0,8
tick,0x7fff4326feb4,108079698,0,0x0,8
tick,0x7fff4326feb4,108095352,0,0x0,8
tick,0x7fff4326feb4,108111505,0,0x0,8
tick,0x7fff4326feb4,108126401,0,0x0,8
tick,0x7fff4326feb4,108142380,0,0x0,8
tick,0x7fff4326feb4,108157391,0,0x0,8
tick,0x7fff4326feb4,108173887,0,0x0,8
tick,0x7fff4326feb4,108189364,0,0x0,8
tick,0x7fff4326feb4,108205404,0,0x0,8
tick,0x7fff4326feb4,108220722,0,0x0,8
tick,0x7fff4326feb4,108236260,0,0x0,8
tick,0x7fff4326feb4,108252043,0,0x0,8
tick,0x7fff4326feb4,108267993,0,0x0,8
tick,0x7fff4326feb4,108282970,0,0x0,8
tick,0x7fff4326feb4,108298661,0,0x0,8
tick,0x7fff4326feb4,108314163,0,0x0,8
tick,0x7fff4326feb4,108330093,0,0x0,8
tick,0x7fff4326feb4,108345662,0,0x0,8
tick,0x7fff4326feb4,108361177,0,0x0,8
tick,0x7fff4326feb4,108377080,0,0x0,8
tick,0x7fff4326feb4,108392527,0,0x0,8
tick,0x7fff4326feb4,108408411,0,0x0,8
tick,0x7fff4326feb4,108423869,0,0x0,8
tick,0x7fff4326feb4,108440102,0,0x0,8
tick,0x7fff4326feb4,108456185,0,0x0,8
tick,0x7fff4326feb4,108471680,0,0x0,8
tick,0x7fff4326feb4,108487012,0,0x0,8
tick,0x7fff4326feb4,108502512,0,0x0,8
tick,0x7fff4326feb4,108517800,0,0x0,8
tick,0x7fff4326feb4,108532726,0,0x0,8
tick,0x7fff4326feb4,108548717,0,0x0,8
tick,0x7fff4326feb4,108564192,0,0x0,8
tick,0x7fff4326feb4,108580100,0,0x0,8
tick,0x7fff4326feb4,108595756,0,0x0,8
tick,0x7fff4326feb4,108612032,0,0x0,8
tick,0x7fff4326feb4,108628294,0,0x0,8
tick,0x7fff4326feb4,108642824,0,0x0,8
tick,0x7fff4326feb4,108658964,0,0x0,8
tick,0x7fff4326feb4,108674697,0,0x0,8
tick,0x7fff4326feb4,108690139,0,0x0,8
tick,0x7fff4326feb4,108706114,0,0x0,8
tick,0x7fff4326feb4,108721522,0,0x0,8
tick,0x7fff4326feb4,108736868,0,0x0,8
tick,0x7fff4326feb4,108751948,0,0x0,8
tick,0x7fff4326feb4,108767132,0,0x0,8
tick,0x7fff4326feb4,108782548,0,0x0,8
tick,0x7fff4326feb4,108797995,0,0x0,8
tick,0x7fff4326feb4,108813670,0,0x0,8
tick,0x7fff4326feb4,108829248,0,0x0,8
tick,0x7fff4326feb4,108845283,0,0x0,8
tick,0x7fff4326feb4,108860874,0,0x0,8
tick,0x7fff4326feb4,108876675,0,0x0,8
tick,0x7fff4326feb4,108892278,0,0x0,8
tick,0x7fff4326feb4,108907994,0,0x0,8
tick,0x7fff4326feb4,108923386,0,0x0,8
tick,0x7fff4326feb4,108939360,0,0x0,8
tick,0x7fff4326feb4,108954120,0,0x0,8
tick,0x7fff4326feb4,108970495,0,0x0,8
tick,0x7fff4326feb4,108986452,0,0x0,8
tick,0x7fff4326feb4,109001502,0,0x0,8
tick,0x7fff4326feb4,109017281,0,0x0,8
tick,0x7fff4326feb4,109032906,0,0x0,8
tick,0x7fff4326feb4,109048363,0,0x0,8
tick,0x7fff4326feb4,109063912,0,0x0,8
tick,0x7fff4326feb4,109079926,0,0x0,8
tick,0x7fff4326feb4,109095498,0,0x0,8
tick,0x7fff4326feb4,109110712,0,0x0,8
tick,0x7fff4326feb4,109126258,0,0x0,8
tick,0x7fff4326feb4,109142338,0,0x0,8
tick,0x7fff4326feb4,109158034,0,0x0,8
tick,0x7fff4326feb4,109173035,0,0x0,8
tick,0x7fff4326feb4,109188376,0,0x0,8
tick,0x7fff4326feb4,109203990,0,0x0,8
tick,0x7fff4326feb4,109219989,0,0x0,8
tick,0x7fff4326feb4,109235375,0,0x0,8
tick,0x7fff4326feb4,109251359,0,0x0,8
tick,0x7fff4326feb4,109267373,0,0x0,8
tick,0x7fff4326feb4,109283404,0,0x0,8
tick,0x7fff4326feb4,109298363,0,0x0,8
tick,0x7fff4326feb4,109314352,0,0x0,8
tick,0x7fff4326feb4,109330358,0,0x0,8
tick,0x7fff4326feb4,109346352,0,0x0,8
tick,0x7fff4326feb4,109362378,0,0x0,8
tick,0x7fff4326feb4,109378377,0,0x0,8
tick,0x7fff4326feb4,109393497,0,0x0,8
tick,0x7fff4326feb4,109409146,0,0x0,8
tick,0x7fff4326feb4,109425150,0,0x0,8
tick,0x7fff4326feb4,109440694,0,0x0,8
tick,0x7fff4326feb4,109456000,0,0x0,8
tick,0x7fff4326feb4,109471881,0,0x0,8
tick,0x7fff4326feb4,109487386,0,0x0,8
tick,0x7fff4326feb4,109502794,0,0x0,8
tick,0x7fff4326feb4,109518867,0,0x0,8
tick,0x7fff4326feb4,109535006,0,0x0,8
tick,0x7fff4326feb4,109551061,0,0x0,8
tick,0x7fff4326feb4,109566440,0,0x0,8
tick,0x7fff4326feb4,109581992,0,0x0,8
tick,0x7fff4326feb4,109597688,0,0x0,8
tick,0x7fff4326feb4,109612710,0,0x0,8
tick,0x7fff4326feb4,109627744,0,0x0,8
tick,0x7fff4326feb4,109643749,0,0x0,8
tick,0x7fff4326feb4,109659561,0,0x0,8
tick,0x7fff4326feb4,109675065,0,0x0,8
tick,0x7fff4326feb4,109691069,0,0x0,8
tick,0x7fff4326feb4,109706768,0,0x0,8
tick,0x7fff4326feb4,109722560,0,0x0,8
tick,0x7fff4326feb4,109738566,0,0x0,8
tick,0x7fff4326feb4,109753801,0,0x0,8
tick,0x7fff4326feb4,109769738,0,0x0,8
tick,0x7fff4326feb4,109785122,0,0x0,8
tick,0x7fff4326feb4,109800904,0,0x0,8
tick,0x7fff4326feb4,109817208,0,0x0,8
tick,0x7fff4326feb4,109832772,0,0x0,8
tick,0x7fff4326feb4,109848447,0,0x0,8
tick,0x7fff4326feb4,109864295,0,0x0,8
tick,0x7fff4326feb4,109880307,0,0x0,8
tick,0x7fff4326feb4,109896318,0,0x0,8
tick,0x7fff4326feb4,109911914,0,0x0,8
tick,0x7fff4326feb4,109928143,0,0x0,8
tick,0x7fff4326feb4,109943327,0,0x0,8
tick,0x7fff4326feb4,109958918,0,0x0,8
tick,0x7fff4326feb4,109974375,0,0x0,8
tick,0x7fff4326feb4,109989695,0,0x0,8
tick,0x7fff4326feb4,110006021,0,0x0,8
tick,0x7fff4326feb4,110022328,0,0x0,8
tick,0x7fff4326feb4,110038403,0,0x0,8
tick,0x7fff4326feb4,110054899,0,0x0,8
tick,0x7fff4326feb4,110069861,0,0x0,8
tick,0x7fff4326feb4,110085480,0,0x0,8
tick,0x7fff4326feb4,110101178,0,0x0,8
tick,0x7fff4326feb4,110116485,0,0x0,8
tick,0x7fff4326feb4,110132799,0,0x0,8
tick,0x7fff4326feb4,110148719,0,0x0,8
tick,0x7fff4326feb4,110164743,0,0x0,8
tick,0x7fff4326feb4,110180486,0,0x0,8
tick,0x7fff4326feb4,110196348,0,0x0,8
tick,0x7fff4326feb4,110212292,0,0x0,8
tick,0x7fff4326feb4,110228521,0,0x0,8
tick,0x7fff4326feb4,110244032,0,0x0,8
tick,0x7fff4326feb4,110260069,0,0x0,8
tick,0x7fff4326feb4,110275954,0,0x0,8
tick,0x7fff4326feb4,110291499,0,0x0,8
tick,0x7fff4326feb4,110306745,0,0x0,8
tick,0x7fff4326feb4,110322347,0,0x0,8
tick,0x7fff4326feb4,110338744,0,0x0,8
tick,0x7fff4326feb4,110355031,0,0x0,8
tick,0x7fff4326feb4,110370743,0,0x0,8
tick,0x7fff4326feb4,110386489,0,0x0,8
tick,0x7fff4326feb4,110401991,0,0x0,8
tick,0x7fff4326feb4,110418228,0,0x0,8
tick,0x7fff4326feb4,110433836,0,0x0,8
tick,0x7fff4326feb4,110449136,0,0x0,8
tick,0x7fff4326feb4,110464755,0,0x0,8
tick,0x7fff4326feb4,110480959,0,0x0,8
tick,0x7fff4326feb4,110496964,0,0x0,8
tick,0x7fff4326feb4,110512271,0,0x0,8
tick,0x7fff4326feb4,110527916,0,0x0,8
tick,0x7fff4326feb4,110543273,0,0x0,8
tick,0x7fff4326feb4,110558653,0,0x0,8
tick,0x7fff4326feb4,110574370,0,0x0,8
tick,0x7fff4326feb4,110589905,0,0x0,8
tick,0x7fff4326feb4,110605172,0,0x0,8
tick,0x7fff4326feb4,110621227,0,0x0,8
tick,0x7fff4326feb4,110636265,0,0x0,8
tick,0x7fff4326feb4,110651935,0,0x0,8
tick,0x7fff4326feb4,110667332,0,0x0,8
tick,0x7fff4326feb4,110683360,0,0x0,8
tick,0x7fff4326feb4,110698259,0,0x0,8
tick,0x7fff4326feb4,110713789,0,0x0,8
tick,0x7fff4326feb4,110729236,0,0x0,8
tick,0x7fff4326feb4,110744840,0,0x0,8
tick,0x7fff4326feb4,110760024,0,0x0,8
tick,0x7fff4326feb4,110776005,0,0x0,8
tick,0x7fff4326feb4,110791221,0,0x0,8
tick,0x7fff4326feb4,110806985,0,0x0,8
tick,0x7fff4326feb4,110821936,0,0x0,8
tick,0x7fff4326feb4,110837558,0,0x0,8
tick,0x7fff4326feb4,110853615,0,0x0,8
tick,0x7fff4326feb4,110868329,0,0x0,8
tick,0x7fff4326feb4,110883836,0,0x0,8
tick,0x7fff4326feb4,110899596,0,0x0,8
tick,0x7fff4326feb4,110915755,0,0x0,8
tick,0x7fff4326feb4,110931902,0,0x0,8
tick,0x7fff4326feb4,110947442,0,0x0,8
tick,0x7fff4326feb4,110962759,0,0x0,8
tick,0x7fff4326feb4,110978761,0,0x0,8
tick,0x7fff4326feb4,110994448,0,0x0,8
tick,0x7fff4326feb4,111010603,0,0x0,8
tick,0x7fff4326feb4,111026527,0,0x0,8
tick,0x7fff4326feb4,111041580,0,0x0,8
tick,0x7fff4326feb4,111057255,0,0x0,8
tick,0x7fff4326feb4,111072795,0,0x0,8
tick,0x7fff4326feb4,111088582,0,0x0,8
tick,0x7fff4326feb4,111104172,0,0x0,8
tick,0x7fff4326feb4,111119803,0,0x0,8
tick,0x7fff4326feb4,111135359,0,0x0,8
tick,0x7fff4326feb4,111151316,0,0x0,8
tick,0x7fff4326feb4,111165989,0,0x0,8
tick,0x7fff4326feb4,111181536,0,0x0,8
tick,0x7fff4326feb4,111197516,0,0x0,8
tick,0x7fff4326feb4,111212534,0,0x0,8
tick,0x7fff4326feb4,111228517,0,0x0,8
tick,0x7fff4326feb4,111244520,0,0x0,8
tick,0x7fff4326feb4,111259933,0,0x0,8
tick,0x7fff4326feb4,111275075,0,0x0,8
tick,0x7fff4326feb4,111290391,0,0x0,8
tick,0x7fff4326feb4,111306002,0,0x0,8
tick,0x7fff4326feb4,111321632,0,0x0,8
tick,0x7fff4326feb4,111337609,0,0x0,8
tick,0x7fff4326feb4,111353095,0,0x0,8
tick,0x7fff4326feb4,111368792,0,0x0,8
tick,0x7fff4326feb4,111384190,0,0x0,8
tick,0x7fff4326feb4,111399885,0,0x0,8
tick,0x7fff4326feb4,111415773,0,0x0,8
tick,0x7fff4326feb4,111431799,0,0x0,8
tick,0x7fff4326feb4,111447395,0,0x0,8
tick,0x7fff4326feb4,111462783,0,0x0,8
tick,0x7fff4326feb4,111478778,0,0x0,8
tick,0x7fff4326feb4,111494430,0,0x0,8
tick,0x7fff4326feb4,111510041,0,0x0,8
tick,0x7fff4326feb4,111524980,0,0x0,8
tick,0x7fff4326feb4,111540578,0,0x0,8
tick,0x7fff4326feb4,111555989,0,0x0,8
tick,0x7fff4326feb4,111571104,0,0x0,8
tick,0x7fff4326feb4,111587100,0,0x0,8
tick,0x7fff4326feb4,111602939,0,0x0,8
tick,0x7fff4326feb4,111618335,0,0x0,8
tick,0x7fff4326feb4,111634141,0,0x0,8
tick,0x7fff4326feb4,111650540,0,0x0,8
tick,0x7fff4326feb4,111666925,0,0x0,8
tick,0x7fff4326feb4,111681678,0,0x0,8
tick,0x7fff4326feb4,111697341,0,0x0,8
tick,0x7fff4326feb4,111713122,0,0x0,8
tick,0x7fff4326feb4,111729097,0,0x0,8
tick,0x7fff4326feb4,111744364,0,0x0,8
tick,0x7fff4326feb4,111760378,0,0x0,8
tick,0x7fff4326feb4,111776457,0,0x0,8
tick,0x7fff4326feb4,111791576,0,0x0,8
tick,0x7fff4326feb4,111807133,0,0x0,8
tick,0x7fff4326feb4,111823478,0,0x0,8
tick,0x7fff4326feb4,111839807,0,0x0,8
tick,0x7fff4326feb4,111855792,0,0x0,8
tick,0x7fff4326feb4,111871864,0,0x0,8
tick,0x7fff4326feb4,111887754,0,0x0,8
tick,0x7fff4326feb4,111902810,0,0x0,8
tick,0x7fff4326feb4,111918647,0,0x0,8
tick,0x7fff4326feb4,111934801,0,0x0,8
tick,0x7fff4326feb4,111950248,0,0x0,8
tick,0x7fff4326feb4,111966086,0,0x0,8
tick,0x7fff4326feb4,111982204,0,0x0,8
tick,0x7fff4326feb4,111998246,0,0x0,8
tick,0x7fff4326feb4,112014249,0,0x0,8
tick,0x7fff4326feb4,112029806,0,0x0,8
tick,0x7fff4326feb4,112045348,0,0x0,8
tick,0x7fff4326feb4,112060819,0,0x0,8
tick,0x7fff4326feb4,112076802,0,0x0,8
tick,0x7fff4326feb4,112092607,0,0x0,8
tick,0x7fff4326feb4,112107849,0,0x0,8
tick,0x7fff4326feb4,112123680,0,0x0,8
tick,0x7fff4326feb4,112139963,0,0x0,8
tick,0x7fff4326feb4,112155715,0,0x0,8
tick,0x7fff4326feb4,112171252,0,0x0,8
tick,0x7fff4326feb4,112186951,0,0x0,8
tick,0x7fff4326feb4,112202581,0,0x0,8
tick,0x7fff4326feb4,112218520,0,0x0,8
tick,0x7fff4326feb4,112233988,0,0x0,8
tick,0x7fff4326feb4,112249971,0,0x0,8
tick,0x7fff4326feb4,112265360,0,0x0,8
tick,0x7fff4326feb4,112280984,0,0x0,8
tick,0x7fff4326feb4,112296128,0,0x0,8
tick,0x7fff4326feb4,112311819,0,0x0,8
tick,0x7fff4326feb4,112327859,0,0x0,8
tick,0x7fff4326feb4,112343815,0,0x0,8
tick,0x7fff4326feb4,112360218,0,0x0,8
tick,0x7fff4326feb4,112375814,0,0x0,8
tick,0x7fff4326feb4,112391644,0,0x0,8
tick,0x7fff4326feb4,112407112,0,0x0,8
tick,0x7fff4326feb4,112422462,0,0x0,8
tick,0x7fff4326feb4,112438125,0,0x0,8
tick,0x7fff4326feb4,112452867,0,0x0,8
tick,0x7fff4326feb4,112468291,0,0x0,8
tick,0x7fff4326feb4,112483323,0,0x0,8
tick,0x7fff4326feb4,112498459,0,0x0,8
tick,0x7fff4326feb4,112513924,0,0x0,8
tick,0x7fff4326feb4,112529082,0,0x0,8
tick,0x7fff4326feb4,112544372,0,0x0,8
tick,0x7fff4326feb4,112559538,0,0x0,8
tick,0x7fff4326feb4,112574948,0,0x0,8
tick,0x7fff4326feb4,112590357,0,0x0,8
tick,0x7fff4326feb4,112605674,0,0x0,8
tick,0x7fff4326feb4,112621659,0,0x0,8
tick,0x7fff4326feb4,112637122,0,0x0,8
tick,0x7fff4326feb4,112653135,0,0x0,8
tick,0x7fff4326feb4,112668499,0,0x0,8
tick,0x7fff4326feb4,112684468,0,0x0,8
tick,0x7fff4326feb4,112699613,0,0x0,8
tick,0x7fff4326feb4,112714862,0,0x0,8
tick,0x7fff4326feb4,112729917,0,0x0,8
tick,0x7fff4326feb4,112745923,0,0x0,8
tick,0x7fff4326feb4,112761242,0,0x0,8
tick,0x7fff4326feb4,112776693,0,0x0,8
tick,0x7fff4326feb4,112791830,0,0x0,8
tick,0x7fff4326feb4,112807661,0,0x0,8
tick,0x7fff4326feb4,112823322,0,0x0,8
tick,0x7fff4326feb4,112839030,0,0x0,8
tick,0x7fff4326feb4,112854315,0,0x0,8
tick,0x7fff4326feb4,112869844,0,0x0,8
tick,0x7fff4326feb4,112885291,0,0x0,8
tick,0x7fff4326feb4,112900557,0,0x0,8
tick,0x7fff4326feb4,112915828,0,0x0,8
tick,0x7fff4326feb4,112931216,0,0x0,8
tick,0x7fff4326feb4,112947029,0,0x0,8
tick,0x7fff4326feb4,112962847,0,0x0,8
tick,0x7fff4326feb4,112978844,0,0x0,8
tick,0x7fff4326feb4,112994165,0,0x0,8
tick,0x7fff4326feb4,113009401,0,0x0,8
tick,0x7fff4326feb4,113024966,0,0x0,8
tick,0x7fff4326feb4,113040861,0,0x0,8
tick,0x7fff4326feb4,113056447,0,0x0,8
tick,0x7fff4326feb4,113071967,0,0x0,8
tick,0x7fff4326feb4,113087740,0,0x0,8
tick,0x7fff4326feb4,113103421,0,0x0,8
tick,0x7fff4326feb4,113118289,0,0x0,8
tick,0x7fff4326feb4,113134586,0,0x0,8
tick,0x7fff4326feb4,113150588,0,0x0,8
tick,0x7fff4326feb4,113165973,0,0x0,8
tick,0x7fff4326feb4,113181648,0,0x0,8
tick,0x7fff4326feb4,113198303,0,0x0,8
tick,0x7fff4326feb4,113212340,0,0x0,8
tick,0x7fff4326feb4,113227670,0,0x0,8
tick,0x7fff4326feb4,113242989,0,0x0,8
tick,0x7fff4326feb4,113258987,0,0x0,8
tick,0x7fff4326feb4,113274059,0,0x0,8
tick,0x7fff4326feb4,113289285,0,0x0,8
tick,0x7fff4326feb4,113305285,0,0x0,8
tick,0x7fff4326feb4,113320941,0,0x0,8
tick,0x7fff4326feb4,113336287,0,0x0,8
tick,0x7fff4326feb4,113351285,0,0x0,8
tick,0x7fff4326feb4,113367668,0,0x0,8
tick,0x7fff4326feb4,113383680,0,0x0,8
tick,0x7fff4326feb4,113399494,0,0x0,8
tick,0x7fff4326feb4,113415609,0,0x0,8
tick,0x7fff4326feb4,113431107,0,0x0,8
tick,0x7fff4326feb4,113446858,0,0x0,8
tick,0x7fff4326feb4,113462627,0,0x0,8
tick,0x7fff4326feb4,113478207,0,0x0,8
tick,0x7fff4326feb4,113494607,0,0x0,8
tick,0x7fff4326feb4,113510270,0,0x0,8
tick,0x7fff4326feb4,113526343,0,0x0,8
tick,0x7fff4326feb4,113541407,0,0x0,8
tick,0x7fff4326feb4,113557809,0,0x0,8
tick,0x7fff4326feb4,113573494,0,0x0,8
tick,0x7fff4326feb4,113589165,0,0x0,8
tick,0x7fff4326feb4,113605167,0,0x0,8
tick,0x7fff4326feb4,113620856,0,0x0,8
tick,0x7fff4326feb4,113637045,0,0x0,8
tick,0x7fff4326feb4,113653054,0,0x0,8
tick,0x7fff4326feb4,113668867,0,0x0,8
tick,0x7fff4326feb4,113684876,0,0x0,8
tick,0x7fff4326feb4,113700245,0,0x0,8
tick,0x7fff4326feb4,113715890,0,0x0,8
tick,0x7fff4326feb4,113731509,0,0x0,8
tick,0x7fff4326feb4,113746563,0,0x0,8
tick,0x7fff4326feb4,113762006,0,0x0,8
tick,0x7fff4326feb4,113778045,0,0x0,8
tick,0x7fff4326feb4,113793529,0,0x0,8
tick,0x7fff4326feb4,113809109,0,0x0,8
tick,0x7fff4326feb4,113824506,0,0x0,8
tick,0x7fff4326feb4,113840544,0,0x0,8
tick,0x7fff4326feb4,113855963,0,0x0,8
tick,0x7fff4326feb4,113871540,0,0x0,8
tick,0x7fff4326feb4,113886959,0,0x0,8
tick,0x7fff4326feb4,113901989,0,0x0,8
tick,0x7fff4326feb4,113917352,0,0x0,8
tick,0x7fff4326feb4,113933055,0,0x0,8
tick,0x7fff4326feb4,113948564,0,0x0,8
tick,0x7fff4326feb4,113964195,0,0x0,8
tick,0x7fff4326feb4,113979103,0,0x0,8
tick,0x7fff4326feb4,113994399,0,0x0,8
tick,0x7fff4326feb4,114010018,0,0x0,8
tick,0x7fff4326feb4,114026326,0,0x0,8
tick,0x7fff4326feb4,114042384,0,0x0,8
tick,0x7fff4326feb4,114057919,0,0x0,8
tick,0x7fff4326feb4,114074032,0,0x0,8
tick,0x7fff4326feb4,114089452,0,0x0,8
tick,0x7fff4326feb4,114105034,0,0x0,8
tick,0x7fff4326feb4,114120271,0,0x0,8
tick,0x7fff4326feb4,114136268,0,0x0,8
tick,0x7fff4326feb4,114152265,0,0x0,8
tick,0x7fff4326feb4,114166977,0,0x0,8
tick,0x7fff4326feb4,114182530,0,0x0,8
tick,0x7fff4326feb4,114198277,0,0x0,8
tick,0x7fff4326feb4,114214001,0,0x0,8
tick,0x7fff4326feb4,114229026,0,0x0,8
tick,0x7fff4326feb4,114244386,0,0x0,8
tick,0x7fff4326feb4,114259985,0,0x0,8
tick,0x7fff4326feb4,114276012,0,0x0,8
tick,0x7fff4326feb4,114291013,0,0x0,8
tick,0x7fff4326feb4,114306350,0,0x0,8
tick,0x7fff4326feb4,114322206,0,0x0,8
tick,0x7fff4326feb4,114337899,0,0x0,8
tick,0x7fff4326feb4,114353512,0,0x0,8
tick,0x7fff4326feb4,114369526,0,0x0,8
tick,0x7fff4326feb4,114385512,0,0x0,8
tick,0x7fff4326feb4,114400422,0,0x0,8
tick,0x7fff4326feb4,114416241,0,0x0,8
tick,0x7fff4326feb4,114431459,0,0x0,8
tick,0x7fff4326feb4,114446672,0,0x0,8
tick,0x7fff4326feb4,114461999,0,0x0,8
tick,0x7fff4326feb4,114477260,0,0x0,8
tick,0x7fff4326feb4,114493041,0,0x0,8
tick,0x7fff4326feb4,114508492,0,0x0,8
tick,0x7fff4326feb4,114524047,0,0x0,8
tick,0x7fff4326feb4,114539778,0,0x0,8
tick,0x7fff4326feb4,114555368,0,0x0,8
tick,0x7fff4326feb4,114570697,0,0x0,8
tick,0x7fff4326feb4,114586649,0,0x0,8
tick,0x7fff4326feb4,114602710,0,0x0,8
tick,0x7fff4326feb4,114618199,0,0x0,8
tick,0x7fff4326feb4,114633546,0,0x0,8
tick,0x7fff4326feb4,114648701,0,0x0,8
tick,0x7fff4326feb4,114664208,0,0x0,8
tick,0x7fff4326feb4,114680002,0,0x0,8
tick,0x7fff4326feb4,114695143,0,0x0,8
tick,0x7fff4326feb4,114710770,0,0x0,8
tick,0x7fff4326feb4,114726337,0,0x0,8
tick,0x7fff4326feb4,114741786,0,0x0,8
tick,0x7fff4326feb4,114757263,0,0x0,8
tick,0x7fff4326feb4,114772543,0,0x0,8
tick,0x7fff4326feb4,114787918,0,0x0,8
tick,0x7fff4326feb4,114803480,0,0x0,8
tick,0x7fff4326feb4,114818756,0,0x0,8
tick,0x7fff4326feb4,114834675,0,0x0,8
tick,0x7fff4326feb4,114850269,0,0x0,8
tick,0x7fff4326feb4,114865579,0,0x0,8
tick,0x7fff4326feb4,114881533,0,0x0,8
tick,0x7fff4326feb4,114897460,0,0x0,8
tick,0x7fff4326feb4,114912357,0,0x0,8
tick,0x7fff4326feb4,114927742,0,0x0,8
tick,0x7fff4326feb4,114944092,0,0x0,8
tick,0x7fff4326feb4,114959861,0,0x0,8
tick,0x7fff4326feb4,114975090,0,0x0,8
tick,0x7fff4326feb4,114990472,0,0x0,8
tick,0x7fff4326feb4,115006443,0,0x0,8
tick,0x7fff4326feb4,115021903,0,0x0,8
tick,0x7fff4326feb4,115037972,0,0x0,8
tick,0x7fff4326feb4,115053220,0,0x0,8
tick,0x7fff4326feb4,115069215,0,0x0,8
tick,0x7fff4326feb4,115085223,0,0x0,8
tick,0x7fff4326feb4,115100937,0,0x0,8
tick,0x7fff4326feb4,115116239,0,0x0,8
tick,0x7fff4326feb4,115131920,0,0x0,8
tick,0x7fff4326feb4,115147305,0,0x0,8
tick,0x7fff4326feb4,115162547,0,0x0,8
tick,0x7fff4326feb4,115177968,0,0x0,8
tick,0x7fff4326feb4,115193731,0,0x0,8
tick,0x7fff4326feb4,115208926,0,0x0,8
tick,0x7fff4326feb4,115224358,0,0x0,8
tick,0x7fff4326feb4,115240307,0,0x0,8
tick,0x7fff4326feb4,115256535,0,0x0,8
tick,0x7fff4326feb4,115272067,0,0x0,8
tick,0x7fff4326feb4,115287540,0,0x0,8
tick,0x7fff4326feb4,115302746,0,0x0,8
tick,0x7fff4326feb4,115318530,0,0x0,8
tick,0x7fff4326feb4,115334539,0,0x0,8
tick,0x7fff4326feb4,115350095,0,0x0,8
tick,0x7fff4326feb4,115365481,0,0x0,8
tick,0x7fff4326feb4,115380403,0,0x0,8
tick,0x7fff4326feb4,115395939,0,0x0,8
tick,0x7fff4326feb4,115411315,0,0x0,8
tick,0x7fff4326feb4,115426994,0,0x0,8
tick,0x7fff4326feb4,115442547,0,0x0,8
tick,0x7fff4326feb4,115457766,0,0x0,8
tick,0x7fff4326feb4,115473669,0,0x0,8
tick,0x7fff4326feb4,115489449,0,0x0,8
tick,0x7fff4326feb4,115505447,0,0x0,8
tick,0x7fff4326feb4,115520805,0,0x0,8
tick,0x7fff4326feb4,115536231,0,0x0,8
tick,0x7fff4326feb4,115551671,0,0x0,8
tick,0x7fff4326feb4,115567613,0,0x0,8
tick,0x7fff4326feb4,115583372,0,0x0,8
tick,0x7fff4326feb4,115599352,0,0x0,8
tick,0x7fff4326feb4,115615340,0,0x0,8
tick,0x7fff4326feb4,115631370,0,0x0,8
tick,0x7fff4326feb4,115647387,0,0x0,8
tick,0x7fff4326feb4,115663388,0,0x0,8
tick,0x7fff4326feb4,115678630,0,0x0,8
tick,0x7fff4326feb4,115694177,0,0x0,8
tick,0x7fff4326feb4,115709481,0,0x0,8
tick,0x7fff4326feb4,115725153,0,0x0,8
tick,0x7fff4326feb4,115740509,0,0x0,8
tick,0x7fff4326feb4,115755736,0,0x0,8
tick,0x7fff4326feb4,115771451,0,0x0,8
tick,0x7fff4326feb4,115787115,0,0x0,8
tick,0x7fff4326feb4,115802923,0,0x0,8
tick,0x7fff4326feb4,115819223,0,0x0,8
tick,0x7fff4326feb4,115834232,0,0x0,8
tick,0x7fff4326feb4,115850223,0,0x0,8
tick,0x7fff4326feb4,115865805,0,0x0,8
tick,0x7fff4326feb4,115881546,0,0x0,8
tick,0x7fff4326feb4,115897030,0,0x0,8
tick,0x7fff4326feb4,115912534,0,0x0,8
tick,0x7fff4326feb4,115928539,0,0x0,8
tick,0x7fff4326feb4,115944829,0,0x0,8
tick,0x7fff4326feb4,115960560,0,0x0,8
tick,0x7fff4326feb4,115976562,0,0x0,8
tick,0x7fff4326feb4,115992258,0,0x0,8
tick,0x7fff4326feb4,116008529,0,0x0,8
tick,0x7fff4326feb4,116023651,0,0x0,8
tick,0x7fff4326feb4,116039861,0,0x0,8
tick,0x7fff4326feb4,116054769,0,0x0,8
tick,0x7fff4326feb4,116070377,0,0x0,8
tick,0x7fff4326feb4,116085649,0,0x0,8
tick,0x7fff4326feb4,116100784,0,0x0,8
tick,0x7fff4326feb4,116115884,0,0x0,8
tick,0x7fff4326feb4,116131238,0,0x0,8
tick,0x7fff4326feb4,116146684,0,0x0,8
tick,0x7fff4326feb4,116162282,0,0x0,8
tick,0x7fff4326feb4,116177236,0,0x0,8
tick,0x7fff4326feb4,116193553,0,0x0,8
tick,0x7fff4326feb4,116208991,0,0x0,8
tick,0x7fff4326feb4,116225307,0,0x0,8
tick,0x7fff4326feb4,116241380,0,0x0,8
tick,0x7fff4326feb4,116257016,0,0x0,8
tick,0x7fff4326feb4,116272679,0,0x0,8
tick,0x7fff4326feb4,116287973,0,0x0,8
tick,0x7fff4326feb4,116303824,0,0x0,8
tick,0x7fff4326feb4,116319145,0,0x0,8
tick,0x7fff4326feb4,116334156,0,0x0,8
tick,0x7fff4326feb4,116350082,0,0x0,8
tick,0x7fff4326feb4,116365775,0,0x0,8
tick,0x7fff4326feb4,116381230,0,0x0,8
tick,0x7fff4326feb4,116397314,0,0x0,8
tick,0x7fff4326feb4,116412576,0,0x0,8
tick,0x7fff4326feb4,116427519,0,0x0,8
tick,0x7fff4326feb4,116443964,0,0x0,8
tick,0x7fff4326feb4,116459492,0,0x0,8
tick,0x7fff4326feb4,116474914,0,0x0,8
tick,0x7fff4326feb4,116490495,0,0x0,8
tick,0x7fff4326feb4,116506037,0,0x0,8
tick,0x7fff4326feb4,116521431,0,0x0,8
tick,0x7fff4326feb4,116537279,0,0x0,8
tick,0x7fff4326feb4,116553607,0,0x0,8
tick,0x7fff4326feb4,116569634,0,0x0,8
tick,0x7fff4326feb4,116585322,0,0x0,8
tick,0x7fff4326feb4,116601342,0,0x0,8
tick,0x7fff4326feb4,116617479,0,0x0,8
tick,0x7fff4326feb4,116633007,0,0x0,8
tick,0x7fff4326feb4,116648789,0,0x0,8
tick,0x7fff4326feb4,116664317,0,0x0,8
tick,0x7fff4326feb4,116679710,0,0x0,8
tick,0x7fff4326feb4,116695178,0,0x0,8
tick,0x7fff4326feb4,116710808,0,0x0,8
tick,0x7fff4326feb4,116726156,0,0x0,8
tick,0x7fff4326feb4,116741638,0,0x0,8
tick,0x7fff4326feb4,116757284,0,0x0,8
tick,0x7fff4326feb4,116772989,0,0x0,8
tick,0x7fff4326feb4,116788884,0,0x0,8
tick,0x7fff4326feb4,116804285,0,0x0,8
tick,0x7fff4326feb4,116820393,0,0x0,8
tick,0x7fff4326feb4,116835886,0,0x0,8
tick,0x7fff4326feb4,116851536,0,0x0,8
tick,0x7fff4326feb4,116867301,0,0x0,8
tick,0x7fff4326feb4,116883396,0,0x0,8
tick,0x7fff4326feb4,116898993,0,0x0,8
tick,0x7fff4326feb4,116914971,0,0x0,8
tick,0x7fff4326feb4,116930294,0,0x0,8
tick,0x7fff4326feb4,116946024,0,0x0,8
tick,0x7fff4326feb4,116961744,0,0x0,8
tick,0x7fff4326feb4,116977346,0,0x0,8
tick,0x7fff4326feb4,116993669,0,0x0,8
tick,0x7fff4326feb4,117009285,0,0x0,8
tick,0x7fff4326feb4,117025286,0,0x0,8
tick,0x7fff4326feb4,117040512,0,0x0,8
tick,0x7fff4326feb4,117056492,0,0x0,8
tick,0x7fff4326feb4,117072489,0,0x0,8
tick,0x7fff4326feb4,117088092,0,0x0,8
tick,0x7fff4326feb4,117103474,0,0x0,8
tick,0x7fff4326feb4,117119217,0,0x0,8
tick,0x7fff4326feb4,117134207,0,0x0,8
tick,0x7fff4326feb4,117149495,0,0x0,8
tick,0x7fff4326feb4,117164949,0,0x0,8
tick,0x7fff4326feb4,117180499,0,0x0,8
tick,0x7fff4326feb4,117196533,0,0x0,8
tick,0x7fff4326feb4,117212500,0,0x0,8
tick,0x7fff4326feb4,117227914,0,0x0,8
tick,0x7fff4326feb4,117243213,0,0x0,8
tick,0x7fff4326feb4,117259218,0,0x0,8
tick,0x7fff4326feb4,117274211,0,0x0,8
tick,0x7fff4326feb4,117290229,0,0x0,8
tick,0x7fff4326feb4,117306211,0,0x0,8
tick,0x7fff4326feb4,117322217,0,0x0,8
tick,0x7fff4326feb4,117338209,0,0x0,8
tick,0x7fff4326feb4,117354201,0,0x0,8
tick,0x7fff4326feb4,117370032,0,0x0,8
tick,0x7fff4326feb4,117385802,0,0x0,8
tick,0x7fff4326feb4,117401370,0,0x0,8
tick,0x7fff4326feb4,117416541,0,0x0,8
tick,0x7fff4326feb4,117432564,0,0x0,8
tick,0x7fff4326feb4,117448553,0,0x0,8
tick,0x7fff4326feb4,117464559,0,0x0,8
tick,0x7fff4326feb4,117480018,0,0x0,8
tick,0x7fff4326feb4,117495786,0,0x0,8
tick,0x7fff4326feb4,117511147,0,0x0,8
tick,0x7fff4326feb4,117527444,0,0x0,8
tick,0x7fff4326feb4,117543062,0,0x0,8
tick,0x7fff4326feb4,117558786,0,0x0,8
tick,0x7fff4326feb4,117573679,0,0x0,8
tick,0x7fff4326feb4,117589542,0,0x0,8
tick,0x7fff4326feb4,117605517,0,0x0,8
tick,0x7fff4326feb4,117620521,0,0x0,8
tick,0x7fff4326feb4,117636087,0,0x0,8
tick,0x7fff4326feb4,117652134,0,0x0,8
tick,0x7fff4326feb4,117667474,0,0x0,8
tick,0x7fff4326feb4,117682836,0,0x0,8
tick,0x7fff4326feb4,117698216,0,0x0,8
tick,0x7fff4326feb4,117713806,0,0x0,8
tick,0x7fff4326feb4,117729339,0,0x0,8
tick,0x7fff4326feb4,117745346,0,0x0,8
tick,0x7fff4326feb4,117760778,0,0x0,8
tick,0x7fff4326feb4,117776471,0,0x0,8
tick,0x7fff4326feb4,117792138,0,0x0,8
tick,0x7fff4326feb4,117807876,0,0x0,8
tick,0x7fff4326feb4,117823170,0,0x0,8
tick,0x7fff4326feb4,117838161,0,0x0,8
tick,0x7fff4326feb4,117854239,0,0x0,8
tick,0x7fff4326feb4,117870551,0,0x0,8
tick,0x7fff4326feb4,117885722,0,0x0,8
tick,0x7fff4326feb4,117901532,0,0x0,8
tick,0x7fff4326feb4,117917605,0,0x0,8
tick,0x7fff4326feb4,117933174,0,0x0,8
tick,0x7fff4326feb4,117948173,0,0x0,8
tick,0x7fff4326feb4,117963472,0,0x0,8
tick,0x7fff4326feb4,117979220,0,0x0,8
tick,0x7fff4326feb4,117994540,0,0x0,8
tick,0x7fff4326feb4,118009892,0,0x0,8
tick,0x7fff4326feb4,118025549,0,0x0,8
tick,0x7fff4326feb4,118040881,0,0x0,8
tick,0x7fff4326feb4,118056036,0,0x0,8
tick,0x7fff4326feb4,118072123,0,0x0,8
tick,0x7fff4326feb4,118087732,0,0x0,8
tick,0x7fff4326feb4,118103570,0,0x0,8
tick,0x7fff4326feb4,118119532,0,0x0,8
tick,0x7fff4326feb4,118135624,0,0x0,8
tick,0x7fff4326feb4,118151974,0,0x0,8
tick,0x7fff4326feb4,118167567,0,0x0,8
tick,0x7fff4326feb4,118183337,0,0x0,8
tick,0x7fff4326feb4,118198277,0,0x0,8
tick,0x7fff4326feb4,118214318,0,0x0,8
tick,0x7fff4326feb4,118230539,0,0x0,8
tick,0x7fff4326feb4,118245508,0,0x0,8
tick,0x7fff4326feb4,118261738,0,0x0,8
tick,0x7fff4326feb4,118277371,0,0x0,8
tick,0x7fff4326feb4,118293053,0,0x0,8
tick,0x7fff4326feb4,118308652,0,0x0,8
tick,0x7fff4326feb4,118324195,0,0x0,8
tick,0x7fff4326feb4,118340145,0,0x0,8
tick,0x7fff4326feb4,118355202,0,0x0,8
tick,0x7fff4326feb4,118370836,0,0x0,8
tick,0x7fff4326feb4,118386099,0,0x0,8
tick,0x7fff4326feb4,118401797,0,0x0,8
tick,0x7fff4326feb4,118417796,0,0x0,8
tick,0x7fff4326feb4,118433575,0,0x0,8
tick,0x7fff4326feb4,118448748,0,0x0,8
tick,0x7fff4326feb4,118464378,0,0x0,8
tick,0x7fff4326feb4,118480177,0,0x0,8
tick,0x7fff4326feb4,118495776,0,0x0,8
tick,0x7fff4326feb4,118512081,0,0x0,8
tick,0x7fff4326feb4,118527530,0,0x0,8
tick,0x7fff4326feb4,118543652,0,0x0,8
tick,0x7fff4326feb4,118559849,0,0x0,8
tick,0x7fff4326feb4,118575377,0,0x0,8
tick,0x7fff4326feb4,118591067,0,0x0,8
tick,0x7fff4326feb4,118606664,0,0x0,8
tick,0x7fff4326feb4,118622328,0,0x0,8
tick,0x7fff4326feb4,118637699,0,0x0,8
tick,0x7fff4326feb4,118653427,0,0x0,8
tick,0x7fff4326feb4,118669080,0,0x0,8
tick,0x7fff4326feb4,118684750,0,0x0,8
tick,0x7fff4326feb4,118700433,0,0x0,8
tick,0x7fff4326feb4,118715748,0,0x0,8
tick,0x7fff4326feb4,118731365,0,0x0,8
tick,0x7fff4326feb4,118746870,0,0x0,8
tick,0x7fff4326feb4,118762826,0,0x0,8
tick,0x7fff4326feb4,118778408,0,0x0,8
tick,0x7fff4326feb4,118794191,0,0x0,8
tick,0x7fff4326feb4,118810189,0,0x0,8
tick,0x7fff4326feb4,118826194,0,0x0,8
tick,0x7fff4326feb4,118841193,0,0x0,8
tick,0x7fff4326feb4,118856524,0,0x0,8
tick,0x7fff4326feb4,118871922,0,0x0,8
tick,0x7fff4326feb4,118887542,0,0x0,8
tick,0x7fff4326feb4,118902528,0,0x0,8
tick,0x7fff4326feb4,118918492,0,0x0,8
tick,0x7fff4326feb4,118934537,0,0x0,8
tick,0x7fff4326feb4,118950515,0,0x0,8
tick,0x7fff4326feb4,118966524,0,0x0,8
tick,0x7fff4326feb4,118982557,0,0x0,8
tick,0x7fff4326feb4,118998560,0,0x0,8
tick,0x7fff4326feb4,119014683,0,0x0,8
tick,0x7fff4326feb4,119029717,0,0x0,8
tick,0x7fff4326feb4,119044841,0,0x0,8
tick,0x7fff4326feb4,119060359,0,0x0,8
tick,0x7fff4326feb4,119075826,0,0x0,8
tick,0x7fff4326feb4,119091247,0,0x0,8
tick,0x7fff4326feb4,119106840,0,0x0,8
tick,0x7fff4326feb4,119122197,0,0x0,8
tick,0x7fff4326feb4,119137474,0,0x0,8
tick,0x7fff4326feb4,119153175,0,0x0,8
tick,0x7fff4326feb4,119169276,0,0x0,8
tick,0x7fff4326feb4,119185206,0,0x0,8
tick,0x7fff4326feb4,119200116,0,0x0,8
tick,0x7fff4326feb4,119215308,0,0x0,8
tick,0x7fff4326feb4,119231399,0,0x0,8
tick,0x7fff4326feb4,119247189,0,0x0,8
tick,0x7fff4326feb4,119262322,0,0x0,8
tick,0x7fff4326feb4,119277753,0,0x0,8
tick,0x7fff4326feb4,119293702,0,0x0,8
tick,0x7fff4326feb4,119309137,0,0x0,8
tick,0x7fff4326feb4,119324829,0,0x0,8
tick,0x7fff4326feb4,119341141,0,0x0,8
tick,0x7fff4326feb4,119356892,0,0x0,8
tick,0x7fff4326feb4,119372384,0,0x0,8
tick,0x7fff4326feb4,119388364,0,0x0,8
tick,0x7fff4326feb4,119402919,0,0x0,8
tick,0x7fff4326feb4,119418942,0,0x0,8
tick,0x7fff4326feb4,119434456,0,0x0,8
tick,0x7fff4326feb4,119449361,0,0x0,8
tick,0x7fff4326feb4,119465477,0,0x0,8
tick,0x7fff4326feb4,119480690,0,0x0,8
tick,0x7fff4326feb4,119496489,0,0x0,8
tick,0x7fff4326feb4,119511527,0,0x0,8
tick,0x7fff4326feb4,119527139,0,0x0,8
tick,0x7fff4326feb4,119542575,0,0x0,8
tick,0x7fff4326feb4,119558100,0,0x0,8
tick,0x7fff4326feb4,119574492,0,0x0,8
tick,0x7fff4326feb4,119589647,0,0x0,8
tick,0x7fff4326feb4,119605131,0,0x0,8
tick,0x7fff4326feb4,119621178,0,0x0,8
tick,0x7fff4326feb4,119636748,0,0x0,8
tick,0x7fff4326feb4,119652767,0,0x0,8
tick,0x7fff4326feb4,119668777,0,0x0,8
tick,0x7fff4326feb4,119683789,0,0x0,8
tick,0x7fff4326feb4,119699220,0,0x0,8
tick,0x7fff4326feb4,119714715,0,0x0,8
tick,0x7fff4326feb4,119730789,0,0x0,8
tick,0x7fff4326feb4,119746361,0,0x0,8
tick,0x7fff4326feb4,119762341,0,0x0,8
tick,0x7fff4326feb4,119777326,0,0x0,8
tick,0x7fff4326feb4,119793733,0,0x0,8
tick,0x7fff4326feb4,119809374,0,0x0,8
tick,0x7fff4326feb4,119824663,0,0x0,8
tick,0x7fff4326feb4,119839683,0,0x0,8
tick,0x7fff4326feb4,119855713,0,0x0,8
tick,0x7fff4326feb4,119870969,0,0x0,8
tick,0x7fff4326feb4,119886751,0,0x0,8
tick,0x7fff4326feb4,119902118,0,0x0,8
tick,0x7fff4326feb4,119918119,0,0x0,8
tick,0x7fff4326feb4,119933438,0,0x0,8
tick,0x7fff4326feb4,119949133,0,0x0,8
tick,0x7fff4326feb4,119964691,0,0x0,8
tick,0x7fff4326feb4,119980547,0,0x0,8
tick,0x7fff4326feb4,119996464,0,0x0,8
tick,0x7fff4326feb4,120011856,0,0x0,8
tick,0x7fff4326feb4,120027874,0,0x0,8
tick,0x7fff4326feb4,120043263,0,0x0,8
tick,0x7fff4326feb4,120058311,0,0x0,8
tick,0x7fff4326feb4,120073840,0,0x0,8
tick,0x7fff4326feb4,120089549,0,0x0,8
tick,0x7fff4326feb4,120104560,0,0x0,8
tick,0x7fff4326feb4,120120511,0,0x0,8
tick,0x7fff4326feb4,120135851,0,0x0,8
tick,0x7fff4326feb4,120151857,0,0x0,8
tick,0x7fff4326feb4,120167863,0,0x0,8
tick,0x7fff4326feb4,120182902,0,0x0,8
tick,0x7fff4326feb4,120198120,0,0x0,8
tick,0x7fff4326feb4,120213535,0,0x0,8
tick,0x7fff4326feb4,120229461,0,0x0,8
tick,0x7fff4326feb4,120244515,0,0x0,8
tick,0x7fff4326feb4,120259954,0,0x0,8
tick,0x7fff4326feb4,120275815,0,0x0,8
tick,0x7fff4326feb4,120291168,0,0x0,8
tick,0x7fff4326feb4,120306934,0,0x0,8
tick,0x7fff4326feb4,120322406,0,0x0,8
tick,0x7fff4326feb4,120337746,0,0x0,8
tick,0x7fff4326feb4,120353109,0,0x0,8
tick,0x7fff4326feb4,120369185,0,0x0,8
tick,0x7fff4326feb4,120385152,0,0x0,8
tick,0x7fff4326feb4,120400847,0,0x0,8
tick,0x7fff4326feb4,120416294,0,0x0,8
tick,0x7fff4326feb4,120431849,0,0x0,8
tick,0x7fff4326feb4,120448146,0,0x0,8
tick,0x7fff4326feb4,120464139,0,0x0,8
tick,0x7fff4326feb4,120479788,0,0x0,8
tick,0x7fff4326feb4,120495751,0,0x0,8
tick,0x7fff4326feb4,120510948,0,0x0,8
tick,0x7fff4326feb4,120526808,0,0x0,8
tick,0x7fff4326feb4,120541832,0,0x0,8
tick,0x7fff4326feb4,120557500,0,0x0,8
tick,0x7fff4326feb4,120573384,0,0x0,8
tick,0x7fff4326feb4,120589436,0,0x0,8
tick,0x7fff4326feb4,120604927,0,0x0,8
tick,0x7fff4326feb4,120620528,0,0x0,8
tick,0x7fff4326feb4,120636267,0,0x0,8
tick,0x7fff4326feb4,120652298,0,0x0,8
tick,0x7fff4326feb4,120667956,0,0x0,8
tick,0x7fff4326feb4,120683519,0,0x0,8
tick,0x7fff4326feb4,120698156,0,0x0,8
tick,0x7fff4326feb4,120713144,0,0x0,8
tick,0x7fff4326feb4,120728630,0,0x0,8
tick,0x7fff4326feb4,120743984,0,0x0,8
tick,0x7fff4326feb4,120759578,0,0x0,8
tick,0x7fff4326feb4,120775184,0,0x0,8
tick,0x7fff4326feb4,120790867,0,0x0,8
tick,0x7fff4326feb4,120806862,0,0x0,8
tick,0x7fff4326feb4,120822164,0,0x0,8
tick,0x7fff4326feb4,120838036,0,0x0,8
tick,0x7fff4326feb4,120853432,0,0x0,8
tick,0x7fff4326feb4,120868649,0,0x0,8
tick,0x7fff4326feb4,120883793,0,0x0,8
tick,0x7fff4326feb4,120899619,0,0x0,8
tick,0x7fff4326feb4,120914742,0,0x0,8
tick,0x7fff4326feb4,120930321,0,0x0,8
tick,0x7fff4326feb4,120945930,0,0x0,8
tick,0x7fff4326feb4,120962234,0,0x0,8
tick,0x7fff4326feb4,120978679,0,0x0,8
tick,0x7fff4326feb4,120994895,0,0x0,8
tick,0x7fff4326feb4,121010372,0,0x0,8
tick,0x7fff4326feb4,121025435,0,0x0,8
tick,0x7fff4326feb4,121041796,0,0x0,8
tick,0x7fff4326feb4,121057671,0,0x0,8
tick,0x7fff4326feb4,121073274,0,0x0,8
tick,0x7fff4326feb4,121089291,0,0x0,8
tick,0x7fff4326feb4,121104832,0,0x0,8
tick,0x7fff4326feb4,121120169,0,0x0,8
tick,0x7fff4326feb4,121135834,0,0x0,8
tick,0x7fff4326feb4,121150535,0,0x0,8
tick,0x7fff4326feb4,121166025,0,0x0,8
tick,0x7fff4326feb4,121181477,0,0x0,8
tick,0x7fff4326feb4,121197160,0,0x0,8
tick,0x7fff4326feb4,121212728,0,0x0,8
tick,0x7fff4326feb4,121228143,0,0x0,8
tick,0x7fff4326feb4,121243398,0,0x0,8
tick,0x7fff4326feb4,121258954,0,0x0,8
tick,0x7fff4326feb4,121275002,0,0x0,8
tick,0x7fff4326feb4,121290153,0,0x0,8
tick,0x7fff4326feb4,121306092,0,0x0,8
tick,0x7fff4326feb4,121321768,0,0x0,8
tick,0x7fff4326feb4,121337135,0,0x0,8
tick,0x7fff4326feb4,121353214,0,0x0,8
tick,0x7fff4326feb4,121368496,0,0x0,8
tick,0x7fff4326feb4,121383744,0,0x0,8
tick,0x7fff4326feb4,121398827,0,0x0,8
tick,0x7fff4326feb4,121414467,0,0x0,8
tick,0x7fff4326feb4,121429814,0,0x0,8
tick,0x7fff4326feb4,121445775,0,0x0,8
tick,0x7fff4326feb4,121461196,0,0x0,8
tick,0x7fff4326feb4,121476489,0,0x0,8
tick,0x7fff4326feb4,121491679,0,0x0,8
tick,0x7fff4326feb4,121507289,0,0x0,8
tick,0x7fff4326feb4,121522723,0,0x0,8
tick,0x7fff4326feb4,121538733,0,0x0,8
tick,0x7fff4326feb4,121554750,0,0x0,8
tick,0x7fff4326feb4,121569851,0,0x0,8
tick,0x7fff4326feb4,121585057,0,0x0,8
tick,0x7fff4326feb4,121600634,0,0x0,8
tick,0x7fff4326feb4,121616306,0,0x0,8
tick,0x7fff4326feb4,121631334,0,0x0,8
tick,0x7fff4326feb4,121646541,0,0x0,8
tick,0x7fff4326feb4,121662164,0,0x0,8
tick,0x7fff4326feb4,121677682,0,0x0,8
tick,0x7fff4326feb4,121693556,0,0x0,8
tick,0x7fff4326feb4,121709507,0,0x0,8
tick,0x7fff4326feb4,121725511,0,0x0,8
tick,0x7fff4326feb4,121741513,0,0x0,8
tick,0x7fff4326feb4,121757515,0,0x0,8
tick,0x7fff4326feb4,121773501,0,0x0,8
tick,0x7fff4326feb4,121789525,0,0x0,8
tick,0x7fff4326feb4,121805509,0,0x0,8
tick,0x7fff4326feb4,121820506,0,0x0,8
tick,0x7fff4326feb4,121835594,0,0x0,8
tick,0x7fff4326feb4,121850955,0,0x0,8
tick,0x7fff4326feb4,121866239,0,0x0,8
tick,0x7fff4326feb4,121881470,0,0x0,8
tick,0x7fff4326feb4,121897594,0,0x0,8
tick,0x7fff4326feb4,121912656,0,0x0,8
tick,0x7fff4326feb4,121928684,0,0x0,8
tick,0x7fff4326feb4,121944109,0,0x0,8
tick,0x7fff4326feb4,121959496,0,0x0,8
tick,0x7fff4326feb4,121974472,0,0x0,8
tick,0x7fff4326feb4,121989848,0,0x0,8
tick,0x7fff4326feb4,122005549,0,0x0,8
tick,0x7fff4326feb4,122020556,0,0x0,8
tick,0x7fff4326feb4,122036526,0,0x0,8
tick,0x7fff4326feb4,122052535,0,0x0,8
tick,0x7fff4326feb4,122067910,0,0x0,8
tick,0x7fff4326feb4,122083880,0,0x0,8
tick,0x7fff4326feb4,122099525,0,0x0,8
tick,0x7fff4326feb4,122115183,0,0x0,8
tick,0x7fff4326feb4,122131131,0,0x0,8
tick,0x7fff4326feb4,122147128,0,0x0,8
tick,0x7fff4326feb4,122162527,0,0x0,8
tick,0x7fff4326feb4,122177664,0,0x0,8
tick,0x7fff4326feb4,122193450,0,0x0,8
tick,0x7fff4326feb4,122208076,0,0x0,8
tick,0x7fff4326feb4,122223611,0,0x0,8
tick,0x7fff4326feb4,122239281,0,0x0,8
tick,0x7fff4326feb4,122254660,0,0x0,8
tick,0x7fff4326feb4,122270008,0,0x0,8
tick,0x7fff4326feb4,122286001,0,0x0,8
tick,0x7fff4326feb4,122301343,0,0x0,8
tick,0x7fff4326feb4,122317466,0,0x0,8
tick,0x7fff4326feb4,122332701,0,0x0,8
tick,0x7fff4326feb4,122348428,0,0x0,8
tick,0x7fff4326feb4,122363898,0,0x0,8
tick,0x7fff4326feb4,122379911,0,0x0,8
tick,0x7fff4326feb4,122395465,0,0x0,8
tick,0x7fff4326feb4,122411313,0,0x0,8
tick,0x7fff4326feb4,122426388,0,0x0,8
tick,0x7fff4326feb4,122442253,0,0x0,8
tick,0x7fff4326feb4,122458310,0,0x0,8
tick,0x7fff4326feb4,122473919,0,0x0,8
tick,0x7fff4326feb4,122489367,0,0x0,8
tick,0x7fff4326feb4,122504481,0,0x0,8
tick,0x7fff4326feb4,122520501,0,0x0,8
tick,0x7fff4326feb4,122535587,0,0x0,8
tick,0x7fff4326feb4,122550976,0,0x0,8
tick,0x7fff4326feb4,122566548,0,0x0,8
tick,0x7fff4326feb4,122582521,0,0x0,8
tick,0x7fff4326feb4,122597845,0,0x0,8
tick,0x7fff4326feb4,122613937,0,0x0,8
tick,0x7fff4326feb4,122628515,0,0x0,8
tick,0x7fff4326feb4,122643740,0,0x0,8
tick,0x7fff4326feb4,122659795,0,0x0,8
tick,0x7fff4326feb4,122674673,0,0x0,8
tick,0x7fff4326feb4,122690158,0,0x0,8
tick,0x7fff4326feb4,122705670,0,0x0,8
tick,0x7fff4326feb4,122721239,0,0x0,8
tick,0x7fff4326feb4,122736524,0,0x0,8
tick,0x7fff4326feb4,122752267,0,0x0,8
tick,0x7fff4326feb4,122767579,0,0x0,8
tick,0x7fff4326feb4,122782853,0,0x0,8
tick,0x7fff4326feb4,122798838,0,0x0,8
tick,0x7fff4326feb4,122814827,0,0x0,8
tick,0x7fff4326feb4,122830425,0,0x0,8
tick,0x7fff4326feb4,122846235,0,0x0,8
tick,0x7fff4326feb4,122861914,0,0x0,8
tick,0x7fff4326feb4,122877973,0,0x0,8
tick,0x7fff4326feb4,122893693,0,0x0,8
tick,0x7fff4326feb4,122909329,0,0x0,8
tick,0x7fff4326feb4,122925108,0,0x0,8
tick,0x7fff4326feb4,122940835,0,0x0,8
tick,0x7fff4326feb4,122956913,0,0x0,8
tick,0x7fff4326feb4,122972742,0,0x0,8
tick,0x7fff4326feb4,122988374,0,0x0,8
tick,0x7fff4326feb4,123004602,0,0x0,8
tick,0x7fff4326feb4,123020465,0,0x0,8
tick,0x7fff4326feb4,123035852,0,0x0,8
tick,0x7fff4326feb4,123051247,0,0x0,8
tick,0x7fff4326feb4,123066821,0,0x0,8
tick,0x7fff4326feb4,123082367,0,0x0,8
tick,0x7fff4326feb4,123098027,0,0x0,8
tick,0x7fff4326feb4,123114134,0,0x0,8
tick,0x7fff4326feb4,123129115,0,0x0,8
tick,0x7fff4326feb4,123145093,0,0x0,8
tick,0x7fff4326feb4,123160493,0,0x0,8
tick,0x7fff4326feb4,123175762,0,0x0,8
tick,0x7fff4326feb4,123191804,0,0x0,8
tick,0x7fff4326feb4,123207396,0,0x0,8
tick,0x7fff4326feb4,123223336,0,0x0,8
tick,0x7fff4326feb4,123239006,0,0x0,8
tick,0x7fff4326feb4,123254651,0,0x0,8
tick,0x7fff4326feb4,123269528,0,0x0,8
tick,0x7fff4326feb4,123285519,0,0x0,8
tick,0x7fff4326feb4,123301527,0,0x0,8
tick,0x7fff4326feb4,123317547,0,0x0,8
tick,0x7fff4326feb4,123333538,0,0x0,8
tick,0x7fff4326feb4,123348503,0,0x0,8
tick,0x7fff4326feb4,123363951,0,0x0,8
tick,0x7fff4326feb4,123379521,0,0x0,8
tick,0x7fff4326feb4,123394933,0,0x0,8
tick,0x7fff4326feb4,123410521,0,0x0,8
tick,0x7fff4326feb4,123426599,0,0x0,8
tick,0x7fff4326feb4,123441995,0,0x0,8
tick,0x7fff4326feb4,123456858,0,0x0,8
tick,0x7fff4326feb4,123473254,0,0x0,8
tick,0x7fff4326feb4,123488653,0,0x0,8
tick,0x7fff4326feb4,123503622,0,0x0,8
tick,0x7fff4326feb4,123519078,0,0x0,8
tick,0x7fff4326feb4,123535255,0,0x0,8
tick,0x7fff4326feb4,123550868,0,0x0,8
tick,0x7fff4326feb4,123566543,0,0x0,8
tick,0x7fff4326feb4,123582457,0,0x0,8
tick,0x7fff4326feb4,123597850,0,0x0,8
tick,0x7fff4326feb4,123612751,0,0x0,8
tick,0x7fff4326feb4,123628335,0,0x0,8
tick,0x7fff4326feb4,123643394,0,0x0,8
tick,0x7fff4326feb4,123658822,0,0x0,8
tick,0x7fff4326feb4,123674114,0,0x0,8
tick,0x7fff4326feb4,123689647,0,0x0,8
tick,0x7fff4326feb4,123705516,0,0x0,8
tick,0x7fff4326feb4,123720851,0,0x0,8
tick,0x7fff4326feb4,123736847,0,0x0,8
tick,0x7fff4326feb4,123753107,0,0x0,8
tick,0x7fff4326feb4,123769059,0,0x0,8
tick,0x7fff4326feb4,123784272,0,0x0,8
tick,0x7fff4326feb4,123799834,0,0x0,8
tick,0x7fff4326feb4,123815895,0,0x0,8
tick,0x7fff4326feb4,123832125,0,0x0,8
tick,0x7fff4326feb4,123848399,0,0x0,8
tick,0x7fff4326feb4,123863595,0,0x0,8
tick,0x7fff4326feb4,123879291,0,0x0,8
tick,0x7fff4326feb4,123894363,0,0x0,8
tick,0x7fff4326feb4,123909536,0,0x0,8
tick,0x7fff4326feb4,123925533,0,0x0,8
tick,0x7fff4326feb4,123941765,0,0x0,8
tick,0x7fff4326feb4,123957025,0,0x0,8
tick,0x7fff4326feb4,123972504,0,0x0,8
tick,0x7fff4326feb4,123987722,0,0x0,8
tick,0x7fff4326feb4,124003524,0,0x0,8
tick,0x7fff4326feb4,124018613,0,0x0,8
tick,0x7fff4326feb4,124033942,0,0x0,8
tick,0x7fff4326feb4,124048920,0,0x0,8
tick,0x7fff4326feb4,124064525,0,0x0,8
tick,0x7fff4326feb4,124079935,0,0x0,8
tick,0x7fff4326feb4,124095532,0,0x0,8
tick,0x7fff4326feb4,124111115,0,0x0,8
tick,0x7fff4326feb4,124126535,0,0x0,8
tick,0x7fff4326feb4,124141953,0,0x0,8
tick,0x7fff4326feb4,124157103,0,0x0,8
tick,0x7fff4326feb4,124172612,0,0x0,8
tick,0x7fff4326feb4,124188630,0,0x0,8
tick,0x7fff4326feb4,124204632,0,0x0,8
tick,0x7fff4326feb4,124220687,0,0x0,8
tick,0x7fff4326feb4,124235855,0,0x0,8
tick,0x7fff4326feb4,124251851,0,0x0,8
tick,0x7fff4326feb4,124267673,0,0x0,8
tick,0x7fff4326feb4,124281986,0,0x0,8
tick,0x7fff4326feb4,124297540,0,0x0,8
tick,0x7fff4326feb4,124312637,0,0x0,8
tick,0x7fff4326feb4,124327925,0,0x0,8
tick,0x7fff4326feb4,124343636,0,0x0,8
tick,0x7fff4326feb4,124358889,0,0x0,8
tick,0x7fff4326feb4,124374086,0,0x0,8
tick,0x7fff4326feb4,124389512,0,0x0,8
tick,0x7fff4326feb4,124404534,0,0x0,8
tick,0x7fff4326feb4,124420506,0,0x0,8
tick,0x7fff4326feb4,124435908,0,0x0,8
tick,0x7fff4326feb4,124451530,0,0x0,8
tick,0x7fff4326feb4,124466523,0,0x0,8
tick,0x7fff4326feb4,124481498,0,0x0,8
tick,0x7fff4326feb4,124497527,0,0x0,8
tick,0x7fff4326feb4,124512702,0,0x0,8
tick,0x7fff4326feb4,124528030,0,0x0,8
tick,0x7fff4326feb4,124544296,0,0x0,8
tick,0x7fff4326feb4,124560116,0,0x0,8
tick,0x7fff4326feb4,124575949,0,0x0,8
tick,0x7fff4326feb4,124591751,0,0x0,8
tick,0x7fff4326feb4,124607312,0,0x0,8
tick,0x7fff4326feb4,124622491,0,0x0,8
tick,0x7fff4326feb4,124637833,0,0x0,8
tick,0x7fff4326feb4,124653510,0,0x0,8
tick,0x7fff4326feb4,124669556,0,0x0,8
tick,0x7fff4326feb4,124685058,0,0x0,8
tick,0x7fff4326feb4,124700604,0,0x0,8
tick,0x7fff4326feb4,124715845,0,0x0,8
tick,0x7fff4326feb4,124731667,0,0x0,8
tick,0x7fff4326feb4,124747106,0,0x0,8
tick,0x7fff4326feb4,124762591,0,0x0,8
tick,0x7fff4326feb4,124778380,0,0x0,8
tick,0x7fff4326feb4,124794008,0,0x0,8
tick,0x7fff4326feb4,124809596,0,0x0,8
tick,0x7fff4326feb4,124824763,0,0x0,8
tick,0x7fff4326feb4,124840540,0,0x0,8
tick,0x7fff4326feb4,124855690,0,0x0,8
tick,0x7fff4326feb4,124871409,0,0x0,8
tick,0x7fff4326feb4,124887047,0,0x0,8
tick,0x7fff4326feb4,124902638,0,0x0,8
tick,0x7fff4326feb4,124918125,0,0x0,8
tick,0x7fff4326feb4,124934086,0,0x0,8
tick,0x7fff4326feb4,124949509,0,0x0,8
tick,0x7fff4326feb4,124965676,0,0x0,8
tick,0x7fff4326feb4,124980546,0,0x0,8
tick,0x7fff4326feb4,124995786,0,0x0,8
tick,0x7fff4326feb4,125011767,0,0x0,8
tick,0x7fff4326feb4,125027194,0,0x0,8
tick,0x7fff4326feb4,125042820,0,0x0,8
tick,0x7fff4326feb4,125058422,0,0x0,8
tick,0x7fff4326feb4,125074134,0,0x0,8
tick,0x7fff4326feb4,125089785,0,0x0,8
tick,0x7fff4326feb4,125105657,0,0x0,8
tick,0x7fff4326feb4,125121056,0,0x0,8
tick,0x7fff4326feb4,125137081,0,0x0,8
tick,0x7fff4326feb4,125152064,0,0x0,8
tick,0x7fff4326feb4,125167537,0,0x0,8
tick,0x7fff4326feb4,125183065,0,0x0,8
tick,0x7fff4326feb4,125198260,0,0x0,8
tick,0x7fff4326feb4,125213584,0,0x0,8
tick,0x7fff4326feb4,125229614,0,0x0,8
tick,0x7fff4326feb4,125245497,0,0x0,8
tick,0x7fff4326feb4,125261505,0,0x0,8
tick,0x7fff4326feb4,125277586,0,0x0,8
tick,0x7fff4326feb4,125293625,0,0x0,8
tick,0x7fff4326feb4,125309492,0,0x0,8
tick,0x7fff4326feb4,125325560,0,0x0,8
tick,0x7fff4326feb4,125341321,0,0x0,8
tick,0x7fff4326feb4,125357088,0,0x0,8
tick,0x7fff4326feb4,125373143,0,0x0,8
tick,0x7fff4326feb4,125389148,0,0x0,8
tick,0x7fff4326feb4,125404679,0,0x0,8
tick,0x7fff4326feb4,125419828,0,0x0,8
tick,0x7fff4326feb4,125435460,0,0x0,8
tick,0x7fff4326feb4,125450467,0,0x0,8
tick,0x7fff4326feb4,125466486,0,0x0,8
tick,0x7fff4326feb4,125482490,0,0x0,8
tick,0x7fff4326feb4,125497519,0,0x0,8
tick,0x7fff4326feb4,125512351,0,0x0,8
tick,0x7fff4326feb4,125527589,0,0x0,8
tick,0x7fff4326feb4,125543571,0,0x0,8
tick,0x7fff4326feb4,125558905,0,0x0,8
tick,0x7fff4326feb4,125573878,0,0x0,8
tick,0x7fff4326feb4,125589181,0,0x0,8
tick,0x7fff4326feb4,125605033,0,0x0,8
tick,0x7fff4326feb4,125620453,0,0x0,8
tick,0x7fff4326feb4,125635844,0,0x0,8
tick,0x7fff4326feb4,125651449,0,0x0,8
tick,0x7fff4326feb4,125666614,0,0x0,8
tick,0x7fff4326feb4,125681772,0,0x0,8
tick,0x7fff4326feb4,125698140,0,0x0,8
tick,0x7fff4326feb4,125712919,0,0x0,8
tick,0x7fff4326feb4,125728644,0,0x0,8
tick,0x7fff4326feb4,125743758,0,0x0,8
tick,0x7fff4326feb4,125759767,0,0x0,8
tick,0x7fff4326feb4,125775802,0,0x0,8
tick,0x7fff4326feb4,125791796,0,0x0,8
tick,0x7fff4326feb4,125806817,0,0x0,8
tick,0x7fff4326feb4,125822917,0,0x0,8
tick,0x7fff4326feb4,125838488,0,0x0,8
tick,0x7fff4326feb4,125854334,0,0x0,8
tick,0x7fff4326feb4,125870619,0,0x0,8
tick,0x7fff4326feb4,125885361,0,0x0,8
tick,0x7fff4326feb4,125900579,0,0x0,8
tick,0x7fff4326feb4,125916088,0,0x0,8
tick,0x7fff4326feb4,125931101,0,0x0,8
tick,0x7fff4326feb4,125946401,0,0x0,8
tick,0x7fff4326feb4,125961843,0,0x0,8
tick,0x7fff4326feb4,125977416,0,0x0,8
tick,0x7fff4326feb4,125992705,0,0x0,8
tick,0x7fff4326feb4,126008745,0,0x0,8
tick,0x7fff4326feb4,126024762,0,0x0,8
tick,0x7fff4326feb4,126040523,0,0x0,8
tick,0x7fff4326feb4,126056539,0,0x0,8
tick,0x7fff4326feb4,126071540,0,0x0,8
tick,0x7fff4326feb4,126087508,0,0x0,8
tick,0x7fff4326feb4,126103033,0,0x0,8
tick,0x7fff4326feb4,126118513,0,0x0,8
tick,0x7fff4326feb4,126134044,0,0x0,8
tick,0x7fff4326feb4,126149520,0,0x0,8
tick,0x7fff4326feb4,126164506,0,0x0,8
tick,0x7fff4326feb4,126179746,0,0x0,8
tick,0x7fff4326feb4,126194923,0,0x0,8
tick,0x7fff4326feb4,126210840,0,0x0,8
tick,0x7fff4326feb4,126225842,0,0x0,8
tick,0x7fff4326feb4,126241875,0,0x0,8
tick,0x7fff4326feb4,126257901,0,0x0,8
tick,0x7fff4326feb4,126273896,0,0x0,8
tick,0x7fff4326feb4,126289896,0,0x0,8
tick,0x7fff4326feb4,126305905,0,0x0,8
tick,0x7fff4326feb4,126322257,0,0x0,8
tick,0x7fff4326feb4,126337984,0,0x0,8
tick,0x7fff4326feb4,126353670,0,0x0,8
tick,0x7fff4326feb4,126369417,0,0x0,8
tick,0x7fff4326feb4,126384756,0,0x0,8
tick,0x7fff4326feb4,126400326,0,0x0,8
tick,0x7fff4326feb4,126416153,0,0x0,8
tick,0x7fff4326feb4,126431149,0,0x0,8
tick,0x7fff4326feb4,126447164,0,0x0,8
tick,0x7fff4326feb4,126463191,0,0x0,8
tick,0x7fff4326feb4,126477896,0,0x0,8
tick,0x7fff4326feb4,126493520,0,0x0,8
tick,0x7fff4326feb4,126509140,0,0x0,8
tick,0x7fff4326feb4,126525135,0,0x0,8
tick,0x7fff4326feb4,126540672,0,0x0,8
tick,0x7fff4326feb4,126556021,0,0x0,8
tick,0x7fff4326feb4,126571420,0,0x0,8
tick,0x7fff4326feb4,126587169,0,0x0,8
tick,0x7fff4326feb4,126602669,0,0x0,8
tick,0x7fff4326feb4,126618704,0,0x0,8
tick,0x7fff4326feb4,126634377,0,0x0,8
tick,0x7fff4326feb4,126649976,0,0x0,8
tick,0x7fff4326feb4,126664715,0,0x0,8
tick,0x7fff4326feb4,126680731,0,0x0,8
tick,0x7fff4326feb4,126696743,0,0x0,8
tick,0x7fff4326feb4,126711769,0,0x0,8
tick,0x7fff4326feb4,126727737,0,0x0,8
tick,0x7fff4326feb4,126744176,0,0x0,8
tick,0x7fff4326feb4,126760114,0,0x0,8
tick,0x7fff4326feb4,126775850,0,0x0,8
tick,0x7fff4326feb4,126790637,0,0x0,8
tick,0x7fff4326feb4,126806210,0,0x0,8
tick,0x7fff4326feb4,126821872,0,0x0,8
tick,0x7fff4326feb4,126837877,0,0x0,8
tick,0x7fff4326feb4,126853639,0,0x0,8
tick,0x7fff4326feb4,126868935,0,0x0,8
tick,0x7fff4326feb4,126884240,0,0x0,8
tick,0x7fff4326feb4,126899722,0,0x0,8
tick,0x7fff4326feb4,126915196,0,0x0,8
tick,0x7fff4326feb4,126930440,0,0x0,8
tick,0x7fff4326feb4,126945727,0,0x0,8
tick,0x7fff4326feb4,126961470,0,0x0,8
tick,0x7fff4326feb4,126976724,0,0x0,8
tick,0x7fff4326feb4,126992412,0,0x0,8
tick,0x7fff4326feb4,127008383,0,0x0,8
tick,0x7fff4326feb4,127024336,0,0x0,8
tick,0x7fff4326feb4,127039786,0,0x0,8
tick,0x7fff4326feb4,127054982,0,0x0,8
tick,0x7fff4326feb4,127070690,0,0x0,8
tick,0x7fff4326feb4,127086392,0,0x0,8
tick,0x7fff4326feb4,127101756,0,0x0,8
tick,0x7fff4326feb4,127117054,0,0x0,8
tick,0x7fff4326feb4,127132502,0,0x0,8
tick,0x7fff4326feb4,127148038,0,0x0,8
tick,0x7fff4326feb4,127164101,0,0x0,8
tick,0x7fff4326feb4,127179493,0,0x0,8
tick,0x7fff4326feb4,127195501,0,0x0,8
tick,0x7fff4326feb4,127210965,0,0x0,8
tick,0x7fff4326feb4,127226952,0,0x0,8
tick,0x7fff4326feb4,127242501,0,0x0,8
tick,0x7fff4326feb4,127258533,0,0x0,8
tick,0x7fff4326feb4,127273789,0,0x0,8
tick,0x7fff4326feb4,127289117,0,0x0,8
tick,0x7fff4326feb4,127305150,0,0x0,8
tick,0x7fff4326feb4,127321152,0,0x0,8
tick,0x7fff4326feb4,127336506,0,0x0,8
tick,0x7fff4326feb4,127351986,0,0x0,8
tick,0x7fff4326feb4,127367520,0,0x0,8
tick,0x7fff4326feb4,127383782,0,0x0,8
tick,0x7fff4326feb4,127399626,0,0x0,8
tick,0x7fff4326feb4,127414527,0,0x0,8
tick,0x7fff4326feb4,127429823,0,0x0,8
tick,0x7fff4326feb4,127445750,0,0x0,8
tick,0x7fff4326feb4,127461515,0,0x0,8
tick,0x7fff4326feb4,127477521,0,0x0,8
tick,0x7fff4326feb4,127493622,0,0x0,8
tick,0x7fff4326feb4,127509652,0,0x0,8
tick,0x7fff4326feb4,127525498,0,0x0,8
tick,0x7fff4326feb4,127541515,0,0x0,8
tick,0x7fff4326feb4,127557519,0,0x0,8
tick,0x7fff4326feb4,127573495,0,0x0,8
tick,0x7fff4326feb4,127589525,0,0x0,8
tick,0x7fff4326feb4,127605513,0,0x0,8
tick,0x7fff4326feb4,127620500,0,0x0,8
tick,0x7fff4326feb4,127636518,0,0x0,8
tick,0x7fff4326feb4,127652083,0,0x0,8
tick,0x7fff4326feb4,127667575,0,0x0,8
tick,0x7fff4326feb4,127682973,0,0x0,8
tick,0x7fff4326feb4,127698952,0,0x0,8
tick,0x7fff4326feb4,127714637,0,0x0,8
tick,0x7fff4326feb4,127729860,0,0x0,8
tick,0x7fff4326feb4,127745130,0,0x0,8
tick,0x7fff4326feb4,127760630,0,0x0,8
tick,0x7fff4326feb4,127775863,0,0x0,8
tick,0x7fff4326feb4,127791889,0,0x0,8
tick,0x7fff4326feb4,127807183,0,0x0,8
tick,0x7fff4326feb4,127822562,0,0x0,8
tick,0x7fff4326feb4,127837989,0,0x0,8
tick,0x7fff4326feb4,127853527,0,0x0,8
tick,0x7fff4326feb4,127869507,0,0x0,8
tick,0x7fff4326feb4,127885533,0,0x0,8
tick,0x7fff4326feb4,127901504,0,0x0,8
tick,0x7fff4326feb4,127917516,0,0x0,8
tick,0x7fff4326feb4,127932691,0,0x0,8
tick,0x7fff4326feb4,127948000,0,0x0,8
tick,0x7fff4326feb4,127964285,0,0x0,8
tick,0x7fff4326feb4,127979768,0,0x0,8
tick,0x7fff4326feb4,127994952,0,0x0,8
tick,0x7fff4326feb4,128009934,0,0x0,8
tick,0x7fff4326feb4,128025939,0,0x0,8
tick,0x7fff4326feb4,128041951,0,0x0,8
tick,0x7fff4326feb4,128057985,0,0x0,8
tick,0x7fff4326feb4,128073589,0,0x0,8
tick,0x7fff4326feb4,128088658,0,0x0,8
tick,0x7fff4326feb4,128103989,0,0x0,8
tick,0x7fff4326feb4,128119285,0,0x0,8
tick,0x7fff4326feb4,128134487,0,0x0,8
tick,0x7fff4326feb4,128149815,0,0x0,8
tick,0x7fff4326feb4,128165844,0,0x0,8
tick,0x7fff4326feb4,128181678,0,0x0,8
tick,0x7fff4326feb4,128196506,0,0x0,8
tick,0x7fff4326feb4,128211752,0,0x0,8
tick,0x7fff4326feb4,128227034,0,0x0,8
tick,0x7fff4326feb4,128242927,0,0x0,8
tick,0x7fff4326feb4,128258582,0,0x0,8
tick,0x7fff4326feb4,128274224,0,0x0,8
tick,0x7fff4326feb4,128289791,0,0x0,8
tick,0x7fff4326feb4,128305554,0,0x0,8
tick,0x7fff4326feb4,128320778,0,0x0,8
tick,0x7fff4326feb4,128336539,0,0x0,8
tick,0x7fff4326feb4,128352036,0,0x0,8
tick,0x7fff4326feb4,128367562,0,0x0,8
tick,0x7fff4326feb4,128383829,0,0x0,8
tick,0x7fff4326feb4,128399838,0,0x0,8
tick,0x7fff4326feb4,128415556,0,0x0,8
tick,0x7fff4326feb4,128430883,0,0x0,8
tick,0x7fff4326feb4,128446870,0,0x0,8
tick,0x7fff4326feb4,128461935,0,0x0,8
tick,0x7fff4326feb4,128476704,0,0x0,8
tick,0x7fff4326feb4,128491704,0,0x0,8
tick,0x7fff4326feb4,128507713,0,0x0,8
tick,0x7fff4326feb4,128523535,0,0x0,8
tick,0x7fff4326feb4,128538728,0,0x0,8
tick,0x7fff4326feb4,128553945,0,0x0,8
tick,0x7fff4326feb4,128569535,0,0x0,8
tick,0x7fff4326feb4,128584921,0,0x0,8
tick,0x7fff4326feb4,128600917,0,0x0,8
tick,0x7fff4326feb4,128616398,0,0x0,8
tick,0x7fff4326feb4,128631868,0,0x0,8
tick,0x7fff4326feb4,128647641,0,0x0,8
tick,0x7fff4326feb4,128662899,0,0x0,8
tick,0x7fff4326feb4,128678785,0,0x0,8
tick,0x7fff4326feb4,128694011,0,0x0,8
tick,0x7fff4326feb4,128709511,0,0x0,8
tick,0x7fff4326feb4,128725503,0,0x0,8
tick,0x7fff4326feb4,128741509,0,0x0,8
tick,0x7fff4326feb4,128757520,0,0x0,8
tick,0x7fff4326feb4,128773547,0,0x0,8
tick,0x7fff4326feb4,128789534,0,0x0,8
tick,0x7fff4326feb4,128805533,0,0x0,8
tick,0x7fff4326feb4,128820486,0,0x0,8
tick,0x7fff4326feb4,128836516,0,0x0,8
tick,0x7fff4326feb4,128851927,0,0x0,8
tick,0x7fff4326feb4,128867443,0,0x0,8
tick,0x7fff4326feb4,128882523,0,0x0,8
tick,0x7fff4326feb4,128898529,0,0x0,8
tick,0x7fff4326feb4,128914556,0,0x0,8
tick,0x7fff4326feb4,128930812,0,0x0,8
tick,0x7fff4326feb4,128945823,0,0x0,8
tick,0x7fff4326feb4,128961050,0,0x0,8
tick,0x7fff4326feb4,128976457,0,0x0,8
tick,0x7fff4326feb4,128991778,0,0x0,8
tick,0x7fff4326feb4,129007599,0,0x0,8
tick,0x7fff4326feb4,129023189,0,0x0,8
tick,0x7fff4326feb4,129039159,0,0x0,8
tick,0x7fff4326feb4,129054843,0,0x0,8
tick,0x7fff4326feb4,129070463,0,0x0,8
tick,0x7fff4326feb4,129086796,0,0x0,8
tick,0x7fff4326feb4,129102487,0,0x0,8
tick,0x7fff4326feb4,129118638,0,0x0,8
tick,0x7fff4326feb4,129134118,0,0x0,8
tick,0x7fff4326feb4,129149908,0,0x0,8
tick,0x7fff4326feb4,129165512,0,0x0,8
tick,0x7fff4326feb4,129181489,0,0x0,8
tick,0x7fff4326feb4,129197519,0,0x0,8
tick,0x7fff4326feb4,129212491,0,0x0,8
tick,0x7fff4326feb4,129227982,0,0x0,8
tick,0x7fff4326feb4,129243622,0,0x0,8
tick,0x7fff4326feb4,129258982,0,0x0,8
tick,0x7fff4326feb4,129274499,0,0x0,8
tick,0x7fff4326feb4,129290002,0,0x0,8
tick,0x7fff4326feb4,129306003,0,0x0,8
tick,0x7fff4326feb4,129322003,0,0x0,8
tick,0x7fff4326feb4,129336894,0,0x0,8
tick,0x7fff4326feb4,129352496,0,0x0,8
tick,0x7fff4326feb4,129368500,0,0x0,8
tick,0x7fff4326feb4,129384516,0,0x0,8
tick,0x7fff4326feb4,129400500,0,0x0,8
tick,0x7fff4326feb4,129416294,0,0x0,8
tick,0x7fff4326feb4,129432117,0,0x0,8
tick,0x7fff4326feb4,129447585,0,0x0,8
tick,0x7fff4326feb4,129462501,0,0x0,8
tick,0x7fff4326feb4,129477740,0,0x0,8
tick,0x7fff4326feb4,129493507,0,0x0,8
tick,0x7fff4326feb4,129508325,0,0x0,8
tick,0x7fff4326feb4,129524224,0,0x0,8
tick,0x7fff4326feb4,129539245,0,0x0,8
tick,0x7fff4326feb4,129554518,0,0x0,8
tick,0x7fff4326feb4,129570027,0,0x0,8
tick,0x7fff4326feb4,129586285,0,0x0,8
tick,0x7fff4326feb4,129601427,0,0x0,8
tick,0x7fff4326feb4,129616737,0,0x0,8
tick,0x7fff4326feb4,129632288,0,0x0,8
tick,0x7fff4326feb4,129647806,0,0x0,8
tick,0x7fff4326feb4,129663235,0,0x0,8
tick,0x7fff4326feb4,129679119,0,0x0,8
tick,0x7fff4326feb4,129695095,0,0x0,8
tick,0x7fff4326feb4,129710520,0,0x0,8
tick,0x7fff4326feb4,129725826,0,0x0,8
tick,0x7fff4326feb4,129741531,0,0x0,8
tick,0x7fff4326feb4,129757537,0,0x0,8
tick,0x7fff4326feb4,129773550,0,0x0,8
tick,0x7fff4326feb4,129789543,0,0x0,8
tick,0x7fff4326feb4,129805521,0,0x0,8
tick,0x7fff4326feb4,129820505,0,0x0,8
tick,0x7fff4326feb4,129835949,0,0x0,8
tick,0x7fff4326feb4,129851776,0,0x0,8
tick,0x7fff4326feb4,129867262,0,0x0,8
tick,0x7fff4326feb4,129882531,0,0x0,8
tick,0x7fff4326feb4,129898297,0,0x0,8
tick,0x7fff4326feb4,129913543,0,0x0,8
tick,0x7fff4326feb4,129929538,0,0x0,8
tick,0x7fff4326feb4,129945228,0,0x0,8
tick,0x7fff4326feb4,129960513,0,0x0,8
tick,0x7fff4326feb4,129976263,0,0x0,8
tick,0x7fff4326feb4,129991619,0,0x0,8
tick,0x7fff4326feb4,130006871,0,0x0,8
tick,0x7fff4326feb4,130022922,0,0x0,8
tick,0x7fff4326feb4,130038662,0,0x0,8
tick,0x7fff4326feb4,130054846,0,0x0,8
tick,0x7fff4326feb4,130070515,0,0x0,8
tick,0x7fff4326feb4,130085833,0,0x0,8
tick,0x7fff4326feb4,130101523,0,0x0,8
tick,0x7fff4326feb4,130116979,0,0x0,8
tick,0x7fff4326feb4,130132963,0,0x0,8
tick,0x7fff4326feb4,130148483,0,0x0,8
tick,0x7fff4326feb4,130164240,0,0x0,8
tick,0x7fff4326feb4,130179754,0,0x0,8
tick,0x7fff4326feb4,130195243,0,0x0,8
tick,0x7fff4326feb4,130211292,0,0x0,8
tick,0x7fff4326feb4,130226874,0,0x0,8
tick,0x7fff4326feb4,130242105,0,0x0,8
tick,0x7fff4326feb4,130257669,0,0x0,8
tick,0x7fff4326feb4,130273286,0,0x0,8
tick,0x7fff4326feb4,130288776,0,0x0,8
tick,0x7fff4326feb4,130304962,0,0x0,8
tick,0x7fff4326feb4,130320641,0,0x0,8
tick,0x7fff4326feb4,130336282,0,0x0,8
tick,0x7fff4326feb4,130351892,0,0x0,8
tick,0x7fff4326feb4,130367914,0,0x0,8
tick,0x7fff4326feb4,130383451,0,0x0,8
tick,0x7fff4326feb4,130399511,0,0x0,8
tick,0x7fff4326feb4,130414927,0,0x0,8
tick,0x7fff4326feb4,130430519,0,0x0,8
tick,0x7fff4326feb4,130445949,0,0x0,8
tick,0x7fff4326feb4,130462071,0,0x0,8
tick,0x7fff4326feb4,130477076,0,0x0,8
tick,0x7fff4326feb4,130492246,0,0x0,8
tick,0x7fff4326feb4,130508537,0,0x0,8
tick,0x7fff4326feb4,130524667,0,0x0,8
tick,0x7fff4326feb4,130540049,0,0x0,8
tick,0x7fff4326feb4,130555662,0,0x0,8
tick,0x7fff4326feb4,130570960,0,0x0,8
tick,0x7fff4326feb4,130587259,0,0x0,8
tick,0x7fff4326feb4,130602691,0,0x0,8
tick,0x7fff4326feb4,130618299,0,0x0,8
tick,0x7fff4326feb4,130634028,0,0x0,8
tick,0x7fff4326feb4,130649665,0,0x0,8
tick,0x7fff4326feb4,130665358,0,0x0,8
tick,0x7fff4326feb4,130680844,0,0x0,8
tick,0x7fff4326feb4,130696155,0,0x0,8
tick,0x7fff4326feb4,130711315,0,0x0,8
tick,0x7fff4326feb4,130726707,0,0x0,8
tick,0x7fff4326feb4,130742686,0,0x0,8
tick,0x7fff4326feb4,130758126,0,0x0,8
tick,0x7fff4326feb4,130773724,0,0x0,8
tick,0x7fff4326feb4,130789354,0,0x0,8
tick,0x7fff4326feb4,130804969,0,0x0,8
tick,0x7fff4326feb4,130820615,0,0x0,8
tick,0x7fff4326feb4,130835885,0,0x0,8
tick,0x7fff4326feb4,130851164,0,0x0,8
tick,0x7fff4326feb4,130866630,0,0x0,8
tick,0x7fff4326feb4,130882234,0,0x0,8
tick,0x7fff4326feb4,130897538,0,0x0,8
tick,0x7fff4326feb4,130913219,0,0x0,8
tick,0x7fff4326feb4,130928219,0,0x0,8
tick,0x7fff4326feb4,130943542,0,0x0,8
tick,0x7fff4326feb4,130958981,0,0x0,8
tick,0x7fff4326feb4,130974551,0,0x0,8
tick,0x7fff4326feb4,130990345,0,0x0,8
tick,0x7fff4326feb4,131005839,0,0x0,8
tick,0x7fff4326feb4,131021000,0,0x0,8
tick,0x7fff4326feb4,131036442,0,0x0,8
tick,0x7fff4326feb4,131052264,0,0x0,8
tick,0x7fff4326feb4,131067549,0,0x0,8
tick,0x7fff4326feb4,131083550,0,0x0,8
tick,0x7fff4326feb4,131098745,0,0x0,8
tick,0x7fff4326feb4,131113962,0,0x0,8
tick,0x7fff4326feb4,131128845,0,0x0,8
tick,0x7fff4326feb4,131144962,0,0x0,8
tick,0x7fff4326feb4,131160547,0,0x0,8
tick,0x7fff4326feb4,131176134,0,0x0,8
tick,0x7fff4326feb4,131191563,0,0x0,8
tick,0x7fff4326feb4,131207208,0,0x0,8
tick,0x7fff4326feb4,131222896,0,0x0,8
tick,0x7fff4326feb4,131238608,0,0x0,8
tick,0x7fff4326feb4,131254592,0,0x0,8
tick,0x7fff4326feb4,131270220,0,0x0,8
tick,0x7fff4326feb4,131286021,0,0x0,8
tick,0x7fff4326feb4,131302119,0,0x0,8
tick,0x7fff4326feb4,131317776,0,0x0,8
tick,0x7fff4326feb4,131333504,0,0x0,8
tick,0x7fff4326feb4,131348766,0,0x0,8
tick,0x7fff4326feb4,131364467,0,0x0,8
tick,0x7fff4326feb4,131380115,0,0x0,8
tick,0x7fff4326feb4,131395521,0,0x0,8
tick,0x7fff4326feb4,131410789,0,0x0,8
tick,0x7fff4326feb4,131426550,0,0x0,8
tick,0x7fff4326feb4,131442037,0,0x0,8
tick,0x7fff4326feb4,131457797,0,0x0,8
tick,0x7fff4326feb4,131473078,0,0x0,8
tick,0x7fff4326feb4,131488513,0,0x0,8
tick,0x7fff4326feb4,131503888,0,0x0,8
tick,0x7fff4326feb4,131519214,0,0x0,8
tick,0x7fff4326feb4,131534506,0,0x0,8
tick,0x7fff4326feb4,131549935,0,0x0,8
tick,0x7fff4326feb4,131565513,0,0x0,8
tick,0x7fff4326feb4,131581514,0,0x0,8
tick,0x7fff4326feb4,131596556,0,0x0,8
tick,0x7fff4326feb4,131611674,0,0x0,8
tick,0x7fff4326feb4,131627779,0,0x0,8
tick,0x7fff4326feb4,131643360,0,0x0,8
tick,0x7fff4326feb4,131658708,0,0x0,8
tick,0x7fff4326feb4,131674202,0,0x0,8
tick,0x7fff4326feb4,131690105,0,0x0,8
tick,0x7fff4326feb4,131705700,0,0x0,8
tick,0x7fff4326feb4,131720527,0,0x0,8
tick,0x7fff4326feb4,131735919,0,0x0,8
tick,0x7fff4326feb4,131751518,0,0x0,8
tick,0x7fff4326feb4,131766529,0,0x0,8
tick,0x7fff4326feb4,131781819,0,0x0,8
tick,0x7fff4326feb4,131797540,0,0x0,8
tick,0x7fff4326feb4,131812482,0,0x0,8
tick,0x7fff4326feb4,131827787,0,0x0,8
tick,0x7fff4326feb4,131843508,0,0x0,8
tick,0x7fff4326feb4,131859702,0,0x0,8
tick,0x7fff4326feb4,131874803,0,0x0,8
tick,0x7fff4326feb4,131890206,0,0x0,8
tick,0x7fff4326feb4,131905730,0,0x0,8
tick,0x7fff4326feb4,131920517,0,0x0,8
tick,0x7fff4326feb4,131935847,0,0x0,8
tick,0x7fff4326feb4,131950940,0,0x0,8
tick,0x7fff4326feb4,131966502,0,0x0,8
tick,0x7fff4326feb4,131981989,0,0x0,8
tick,0x7fff4326feb4,131998002,0,0x0,8
tick,0x7fff4326feb4,132013640,0,0x0,8
tick,0x7fff4326feb4,132029408,0,0x0,8
tick,0x7fff4326feb4,132045539,0,0x0,8
tick,0x7fff4326feb4,132061521,0,0x0,8
tick,0x7fff4326feb4,132076525,0,0x0,8
tick,0x7fff4326feb4,132091847,0,0x0,8
tick,0x7fff4326feb4,132107876,0,0x0,8
tick,0x7fff4326feb4,132122930,0,0x0,8
tick,0x7fff4326feb4,132138941,0,0x0,8
tick,0x7fff4326feb4,132155360,0,0x0,8
tick,0x7fff4326feb4,132170522,0,0x0,8
tick,0x7fff4326feb4,132186187,0,0x0,8
tick,0x7fff4326feb4,132201874,0,0x0,8
tick,0x7fff4326feb4,132217054,0,0x0,8
tick,0x7fff4326feb4,132232696,0,0x0,8
tick,0x7fff4326feb4,132248170,0,0x0,8
tick,0x7fff4326feb4,132263354,0,0x0,8
tick,0x7fff4326feb4,132278562,0,0x0,8
tick,0x7fff4326feb4,132293753,0,0x0,8
tick,0x7fff4326feb4,132309523,0,0x0,8
tick,0x7fff4326feb4,132325529,0,0x0,8
tick,0x7fff4326feb4,132341532,0,0x0,8
tick,0x7fff4326feb4,132357565,0,0x0,8
tick,0x7fff4326feb4,132372515,0,0x0,8
tick,0x7fff4326feb4,132387907,0,0x0,8
tick,0x7fff4326feb4,132403102,0,0x0,8
tick,0x7fff4326feb4,132418448,0,0x0,8
tick,0x7fff4326feb4,132433644,0,0x0,8
tick,0x7fff4326feb4,132448731,0,0x0,8
tick,0x7fff4326feb4,132464298,0,0x0,8
tick,0x7fff4326feb4,132479899,0,0x0,8
tick,0x7fff4326feb4,132495282,0,0x0,8
tick,0x7fff4326feb4,132511613,0,0x0,8
tick,0x7fff4326feb4,132527871,0,0x0,8
tick,0x7fff4326feb4,132543901,0,0x0,8
tick,0x7fff4326feb4,132559667,0,0x0,8
tick,0x7fff4326feb4,132574745,0,0x0,8
tick,0x7fff4326feb4,132589922,0,0x0,8
tick,0x7fff4326feb4,132605620,0,0x0,8
tick,0x7fff4326feb4,132620953,0,0x0,8
tick,0x7fff4326feb4,132636984,0,0x0,8
tick,0x7fff4326feb4,132652612,0,0x0,8
tick,0x7fff4326feb4,132668050,0,0x0,8
tick,0x7fff4326feb4,132683320,0,0x0,8
tick,0x7fff4326feb4,132698797,0,0x0,8
tick,0x7fff4326feb4,132714398,0,0x0,8
tick,0x7fff4326feb4,132730108,0,0x0,8
tick,0x7fff4326feb4,132745516,0,0x0,8
tick,0x7fff4326feb4,132761477,0,0x0,8
tick,0x7fff4326feb4,132777170,0,0x0,8
tick,0x7fff4326feb4,132792440,0,0x0,8
tick,0x7fff4326feb4,132807744,0,0x0,8
tick,0x7fff4326feb4,132823765,0,0x0,8
tick,0x7fff4326feb4,132838841,0,0x0,8
tick,0x7fff4326feb4,132854479,0,0x0,8
tick,0x7fff4326feb4,132869950,0,0x0,8
tick,0x7fff4326feb4,132885535,0,0x0,8
tick,0x7fff4326feb4,132901515,0,0x0,8
tick,0x7fff4326feb4,132917508,0,0x0,8
tick,0x7fff4326feb4,132933526,0,0x0,8
tick,0x7fff4326feb4,132948707,0,0x0,8
tick,0x7fff4326feb4,132964336,0,0x0,8
tick,0x7fff4326feb4,132979657,0,0x0,8
tick,0x7fff4326feb4,132995483,0,0x0,8
tick,0x7fff4326feb4,133010491,0,0x0,8
tick,0x7fff4326feb4,133025768,0,0x0,8
tick,0x7fff4326feb4,133041426,0,0x0,8
tick,0x7fff4326feb4,133057006,0,0x0,8
tick,0x7fff4326feb4,133072938,0,0x0,8
tick,0x7fff4326feb4,133088405,0,0x0,8
tick,0x7fff4326feb4,133104108,0,0x0,8
tick,0x7fff4326feb4,133119285,0,0x0,8
tick,0x7fff4326feb4,133135638,0,0x0,8
tick,0x7fff4326feb4,133151421,0,0x0,8
tick,0x7fff4326feb4,133166680,0,0x0,8
tick,0x7fff4326feb4,133182541,0,0x0,8
tick,0x7fff4326feb4,133197980,0,0x0,8
tick,0x7fff4326feb4,133213254,0,0x0,8
tick,0x7fff4326feb4,133228857,0,0x0,8
tick,0x7fff4326feb4,133244558,0,0x0,8
tick,0x7fff4326feb4,133260289,0,0x0,8
tick,0x7fff4326feb4,133275251,0,0x0,8
tick,0x7fff4326feb4,133291309,0,0x0,8
tick,0x7fff4326feb4,133306275,0,0x0,8
tick,0x7fff4326feb4,133322259,0,0x0,8
tick,0x7fff4326feb4,133338304,0,0x0,8
tick,0x7fff4326feb4,133354246,0,0x0,8
tick,0x7fff4326feb4,133369253,0,0x0,8
tick,0x7fff4326feb4,133385109,0,0x0,8
tick,0x7fff4326feb4,133400834,0,0x0,8
tick,0x7fff4326feb4,133417126,0,0x0,8
tick,0x7fff4326feb4,133433167,0,0x0,8
tick,0x7fff4326feb4,133448512,0,0x0,8
tick,0x7fff4326feb4,133464546,0,0x0,8
tick,0x7fff4326feb4,133479823,0,0x0,8
tick,0x7fff4326feb4,133495521,0,0x0,8
tick,0x7fff4326feb4,133510764,0,0x0,8
tick,0x7fff4326feb4,133525944,0,0x0,8
tick,0x7fff4326feb4,133541539,0,0x0,8
tick,0x7fff4326feb4,133556793,0,0x0,8
tick,0x7fff4326feb4,133571879,0,0x0,8
tick,0x7fff4326feb4,133587404,0,0x0,8
tick,0x7fff4326feb4,133603160,0,0x0,8
tick,0x7fff4326feb4,133618987,0,0x0,8
tick,0x7fff4326feb4,133635053,0,0x0,8
tick,0x7fff4326feb4,133650434,0,0x0,8
tick,0x7fff4326feb4,133665987,0,0x0,8
tick,0x7fff4326feb4,133681834,0,0x0,8
tick,0x7fff4326feb4,133696820,0,0x0,8
tick,0x7fff4326feb4,133712818,0,0x0,8
tick,0x7fff4326feb4,133728783,0,0x0,8
tick,0x7fff4326feb4,133744815,0,0x0,8
tick,0x7fff4326feb4,133759532,0,0x0,8
tick,0x7fff4326feb4,133775117,0,0x0,8
tick,0x7fff4326feb4,133790275,0,0x0,8
tick,0x7fff4326feb4,133805828,0,0x0,8
tick,0x7fff4326feb4,133820547,0,0x0,8
tick,0x7fff4326feb4,133836289,0,0x0,8
tick,0x7fff4326feb4,133851802,0,0x0,8
tick,0x7fff4326feb4,133867204,0,0x0,8
tick,0x7fff4326feb4,133882865,0,0x0,8
tick,0x7fff4326feb4,133898302,0,0x0,8
tick,0x7fff4326feb4,133913970,0,0x0,8
tick,0x7fff4326feb4,133929344,0,0x0,8
tick,0x7fff4326feb4,133944793,0,0x0,8
tick,0x7fff4326feb4,133959784,0,0x0,8
tick,0x7fff4326feb4,133975032,0,0x0,8
tick,0x7fff4326feb4,133989912,0,0x0,8
tick,0x7fff4326feb4,134005627,0,0x0,8
tick,0x7fff4326feb4,134021438,0,0x0,8
tick,0x7fff4326feb4,134037073,0,0x0,8
tick,0x7fff4326feb4,134052239,0,0x0,8
tick,0x7fff4326feb4,134067680,0,0x0,8
tick,0x7fff4326feb4,134083445,0,0x0,8
tick,0x7fff4326feb4,134099104,0,0x0,8
tick,0x7fff4326feb4,134114254,0,0x0,8
tick,0x7fff4326feb4,134129519,0,0x0,8
tick,0x7fff4326feb4,134144923,0,0x0,8
tick,0x7fff4326feb4,134160797,0,0x0,8
tick,0x7fff4326feb4,134176118,0,0x0,8
tick,0x7fff4326feb4,134191622,0,0x0,8
tick,0x7fff4326feb4,134207486,0,0x0,8
tick,0x7fff4326feb4,134223094,0,0x0,8
tick,0x7fff4326feb4,134238976,0,0x0,8
tick,0x7fff4326feb4,134254540,0,0x0,8
tick,0x7fff4326feb4,134270315,0,0x0,8
tick,0x7fff4326feb4,134285833,0,0x0,8
tick,0x7fff4326feb4,134301136,0,0x0,8
tick,0x7fff4326feb4,134316834,0,0x0,8
tick,0x7fff4326feb4,134332235,0,0x0,8
tick,0x7fff4326feb4,134348256,0,0x0,8
tick,0x7fff4326feb4,134363742,0,0x0,8
tick,0x7fff4326feb4,134379305,0,0x0,8
tick,0x7fff4326feb4,134395359,0,0x0,8
tick,0x7fff4326feb4,134411518,0,0x0,8
tick,0x7fff4326feb4,134427136,0,0x0,8
tick,0x7fff4326feb4,134443118,0,0x0,8
tick,0x7fff4326feb4,134458949,0,0x0,8
tick,0x7fff4326feb4,134474161,0,0x0,8
tick,0x7fff4326feb4,134490017,0,0x0,8
tick,0x7fff4326feb4,134505184,0,0x0,8
tick,0x7fff4326feb4,134520311,0,0x0,8
tick,0x7fff4326feb4,134536173,0,0x0,8
tick,0x7fff4326feb4,134551010,0,0x0,8
tick,0x7fff4326feb4,134566501,0,0x0,8
tick,0x7fff4326feb4,134581993,0,0x0,8
tick,0x7fff4326feb4,134597311,0,0x0,8
tick,0x7fff4326feb4,134612714,0,0x0,8
tick,0x7fff4326feb4,134628529,0,0x0,8
tick,0x7fff4326feb4,134644321,0,0x0,8
tick,0x7fff4326feb4,134659971,0,0x0,8
tick,0x7fff4326feb4,134675863,0,0x0,8
tick,0x7fff4326feb4,134691305,0,0x0,8
tick,0x7fff4326feb4,134707067,0,0x0,8
tick,0x7fff4326feb4,134722767,0,0x0,8
tick,0x7fff4326feb4,134738452,0,0x0,8
tick,0x7fff4326feb4,134754062,0,0x0,8
tick,0x7fff4326feb4,134769520,0,0x0,8
tick,0x7fff4326feb4,134785123,0,0x0,8
tick,0x7fff4326feb4,134800795,0,0x0,8
tick,0x7fff4326feb4,134816483,0,0x0,8
tick,0x7fff4326feb4,134831861,0,0x0,8
tick,0x7fff4326feb4,134847292,0,0x0,8
tick,0x7fff4326feb4,134863702,0,0x0,8
tick,0x7fff4326feb4,134879189,0,0x0,8
tick,0x7fff4326feb4,134895213,0,0x0,8
tick,0x7fff4326feb4,134911641,0,0x0,8
tick,0x7fff4326feb4,134926861,0,0x0,8
tick,0x7fff4326feb4,134942554,0,0x0,8
tick,0x7fff4326feb4,134958125,0,0x0,8
tick,0x7fff4326feb4,134973735,0,0x0,8
tick,0x7fff4326feb4,134989310,0,0x0,8
tick,0x7fff4326feb4,135005001,0,0x0,8
tick,0x7fff4326feb4,135020705,0,0x0,8
tick,0x7fff4326feb4,135036457,0,0x0,8
tick,0x7fff4326feb4,135052063,0,0x0,8
tick,0x7fff4326feb4,135067536,0,0x0,8
tick,0x7fff4326feb4,135083183,0,0x0,8
tick,0x7fff4326feb4,135098589,0,0x0,8
tick,0x7fff4326feb4,135114223,0,0x0,8
tick,0x7fff4326feb4,135130339,0,0x0,8
tick,0x7fff4326feb4,135146295,0,0x0,8
tick,0x7fff4326feb4,135162180,0,0x0,8
tick,0x7fff4326feb4,135177148,0,0x0,8
tick,0x7fff4326feb4,135193239,0,0x0,8
tick,0x7fff4326feb4,135209204,0,0x0,8
tick,0x7fff4326feb4,135224722,0,0x0,8
tick,0x7fff4326feb4,135240721,0,0x0,8
tick,0x7fff4326feb4,135256246,0,0x0,8
tick,0x7fff4326feb4,135271346,0,0x0,8
tick,0x7fff4326feb4,135286944,0,0x0,8
tick,0x7fff4326feb4,135302392,0,0x0,8
tick,0x7fff4326feb4,135318136,0,0x0,8
tick,0x7fff4326feb4,135333464,0,0x0,8
tick,0x7fff4326feb4,135349059,0,0x0,8
tick,0x7fff4326feb4,135364791,0,0x0,8
tick,0x7fff4326feb4,135380350,0,0x0,8
tick,0x7fff4326feb4,135395760,0,0x0,8
tick,0x7fff4326feb4,135411401,0,0x0,8
tick,0x7fff4326feb4,135427904,0,0x0,8
tick,0x7fff4326feb4,135442905,0,0x0,8
tick,0x7fff4326feb4,135458446,0,0x0,8
tick,0x7fff4326feb4,135474127,0,0x0,8
tick,0x7fff4326feb4,135489813,0,0x0,8
tick,0x7fff4326feb4,135505503,0,0x0,8
tick,0x7fff4326feb4,135520982,0,0x0,8
tick,0x7fff4326feb4,135536124,0,0x0,8
tick,0x7fff4326feb4,135551556,0,0x0,8
tick,0x7fff4326feb4,135567031,0,0x0,8
tick,0x7fff4326feb4,135582124,0,0x0,8
tick,0x7fff4326feb4,135597770,0,0x0,8
tick,0x7fff4326feb4,135613520,0,0x0,8
tick,0x7fff4326feb4,135629408,0,0x0,8
tick,0x7fff4326feb4,135645320,0,0x0,8
tick,0x7fff4326feb4,135660734,0,0x0,8
tick,0x7fff4326feb4,135676318,0,0x0,8
tick,0x7fff4326feb4,135692026,0,0x0,8
tick,0x7fff4326feb4,135707732,0,0x0,8
tick,0x7fff4326feb4,135723379,0,0x0,8
tick,0x7fff4326feb4,135739154,0,0x0,8
tick,0x7fff4326feb4,135755043,0,0x0,8
tick,0x7fff4326feb4,135770522,0,0x0,8
tick,0x7fff4326feb4,135786112,0,0x0,8
tick,0x7fff4326feb4,135802053,0,0x0,8
tick,0x7fff4326feb4,135817525,0,0x0,8
tick,0x7fff4326feb4,135832869,0,0x0,8
tick,0x7fff4326feb4,135848386,0,0x0,8
tick,0x7fff4326feb4,135864142,0,0x0,8
tick,0x7fff4326feb4,135879767,0,0x0,8
tick,0x7fff4326feb4,135895447,0,0x0,8
tick,0x7fff4326feb4,135910905,0,0x0,8
tick,0x7fff4326feb4,135926591,0,0x0,8
tick,0x7fff4326feb4,135942267,0,0x0,8
tick,0x7fff4326feb4,135957544,0,0x0,8
tick,0x7fff4326feb4,135973911,0,0x0,8
tick,0x7fff4326feb4,135988753,0,0x0,8
tick,0x7fff4326feb4,136004331,0,0x0,8
tick,0x7fff4326feb4,136019762,0,0x0,8
tick,0x7fff4326feb4,136035939,0,0x0,8
tick,0x7fff4326feb4,136051050,0,0x0,8
tick,0x7fff4326feb4,136066248,0,0x0,8
tick,0x7fff4326feb4,136082123,0,0x0,8
tick,0x7fff4326feb4,136097465,0,0x0,8
tick,0x7fff4326feb4,136112953,0,0x0,8
tick,0x7fff4326feb4,136128496,0,0x0,8
tick,0x7fff4326feb4,136144238,0,0x0,8
tick,0x7fff4326feb4,136160509,0,0x0,8
tick,0x7fff4326feb4,136175827,0,0x0,8
tick,0x7fff4326feb4,136191526,0,0x0,8
tick,0x7fff4326feb4,136207198,0,0x0,8
tick,0x7fff4326feb4,136222762,0,0x0,8
tick,0x7fff4326feb4,136238576,0,0x0,8
tick,0x7fff4326feb4,136254261,0,0x0,8
tick,0x7fff4326feb4,136270179,0,0x0,8
tick,0x7fff4326feb4,136285627,0,0x0,8
tick,0x7fff4326feb4,136301298,0,0x0,8
tick,0x7fff4326feb4,136317055,0,0x0,8
tick,0x7fff4326feb4,136332361,0,0x0,8
tick,0x7fff4326feb4,136348204,0,0x0,8
tick,0x7fff4326feb4,136363414,0,0x0,8
tick,0x7fff4326feb4,136379086,0,0x0,8
tick,0x7fff4326feb4,136394489,0,0x0,8
tick,0x7fff4326feb4,136410450,0,0x0,8
tick,0x7fff4326feb4,136426074,0,0x0,8
tick,0x7fff4326feb4,136442181,0,0x0,8
tick,0x7fff4326feb4,136457779,0,0x0,8
tick,0x7fff4326feb4,136473206,0,0x0,8
tick,0x7fff4326feb4,136488810,0,0x0,8
tick,0x7fff4326feb4,136504497,0,0x0,8
tick,0x7fff4326feb4,136520179,0,0x0,8
tick,0x7fff4326feb4,136536296,0,0x0,8
tick,0x7fff4326feb4,136552205,0,0x0,8
tick,0x7fff4326feb4,136567610,0,0x0,8
tick,0x7fff4326feb4,136582997,0,0x0,8
tick,0x7fff4326feb4,136598638,0,0x0,8
tick,0x7fff4326feb4,136614860,0,0x0,8
tick,0x7fff4326feb4,136629881,0,0x0,8
tick,0x7fff4326feb4,136646108,0,0x0,8
tick,0x7fff4326feb4,136661773,0,0x0,8
tick,0x7fff4326feb4,136677213,0,0x0,8
tick,0x7fff4326feb4,136693067,0,0x0,8
tick,0x7fff4326feb4,136708227,0,0x0,8
tick,0x7fff4326feb4,136723245,0,0x0,8
tick,0x7fff4326feb4,136738217,0,0x0,8
tick,0x7fff4326feb4,136753771,0,0x0,8
tick,0x7fff4326feb4,136769488,0,0x0,8
tick,0x7fff4326feb4,136785119,0,0x0,8
tick,0x7fff4326feb4,136800236,0,0x0,8
tick,0x7fff4326feb4,136816270,0,0x0,8
tick,0x7fff4326feb4,136832514,0,0x0,8
tick,0x7fff4326feb4,136848057,0,0x0,8
tick,0x7fff4326feb4,136863523,0,0x0,8
tick,0x7fff4326feb4,136879259,0,0x0,8
tick,0x7fff4326feb4,136895249,0,0x0,8
tick,0x7fff4326feb4,136910921,0,0x0,8
tick,0x7fff4326feb4,136926377,0,0x0,8
tick,0x7fff4326feb4,136941912,0,0x0,8
tick,0x7fff4326feb4,136957339,0,0x0,8
tick,0x7fff4326feb4,136972902,0,0x0,8
tick,0x7fff4326feb4,136988562,0,0x0,8
tick,0x7fff4326feb4,137003952,0,0x0,8
tick,0x7fff4326feb4,137019787,0,0x0,8
tick,0x7fff4326feb4,137034973,0,0x0,8
tick,0x7fff4326feb4,137049856,0,0x0,8
tick,0x7fff4326feb4,137065947,0,0x0,8
tick,0x7fff4326feb4,137081205,0,0x0,8
tick,0x7fff4326feb4,137097569,0,0x0,8
tick,0x7fff4326feb4,137112980,0,0x0,8
tick,0x7fff4326feb4,137128966,0,0x0,8
tick,0x7fff4326feb4,137144853,0,0x0,8
tick,0x7fff4326feb4,137159848,0,0x0,8
tick,0x7fff4326feb4,137175402,0,0x0,8
tick,0x7fff4326feb4,137190855,0,0x0,8
tick,0x7fff4326feb4,137206505,0,0x0,8
tick,0x7fff4326feb4,137222477,0,0x0,8
tick,0x7fff4326feb4,137238224,0,0x0,8
tick,0x7fff4326feb4,137254483,0,0x0,8
tick,0x7fff4326feb4,137270218,0,0x0,8
tick,0x7fff4326feb4,137285402,0,0x0,8
tick,0x7fff4326feb4,137301275,0,0x0,8
tick,0x7fff4326feb4,137317180,0,0x0,8
tick,0x7fff4326feb4,137332183,0,0x0,8
tick,0x7fff4326feb4,137347473,0,0x0,8
tick,0x7fff4326feb4,137363235,0,0x0,8
tick,0x7fff4326feb4,137378879,0,0x0,8
tick,0x7fff4326feb4,137394413,0,0x0,8
tick,0x7fff4326feb4,137410480,0,0x0,8
tick,0x7fff4326feb4,137426090,0,0x0,8
tick,0x7fff4326feb4,137442491,0,0x0,8
tick,0x7fff4326feb4,137458433,0,0x0,8
tick,0x7fff4326feb4,137474653,0,0x0,8
tick,0x7fff4326feb4,137489989,0,0x0,8
tick,0x7fff4326feb4,137505491,0,0x0,8
tick,0x7fff4326feb4,137521197,0,0x0,8
tick,0x7fff4326feb4,137536599,0,0x0,8
tick,0x7fff4326feb4,137552539,0,0x0,8
tick,0x7fff4326feb4,137567387,0,0x0,8
tick,0x7fff4326feb4,137582489,0,0x0,8
tick,0x7fff4326feb4,137598322,0,0x0,8
tick,0x7fff4326feb4,137614704,0,0x0,8
tick,0x7fff4326feb4,137630033,0,0x0,8
tick,0x7fff4326feb4,137645425,0,0x0,8
tick,0x7fff4326feb4,137661814,0,0x0,8
tick,0x7fff4326feb4,137676966,0,0x0,8
tick,0x7fff4326feb4,137693452,0,0x0,8
tick,0x7fff4326feb4,137708297,0,0x0,8
tick,0x7fff4326feb4,137724377,0,0x0,8
tick,0x7fff4326feb4,137739506,0,0x0,8
tick,0x7fff4326feb4,137755049,0,0x0,8
tick,0x7fff4326feb4,137770935,0,0x0,8
tick,0x7fff4326feb4,137785844,0,0x0,8
tick,0x7fff4326feb4,137801175,0,0x0,8
tick,0x7fff4326feb4,137816936,0,0x0,8
tick,0x7fff4326feb4,137832561,0,0x0,8
tick,0x7fff4326feb4,137848585,0,0x0,8
tick,0x7fff4326feb4,137864575,0,0x0,8
tick,0x7fff4326feb4,137880196,0,0x0,8
tick,0x7fff4326feb4,137895512,0,0x0,8
tick,0x7fff4326feb4,137911623,0,0x0,8
tick,0x7fff4326feb4,137927087,0,0x0,8
tick,0x7fff4326feb4,137942225,0,0x0,8
tick,0x7fff4326feb4,137957495,0,0x0,8
tick,0x7fff4326feb4,137973499,0,0x0,8
tick,0x7fff4326feb4,137989488,0,0x0,8
tick,0x7fff4326feb4,138005627,0,0x0,8
tick,0x7fff4326feb4,138020492,0,0x0,8
tick,0x7fff4326feb4,138036213,0,0x0,8
tick,0x7fff4326feb4,138050977,0,0x0,8
tick,0x7fff4326feb4,138066605,0,0x0,8
tick,0x7fff4326feb4,138081704,0,0x0,8
tick,0x7fff4326feb4,138097580,0,0x0,8
tick,0x7fff4326feb4,138112944,0,0x0,8
tick,0x7fff4326feb4,138128838,0,0x0,8
tick,0x7fff4326feb4,138143831,0,0x0,8
tick,0x7fff4326feb4,138159823,0,0x0,8
tick,0x7fff4326feb4,138174504,0,0x0,8
tick,0x7fff4326feb4,138189860,0,0x0,8
tick,0x7fff4326feb4,138205506,0,0x0,8
tick,0x7fff4326feb4,138220524,0,0x0,8
tick,0x7fff4326feb4,138235631,0,0x0,8
tick,0x7fff4326feb4,138250983,0,0x0,8
tick,0x7fff4326feb4,138266633,0,0x0,8
tick,0x7fff4326feb4,138282579,0,0x0,8
tick,0x7fff4326feb4,138298596,0,0x0,8
tick,0x7fff4326feb4,138313828,0,0x0,8
tick,0x7fff4326feb4,138330086,0,0x0,8
tick,0x7fff4326feb4,138345848,0,0x0,8
tick,0x7fff4326feb4,138361339,0,0x0,8
tick,0x7fff4326feb4,138376849,0,0x0,8
tick,0x7fff4326feb4,138392453,0,0x0,8
tick,0x7fff4326feb4,138407599,0,0x0,8
tick,0x7fff4326feb4,138423152,0,0x0,8
tick,0x7fff4326feb4,138438622,0,0x0,8
tick,0x7fff4326feb4,138454314,0,0x0,8
tick,0x7fff4326feb4,138470053,0,0x0,8
tick,0x7fff4326feb4,138485199,0,0x0,8
tick,0x7fff4326feb4,138500625,0,0x0,8
tick,0x7fff4326feb4,138515839,0,0x0,8
tick,0x7fff4326feb4,138531202,0,0x0,8
tick,0x7fff4326feb4,138547164,0,0x0,8
tick,0x7fff4326feb4,138563169,0,0x0,8
tick,0x7fff4326feb4,138578535,0,0x0,8
tick,0x7fff4326feb4,138593979,0,0x0,8
tick,0x7fff4326feb4,138609602,0,0x0,8
tick,0x7fff4326feb4,138624806,0,0x0,8
tick,0x7fff4326feb4,138640011,0,0x0,8
tick,0x7fff4326feb4,138656164,0,0x0,8
tick,0x7fff4326feb4,138670482,0,0x0,8
tick,0x7fff4326feb4,138686332,0,0x0,8
tick,0x7fff4326feb4,138702378,0,0x0,8
tick,0x7fff4326feb4,138717920,0,0x0,8
tick,0x7fff4326feb4,138733153,0,0x0,8
tick,0x7fff4326feb4,138748282,0,0x0,8
tick,0x7fff4326feb4,138763527,0,0x0,8
tick,0x7fff4326feb4,138779138,0,0x0,8
tick,0x7fff4326feb4,138794553,0,0x0,8
tick,0x7fff4326feb4,138809727,0,0x0,8
tick,0x7fff4326feb4,138825020,0,0x0,8
tick,0x7fff4326feb4,138840672,0,0x0,8
tick,0x7fff4326feb4,138855672,0,0x0,8
tick,0x7fff4326feb4,138870974,0,0x0,8
tick,0x7fff4326feb4,138887009,0,0x0,8
tick,0x7fff4326feb4,138903016,0,0x0,8
tick,0x7fff4326feb4,138918504,0,0x0,8
tick,0x7fff4326feb4,138934615,0,0x0,8
tick,0x7fff4326feb4,138950005,0,0x0,8
tick,0x7fff4326feb4,138965577,0,0x0,8
tick,0x7fff4326feb4,138981531,0,0x0,8
tick,0x7fff4326feb4,138997519,0,0x0,8
tick,0x7fff4326feb4,139012505,0,0x0,8
tick,0x7fff4326feb4,139028037,0,0x0,8
tick,0x7fff4326feb4,139043492,0,0x0,8
tick,0x7fff4326feb4,139058623,0,0x0,8
tick,0x7fff4326feb4,139073767,0,0x0,8
tick,0x7fff4326feb4,139089084,0,0x0,8
tick,0x7fff4326feb4,139104781,0,0x0,8
tick,0x7fff4326feb4,139120059,0,0x0,8
tick,0x7fff4326feb4,139136063,0,0x0,8
tick,0x7fff4326feb4,139151500,0,0x0,8
tick,0x7fff4326feb4,139166492,0,0x0,8
tick,0x7fff4326feb4,139182513,0,0x0,8
tick,0x7fff4326feb4,139198197,0,0x0,8
tick,0x7fff4326feb4,139213486,0,0x0,8
tick,0x7fff4326feb4,139229591,0,0x0,8
tick,0x7fff4326feb4,139245481,0,0x0,8
tick,0x7fff4326feb4,139260758,0,0x0,8
tick,0x7fff4326feb4,139277169,0,0x0,8
tick,0x7fff4326feb4,139292451,0,0x0,8
tick,0x7fff4326feb4,139307538,0,0x0,8
tick,0x7fff4326feb4,139323269,0,0x0,8
tick,0x7fff4326feb4,139339264,0,0x0,8
tick,0x7fff4326feb4,139355292,0,0x0,8
tick,0x7fff4326feb4,139371300,0,0x0,8
tick,0x7fff4326feb4,139387334,0,0x0,8
tick,0x7fff4326feb4,139402526,0,0x0,8
tick,0x7fff4326feb4,139418108,0,0x0,8
tick,0x7fff4326feb4,139433789,0,0x0,8
tick,0x7fff4326feb4,139449185,0,0x0,8
tick,0x7fff4326feb4,139464081,0,0x0,8
tick,0x7fff4326feb4,139479507,0,0x0,8
tick,0x7fff4326feb4,139494513,0,0x0,8
tick,0x7fff4326feb4,139510497,0,0x0,8
tick,0x7fff4326feb4,139525496,0,0x0,8
tick,0x7fff4326feb4,139541493,0,0x0,8
tick,0x7fff4326feb4,139557499,0,0x0,8
tick,0x7fff4326feb4,139573151,0,0x0,8
tick,0x7fff4326feb4,139589199,0,0x0,8
tick,0x7fff4326feb4,139605291,0,0x0,8
tick,0x7fff4326feb4,139621287,0,0x0,8
tick,0x7fff4326feb4,139636308,0,0x0,8
tick,0x7fff4326feb4,139651718,0,0x0,8
tick,0x7fff4326feb4,139667631,0,0x0,8
tick,0x7fff4326feb4,139683637,0,0x0,8
tick,0x7fff4326feb4,139698903,0,0x0,8
tick,0x7fff4326feb4,139715407,0,0x0,8
tick,0x7fff4326feb4,139730940,0,0x0,8
tick,0x7fff4326feb4,139747293,0,0x0,8
tick,0x7fff4326feb4,139762841,0,0x0,8
tick,0x7fff4326feb4,139778232,0,0x0,8
tick,0x7fff4326feb4,139793668,0,0x0,8
tick,0x7fff4326feb4,139809270,0,0x0,8
tick,0x7fff4326feb4,139824763,0,0x0,8
tick,0x7fff4326feb4,139840102,0,0x0,8
tick,0x7fff4326feb4,139856184,0,0x0,8
tick,0x7fff4326feb4,139871521,0,0x0,8
tick,0x7fff4326feb4,139887128,0,0x0,8
tick,0x7fff4326feb4,139903177,0,0x0,8
tick,0x7fff4326feb4,139918513,0,0x0,8
tick,0x7fff4326feb4,139934116,0,0x0,8
tick,0x7fff4326feb4,139949353,0,0x0,8
tick,0x7fff4326feb4,139964546,0,0x0,8
tick,0x7fff4326feb4,139980128,0,0x0,8
tick,0x7fff4326feb4,139995601,0,0x0,8
tick,0x7fff4326feb4,140010608,0,0x0,8
tick,0x7fff4326feb4,140026624,0,0x0,8
tick,0x7fff4326feb4,140041687,0,0x0,8
tick,0x7fff4326feb4,140056832,0,0x0,8
tick,0x7fff4326feb4,140071736,0,0x0,8
tick,0x7fff4326feb4,140087511,0,0x0,8
tick,0x7fff4326feb4,140103505,0,0x0,8
tick,0x7fff4326feb4,140118609,0,0x0,8
tick,0x7fff4326feb4,140133801,0,0x0,8
tick,0x7fff4326feb4,140149485,0,0x0,8
tick,0x7fff4326feb4,140165520,0,0x0,8
tick,0x7fff4326feb4,140181618,0,0x0,8
tick,0x7fff4326feb4,140197522,0,0x0,8
tick,0x7fff4326feb4,140212503,0,0x0,8
tick,0x7fff4326feb4,140227512,0,0x0,8
tick,0x7fff4326feb4,140242525,0,0x0,8
tick,0x7fff4326feb4,140257723,0,0x0,8
tick,0x7fff4326feb4,140273559,0,0x0,8
tick,0x7fff4326feb4,140288536,0,0x0,8
tick,0x7fff4326feb4,140304498,0,0x0,8
tick,0x7fff4326feb4,140320527,0,0x0,8
tick,0x7fff4326feb4,140336568,0,0x0,8
tick,0x7fff4326feb4,140352658,0,0x0,8
tick,0x7fff4326feb4,140368007,0,0x0,8
tick,0x7fff4326feb4,140383531,0,0x0,8
tick,0x7fff4326feb4,140398515,0,0x0,8
tick,0x7fff4326feb4,140413927,0,0x0,8
tick,0x7fff4326feb4,140429527,0,0x0,8
tick,0x7fff4326feb4,140445503,0,0x0,8
tick,0x7fff4326feb4,140461511,0,0x0,8
tick,0x7fff4326feb4,140477004,0,0x0,8
tick,0x7fff4326feb4,140493139,0,0x0,8
tick,0x7fff4326feb4,140509233,0,0x0,8
tick,0x7fff4326feb4,140524548,0,0x0,8
tick,0x7fff4326feb4,140539529,0,0x0,8
tick,0x7fff4326feb4,140555235,0,0x0,8
tick,0x7fff4326feb4,140571306,0,0x0,8
tick,0x7fff4326feb4,140586631,0,0x0,8
tick,0x7fff4326feb4,140602190,0,0x0,8
tick,0x7fff4326feb4,140618458,0,0x0,8
tick,0x7fff4326feb4,140633517,0,0x0,8
tick,0x7fff4326feb4,140648251,0,0x0,8
tick,0x7fff4326feb4,140663499,0,0x0,8
tick,0x7fff4326feb4,140679512,0,0x0,8
tick,0x7fff4326feb4,140694752,0,0x0,8
tick,0x7fff4326feb4,140710511,0,0x0,8
tick,0x7fff4326feb4,140726522,0,0x0,8
tick,0x7fff4326feb4,140741887,0,0x0,8
tick,0x7fff4326feb4,140757498,0,0x0,8
tick,0x7fff4326feb4,140773354,0,0x0,8
tick,0x7fff4326feb4,140789371,0,0x0,8
tick,0x7fff4326feb4,140804391,0,0x0,8
tick,0x7fff4326feb4,140820412,0,0x0,8
tick,0x7fff4326feb4,140836416,0,0x0,8
tick,0x7fff4326feb4,140852450,0,0x0,8
tick,0x7fff4326feb4,140868521,0,0x0,8
tick,0x7fff4326feb4,140884781,0,0x0,8
tick,0x7fff4326feb4,140900033,0,0x0,8
tick,0x7fff4326feb4,140915769,0,0x0,8
tick,0x7fff4326feb4,140932218,0,0x0,8
tick,0x7fff4326feb4,140948462,0,0x0,8
tick,0x7fff4326feb4,140964434,0,0x0,8
tick,0x7fff4326feb4,140980056,0,0x0,8
tick,0x7fff4326feb4,140995182,0,0x0,8
tick,0x7fff4326feb4,141011367,0,0x0,8
tick,0x7fff4326feb4,141027250,0,0x0,8
tick,0x7fff4326feb4,141042940,0,0x0,8
tick,0x7fff4326feb4,141058935,0,0x0,8
tick,0x7fff4326feb4,141074714,0,0x0,8
tick,0x7fff4326feb4,141090398,0,0x0,8
tick,0x7fff4326feb4,141105128,0,0x0,8
tick,0x7fff4326feb4,141121124,0,0x0,8
tick,0x7fff4326feb4,141137091,0,0x0,8
tick,0x7fff4326feb4,141152403,0,0x0,8
tick,0x7fff4326feb4,141168802,0,0x0,8
tick,0x7fff4326feb4,141184401,0,0x0,8
tick,0x7fff4326feb4,141200104,0,0x0,8
tick,0x7fff4326feb4,141216408,0,0x0,8
tick,0x7fff4326feb4,141232159,0,0x0,8
tick,0x7fff4326feb4,141247598,0,0x0,8
tick,0x7fff4326feb4,141262814,0,0x0,8
tick,0x7fff4326feb4,141278773,0,0x0,8
tick,0x7fff4326feb4,141294773,0,0x0,8
tick,0x7fff4326feb4,141311086,0,0x0,8
tick,0x7fff4326feb4,141327124,0,0x0,8
tick,0x7fff4326feb4,141342111,0,0x0,8
tick,0x7fff4326feb4,141357487,0,0x0,8
tick,0x7fff4326feb4,141373166,0,0x0,8
tick,0x7fff4326feb4,141387739,0,0x0,8
tick,0x7fff4326feb4,141403780,0,0x0,8
tick,0x7fff4326feb4,141419749,0,0x0,8
tick,0x7fff4326feb4,141434960,0,0x0,8
tick,0x7fff4326feb4,141450767,0,0x0,8
tick,0x7fff4326feb4,141467094,0,0x0,8
tick,0x7fff4326feb4,141482524,0,0x0,8
tick,0x7fff4326feb4,141498413,0,0x0,8
tick,0x7fff4326feb4,141514018,0,0x0,8
tick,0x7fff4326feb4,141530120,0,0x0,8
tick,0x7fff4326feb4,141545602,0,0x0,8
tick,0x7fff4326feb4,141561418,0,0x0,8
tick,0x7fff4326feb4,141577200,0,0x0,8
tick,0x7fff4326feb4,141592623,0,0x0,8
tick,0x7fff4326feb4,141608786,0,0x0,8
tick,0x7fff4326feb4,141624396,0,0x0,8
tick,0x7fff4326feb4,141639955,0,0x0,8
tick,0x7fff4326feb4,141655073,0,0x0,8
tick,0x7fff4326feb4,141670905,0,0x0,8
tick,0x7fff4326feb4,141686669,0,0x0,8
tick,0x7fff4326feb4,141701846,0,0x0,8
tick,0x7fff4326feb4,141718170,0,0x0,8
tick,0x7fff4326feb4,141733637,0,0x0,8
tick,0x7fff4326feb4,141748507,0,0x0,8
tick,0x7fff4326feb4,141763971,0,0x0,8
tick,0x7fff4326feb4,141779763,0,0x0,8
tick,0x7fff4326feb4,141795576,0,0x0,8
tick,0x7fff4326feb4,141810844,0,0x0,8
tick,0x7fff4326feb4,141827088,0,0x0,8
tick,0x7fff4326feb4,141843199,0,0x0,8
tick,0x7fff4326feb4,141858733,0,0x0,8
tick,0x7fff4326feb4,141874148,0,0x0,8
tick,0x7fff4326feb4,141889350,0,0x0,8
tick,0x7fff4326feb4,141904957,0,0x0,8
tick,0x7fff4326feb4,141921098,0,0x0,8
tick,0x7fff4326feb4,141936203,0,0x0,8
tick,0x7fff4326feb4,141951169,0,0x0,8
tick,0x7fff4326feb4,141967106,0,0x0,8
tick,0x7fff4326feb4,141981780,0,0x0,8
tick,0x7fff4326feb4,141997566,0,0x0,8
tick,0x7fff4326feb4,142012935,0,0x0,8
tick,0x7fff4326feb4,142028164,0,0x0,8
tick,0x7fff4326feb4,142043750,0,0x0,8
tick,0x7fff4326feb4,142059424,0,0x0,8
tick,0x7fff4326feb4,142074352,0,0x0,8
tick,0x7fff4326feb4,142090115,0,0x0,8
tick,0x7fff4326feb4,142105021,0,0x0,8
tick,0x7fff4326feb4,142120718,0,0x0,8
tick,0x7fff4326feb4,142135769,0,0x0,8
tick,0x7fff4326feb4,142150715,0,0x0,8
tick,0x7fff4326feb4,142166494,0,0x0,8
tick,0x7fff4326feb4,142181732,0,0x0,8
tick,0x7fff4326feb4,142196482,0,0x0,8
tick,0x7fff4326feb4,142211927,0,0x0,8
tick,0x7fff4326feb4,142227232,0,0x0,8
tick,0x7fff4326feb4,142242934,0,0x0,8
tick,0x7fff4326feb4,142257961,0,0x0,8
tick,0x7fff4326feb4,142273935,0,0x0,8
tick,0x7fff4326feb4,142289965,0,0x0,8
tick,0x7fff4326feb4,142305642,0,0x0,8
tick,0x7fff4326feb4,142320719,0,0x0,8
tick,0x7fff4326feb4,142335892,0,0x0,8
tick,0x7fff4326feb4,142351713,0,0x0,8
tick,0x7fff4326feb4,142366855,0,0x0,8
tick,0x7fff4326feb4,142382744,0,0x0,8
tick,0x7fff4326feb4,142398517,0,0x0,8
tick,0x7fff4326feb4,142413820,0,0x0,8
tick,0x7fff4326feb4,142429706,0,0x0,8
tick,0x7fff4326feb4,142445557,0,0x0,8
tick,0x7fff4326feb4,142460784,0,0x0,8
tick,0x7fff4326feb4,142476514,0,0x0,8
tick,0x7fff4326feb4,142491760,0,0x0,8
tick,0x7fff4326feb4,142507193,0,0x0,8
tick,0x7fff4326feb4,142522094,0,0x0,8
tick,0x7fff4326feb4,142537398,0,0x0,8
tick,0x7fff4326feb4,142553579,0,0x0,8
tick,0x7fff4326feb4,142569084,0,0x0,8
tick,0x7fff4326feb4,142585212,0,0x0,8
tick,0x7fff4326feb4,142600816,0,0x0,8
tick,0x7fff4326feb4,142616600,0,0x0,8
tick,0x7fff4326feb4,142631781,0,0x0,8
tick,0x7fff4326feb4,142647805,0,0x0,8
tick,0x7fff4326feb4,142662933,0,0x0,8
tick,0x7fff4326feb4,142678845,0,0x0,8
tick,0x7fff4326feb4,142693478,0,0x0,8
tick,0x7fff4326feb4,142709180,0,0x0,8
tick,0x7fff4326feb4,142724815,0,0x0,8
tick,0x7fff4326feb4,142740759,0,0x0,8
tick,0x7fff4326feb4,142756762,0,0x0,8
tick,0x7fff4326feb4,142772145,0,0x0,8
tick,0x7fff4326feb4,142787469,0,0x0,8
tick,0x7fff4326feb4,142803188,0,0x0,8
tick,0x7fff4326feb4,142818491,0,0x0,8
tick,0x7fff4326feb4,142833644,0,0x0,8
tick,0x7fff4326feb4,142849656,0,0x0,8
tick,0x7fff4326feb4,142864674,0,0x0,8
tick,0x7fff4326feb4,142880707,0,0x0,8
tick,0x7fff4326feb4,142895855,0,0x0,8
tick,0x7fff4326feb4,142911837,0,0x0,8
tick,0x7fff4326feb4,142927517,0,0x0,8
tick,0x7fff4326feb4,142943523,0,0x0,8
tick,0x7fff4326feb4,142958848,0,0x0,8
tick,0x7fff4326feb4,142974932,0,0x0,8
tick,0x7fff4326feb4,142990515,0,0x0,8
tick,0x7fff4326feb4,143006602,0,0x0,8
tick,0x7fff4326feb4,143021829,0,0x0,8
tick,0x7fff4326feb4,143037499,0,0x0,8
tick,0x7fff4326feb4,143053504,0,0x0,8
tick,0x7fff4326feb4,143068508,0,0x0,8
tick,0x7fff4326feb4,143083934,0,0x0,8
tick,0x7fff4326feb4,143099158,0,0x0,8
tick,0x7fff4326feb4,143114740,0,0x0,8
tick,0x7fff4326feb4,143130804,0,0x0,8
tick,0x7fff4326feb4,143146754,0,0x0,8
tick,0x7fff4326feb4,143161940,0,0x0,8
tick,0x7fff4326feb4,143177209,0,0x0,8
tick,0x7fff4326feb4,143192944,0,0x0,8
tick,0x7fff4326feb4,143208527,0,0x0,8
tick,0x7fff4326feb4,143223796,0,0x0,8
tick,0x7fff4326feb4,143239813,0,0x0,8
tick,0x7fff4326feb4,143255825,0,0x0,8
tick,0x7fff4326feb4,143271800,0,0x0,8
tick,0x7fff4326feb4,143286800,0,0x0,8
tick,0x7fff4326feb4,143302342,0,0x0,8
tick,0x7fff4326feb4,143317887,0,0x0,8
tick,0x7fff4326feb4,143333926,0,0x0,8
tick,0x7fff4326feb4,143349514,0,0x0,8
tick,0x7fff4326feb4,143364500,0,0x0,8
tick,0x7fff4326feb4,143380344,0,0x0,8
tick,0x7fff4326feb4,143395517,0,0x0,8
tick,0x7fff4326feb4,143410782,0,0x0,8
tick,0x7fff4326feb4,143426346,0,0x0,8
tick,0x7fff4326feb4,143441505,0,0x0,8
tick,0x7fff4326feb4,143457592,0,0x0,8
tick,0x7fff4326feb4,143473660,0,0x0,8
tick,0x7fff4326feb4,143489533,0,0x0,8
tick,0x7fff4326feb4,143505562,0,0x0,8
tick,0x7fff4326feb4,143520624,0,0x0,8
tick,0x7fff4326feb4,143536619,0,0x0,8
tick,0x7fff4326feb4,143552109,0,0x0,8
tick,0x7fff4326feb4,143567574,0,0x0,8
tick,0x7fff4326feb4,143583260,0,0x0,8
tick,0x7fff4326feb4,143599176,0,0x0,8
tick,0x7fff4326feb4,143614070,0,0x0,8
tick,0x7fff4326feb4,143629792,0,0x0,8
tick,0x7fff4326feb4,143645217,0,0x0,8
tick,0x7fff4326feb4,143660833,0,0x0,8
tick,0x7fff4326feb4,143675573,0,0x0,8
tick,0x7fff4326feb4,143691689,0,0x0,8
tick,0x7fff4326feb4,143708060,0,0x0,8
tick,0x7fff4326feb4,143724100,0,0x0,8
tick,0x7fff4326feb4,143739631,0,0x0,8
tick,0x7fff4326feb4,143755570,0,0x0,8
tick,0x7fff4326feb4,143771144,0,0x0,8
tick,0x7fff4326feb4,143787202,0,0x0,8
tick,0x7fff4326feb4,143802460,0,0x0,8
tick,0x7fff4326feb4,143818395,0,0x0,8
tick,0x7fff4326feb4,143833611,0,0x0,8
tick,0x7fff4326feb4,143849506,0,0x0,8
tick,0x7fff4326feb4,143865583,0,0x0,8
tick,0x7fff4326feb4,143881212,0,0x0,8
tick,0x7fff4326feb4,143896233,0,0x0,8
tick,0x7fff4326feb4,143911852,0,0x0,8
tick,0x7fff4326feb4,143927306,0,0x0,8
tick,0x7fff4326feb4,143943326,0,0x0,8
tick,0x7fff4326feb4,143959137,0,0x0,8
tick,0x7fff4326feb4,143974317,0,0x0,8
tick,0x7fff4326feb4,143990059,0,0x0,8
tick,0x7fff4326feb4,144005583,0,0x0,8
tick,0x7fff4326feb4,144021191,0,0x0,8
tick,0x7fff4326feb4,144036881,0,0x0,8
tick,0x7fff4326feb4,144051985,0,0x0,8
tick,0x7fff4326feb4,144067292,0,0x0,8
tick,0x7fff4326feb4,144083375,0,0x0,8
tick,0x7fff4326feb4,144098465,0,0x0,8
tick,0x7fff4326feb4,144114128,0,0x0,8
tick,0x7fff4326feb4,144129738,0,0x0,8
tick,0x7fff4326feb4,144145724,0,0x0,8
tick,0x7fff4326feb4,144160820,0,0x0,8
tick,0x7fff4326feb4,144176849,0,0x0,8
tick,0x7fff4326feb4,144191770,0,0x0,8
tick,0x7fff4326feb4,144206956,0,0x0,8
tick,0x7fff4326feb4,144222501,0,0x0,8
tick,0x7fff4326feb4,144238557,0,0x0,8
tick,0x7fff4326feb4,144254602,0,0x0,8
tick,0x7fff4326feb4,144270234,0,0x0,8
tick,0x7fff4326feb4,144285709,0,0x0,8
tick,0x7fff4326feb4,144301254,0,0x0,8
tick,0x7fff4326feb4,144316836,0,0x0,8
tick,0x7fff4326feb4,144331902,0,0x0,8
tick,0x7fff4326feb4,144347562,0,0x0,8
tick,0x7fff4326feb4,144363597,0,0x0,8
tick,0x7fff4326feb4,144379076,0,0x0,8
tick,0x7fff4326feb4,144394949,0,0x0,8
tick,0x7fff4326feb4,144410202,0,0x0,8
tick,0x7fff4326feb4,144426042,0,0x0,8
tick,0x7fff4326feb4,144441248,0,0x0,8
tick,0x7fff4326feb4,144456502,0,0x0,8
tick,0x7fff4326feb4,144472552,0,0x0,8
tick,0x7fff4326feb4,144488113,0,0x0,8
tick,0x7fff4326feb4,144503605,0,0x0,8
tick,0x7fff4326feb4,144519414,0,0x0,8
tick,0x7fff4326feb4,144535012,0,0x0,8
tick,0x7fff4326feb4,144550942,0,0x0,8
tick,0x7fff4326feb4,144566731,0,0x0,8
tick,0x7fff4326feb4,144581908,0,0x0,8
tick,0x7fff4326feb4,144597557,0,0x0,8
tick,0x7fff4326feb4,144612928,0,0x0,8
tick,0x7fff4326feb4,144628482,0,0x0,8
tick,0x7fff4326feb4,144643934,0,0x0,8
tick,0x7fff4326feb4,144659129,0,0x0,8
tick,0x7fff4326feb4,144674669,0,0x0,8
tick,0x7fff4326feb4,144690247,0,0x0,8
tick,0x7fff4326feb4,144705891,0,0x0,8
tick,0x7fff4326feb4,144721896,0,0x0,8
tick,0x7fff4326feb4,144737301,0,0x0,8
tick,0x7fff4326feb4,144752930,0,0x0,8
tick,0x7fff4326feb4,144768733,0,0x0,8
tick,0x7fff4326feb4,144783952,0,0x0,8
tick,0x7fff4326feb4,144799262,0,0x0,8
tick,0x7fff4326feb4,144814414,0,0x0,8
tick,0x7fff4326feb4,144829853,0,0x0,8
tick,0x7fff4326feb4,144845751,0,0x0,8
tick,0x7fff4326feb4,144861849,0,0x0,8
tick,0x7fff4326feb4,144877492,0,0x0,8
tick,0x7fff4326feb4,144892929,0,0x0,8
tick,0x7fff4326feb4,144908259,0,0x0,8
tick,0x7fff4326feb4,144923739,0,0x0,8
tick,0x7fff4326feb4,144939590,0,0x0,8
tick,0x7fff4326feb4,144955294,0,0x0,8
tick,0x7fff4326feb4,144971249,0,0x0,8
tick,0x7fff4326feb4,144987518,0,0x0,8
tick,0x7fff4326feb4,145002492,0,0x0,8
tick,0x7fff4326feb4,145018623,0,0x0,8
tick,0x7fff4326feb4,145034625,0,0x0,8
tick,0x7fff4326feb4,145049847,0,0x0,8
tick,0x7fff4326feb4,145066053,0,0x0,8
tick,0x7fff4326feb4,145080906,0,0x0,8
tick,0x7fff4326feb4,145096659,0,0x0,8
tick,0x7fff4326feb4,145112188,0,0x0,8
tick,0x7fff4326feb4,145128403,0,0x0,8
tick,0x7fff4326feb4,145144229,0,0x0,8
tick,0x7fff4326feb4,145159486,0,0x0,8
tick,0x7fff4326feb4,145175185,0,0x0,8
tick,0x7fff4326feb4,145190865,0,0x0,8
tick,0x7fff4326feb4,145206511,0,0x0,8
tick,0x7fff4326feb4,145221706,0,0x0,8
tick,0x7fff4326feb4,145237485,0,0x0,8
tick,0x7fff4326feb4,145253491,0,0x0,8
tick,0x7fff4326feb4,145269576,0,0x0,8
tick,0x7fff4326feb4,145285476,0,0x0,8
tick,0x7fff4326feb4,145300836,0,0x0,8
tick,0x7fff4326feb4,145316476,0,0x0,8
tick,0x7fff4326feb4,145331703,0,0x0,8
tick,0x7fff4326feb4,145347473,0,0x0,8
tick,0x7fff4326feb4,145362932,0,0x0,8
tick,0x7fff4326feb4,145378937,0,0x0,8
tick,0x7fff4326feb4,145394503,0,0x0,8
tick,0x7fff4326feb4,145409847,0,0x0,8
tick,0x7fff4326feb4,145425503,0,0x0,8
tick,0x7fff4326feb4,145440843,0,0x0,8
tick,0x7fff4326feb4,145456196,0,0x0,8
tick,0x7fff4326feb4,145471817,0,0x0,8
tick,0x7fff4326feb4,145486953,0,0x0,8
tick,0x7fff4326feb4,145502923,0,0x0,8
tick,0x7fff4326feb4,145518157,0,0x0,8
tick,0x7fff4326feb4,145533537,0,0x0,8
tick,0x7fff4326feb4,145549524,0,0x0,8
tick,0x7fff4326feb4,145565569,0,0x0,8
tick,0x7fff4326feb4,145580810,0,0x0,8
tick,0x7fff4326feb4,145596014,0,0x0,8
tick,0x7fff4326feb4,145611810,0,0x0,8
tick,0x7fff4326feb4,145626941,0,0x0,8
tick,0x7fff4326feb4,145642535,0,0x0,8
tick,0x7fff4326feb4,145657812,0,0x0,8
tick,0x7fff4326feb4,145672951,0,0x0,8
tick,0x7fff4326feb4,145688584,0,0x0,8
tick,0x7fff4326feb4,145703985,0,0x0,8
tick,0x7fff4326feb4,145719497,0,0x0,8
tick,0x7fff4326feb4,145734931,0,0x0,8
tick,0x7fff4326feb4,145750767,0,0x0,8
tick,0x7fff4326feb4,145765726,0,0x0,8
tick,0x7fff4326feb4,145781768,0,0x0,8
tick,0x7fff4326feb4,145797013,0,0x0,8
tick,0x7fff4326feb4,145812942,0,0x0,8
tick,0x7fff4326feb4,145828752,0,0x0,8
tick,0x7fff4326feb4,145844508,0,0x0,8
tick,0x7fff4326feb4,145860511,0,0x0,8
tick,0x7fff4326feb4,145875520,0,0x0,8
tick,0x7fff4326feb4,145890749,0,0x0,8
tick,0x7fff4326feb4,145906761,0,0x0,8
tick,0x7fff4326feb4,145921766,0,0x0,8
tick,0x7fff4326feb4,145937566,0,0x0,8
tick,0x7fff4326feb4,145952938,0,0x0,8
tick,0x7fff4326feb4,145968101,0,0x0,8
tick,0x7fff4326feb4,145983099,0,0x0,8
tick,0x7fff4326feb4,145998502,0,0x0,8
tick,0x7fff4326feb4,146013592,0,0x0,8
tick,0x7fff4326feb4,146029510,0,0x0,8
tick,0x7fff4326feb4,146045475,0,0x0,8
tick,0x7fff4326feb4,146061560,0,0x0,8
tick,0x7fff4326feb4,146076720,0,0x0,8
tick,0x7fff4326feb4,146092480,0,0x0,8
tick,0x7fff4326feb4,146107797,0,0x0,8
tick,0x7fff4326feb4,146123482,0,0x0,8
tick,0x7fff4326feb4,146138692,0,0x0,8
tick,0x7fff4326feb4,146153691,0,0x0,8
tick,0x7fff4326feb4,146168857,0,0x0,8
tick,0x7fff4326feb4,146184727,0,0x0,8
tick,0x7fff4326feb4,146200709,0,0x0,8
tick,0x7fff4326feb4,146215934,0,0x0,8
tick,0x7fff4326feb4,146231722,0,0x0,8
tick,0x7fff4326feb4,146246874,0,0x0,8
tick,0x7fff4326feb4,146262928,0,0x0,8
tick,0x7fff4326feb4,146278448,0,0x0,8
tick,0x7fff4326feb4,146294318,0,0x0,8
tick,0x7fff4326feb4,146309509,0,0x0,8
tick,0x7fff4326feb4,146325520,0,0x0,8
tick,0x7fff4326feb4,146340833,0,0x0,8
tick,0x7fff4326feb4,146356507,0,0x0,8
tick,0x7fff4326feb4,146371960,0,0x0,8
tick,0x7fff4326feb4,146387787,0,0x0,8
tick,0x7fff4326feb4,146403029,0,0x0,8
tick,0x7fff4326feb4,146418324,0,0x0,8
tick,0x7fff4326feb4,146433927,0,0x0,8
tick,0x7fff4326feb4,146449500,0,0x0,8
tick,0x7fff4326feb4,146464729,0,0x0,8
tick,0x7fff4326feb4,146480193,0,0x0,8
tick,0x7fff4326feb4,146495834,0,0x0,8
tick,0x7fff4326feb4,146511503,0,0x0,8
tick,0x7fff4326feb4,146527522,0,0x0,8
tick,0x7fff4326feb4,146543531,0,0x0,8
tick,0x7fff4326feb4,146558909,0,0x0,8
tick,0x7fff4326feb4,146574518,0,0x0,8
tick,0x7fff4326feb4,146589903,0,0x0,8
tick,0x7fff4326feb4,146605516,0,0x0,8
tick,0x7fff4326feb4,146620535,0,0x0,8
tick,0x7fff4326feb4,146635510,0,0x0,8
tick,0x7fff4326feb4,146651494,0,0x0,8
tick,0x7fff4326feb4,146666503,0,0x0,8
tick,0x7fff4326feb4,146681638,0,0x0,8
tick,0x7fff4326feb4,146697444,0,0x0,8
tick,0x7fff4326feb4,146713014,0,0x0,8
tick,0x7fff4326feb4,146728343,0,0x0,8
tick,0x7fff4326feb4,146743646,0,0x0,8
tick,0x7fff4326feb4,146759266,0,0x0,8
tick,0x7fff4326feb4,146775347,0,0x0,8
tick,0x7fff4326feb4,146790616,0,0x0,8
tick,0x7fff4326feb4,146806692,0,0x0,8
tick,0x7fff4326feb4,146821688,0,0x0,8
tick,0x7fff4326feb4,146837972,0,0x0,8
tick,0x7fff4326feb4,146853097,0,0x0,8
tick,0x7fff4326feb4,146868747,0,0x0,8
tick,0x7fff4326feb4,146884183,0,0x0,8
tick,0x7fff4326feb4,146899386,0,0x0,8
tick,0x7fff4326feb4,146914550,0,0x0,8
tick,0x7fff4326feb4,146930384,0,0x0,8
tick,0x7fff4326feb4,146945795,0,0x0,8
tick,0x7fff4326feb4,146961820,0,0x0,8
tick,0x7fff4326feb4,146977179,0,0x0,8
tick,0x7fff4326feb4,146993195,0,0x0,8
tick,0x7fff4326feb4,147009188,0,0x0,8
tick,0x7fff4326feb4,147024529,0,0x0,8
tick,0x7fff4326feb4,147039965,0,0x0,8
tick,0x7fff4326feb4,147055509,0,0x0,8
tick,0x7fff4326feb4,147071549,0,0x0,8
tick,0x7fff4326feb4,147087495,0,0x0,8
tick,0x7fff4326feb4,147102901,0,0x0,8
tick,0x7fff4326feb4,147118660,0,0x0,8
tick,0x7fff4326feb4,147133969,0,0x0,8
tick,0x7fff4326feb4,147149490,0,0x0,8
tick,0x7fff4326feb4,147165472,0,0x0,8
tick,0x7fff4326feb4,147181501,0,0x0,8
tick,0x7fff4326feb4,147196846,0,0x0,8
tick,0x7fff4326feb4,147211882,0,0x0,8
tick,0x7fff4326feb4,147227538,0,0x0,8
tick,0x7fff4326feb4,147243314,0,0x0,8
tick,0x7fff4326feb4,147258794,0,0x0,8
tick,0x7fff4326feb4,147274421,0,0x0,8
tick,0x7fff4326feb4,147289774,0,0x0,8
tick,0x7fff4326feb4,147305451,0,0x0,8
tick,0x7fff4326feb4,147320804,0,0x0,8
tick,0x7fff4326feb4,147336950,0,0x0,8
tick,0x7fff4326feb4,147352485,0,0x0,8
tick,0x7fff4326feb4,147368028,0,0x0,8
tick,0x7fff4326feb4,147383484,0,0x0,8
tick,0x7fff4326feb4,147399323,0,0x0,8
tick,0x7fff4326feb4,147415344,0,0x0,8
tick,0x7fff4326feb4,147430512,0,0x0,8
tick,0x7fff4326feb4,147446514,0,0x0,8
tick,0x7fff4326feb4,147461815,0,0x0,8
tick,0x7fff4326feb4,147476502,0,0x0,8
tick,0x7fff4326feb4,147491814,0,0x0,8
tick,0x7fff4326feb4,147507466,0,0x0,8
tick,0x7fff4326feb4,147523484,0,0x0,8
tick,0x7fff4326feb4,147538901,0,0x0,8
tick,0x7fff4326feb4,147554941,0,0x0,8
tick,0x7fff4326feb4,147570462,0,0x0,8
tick,0x7fff4326feb4,147586421,0,0x0,8
tick,0x7fff4326feb4,147601392,0,0x0,8
tick,0x7fff4326feb4,147617404,0,0x0,8
tick,0x7fff4326feb4,147633417,0,0x0,8
tick,0x7fff4326feb4,147648612,0,0x0,8
tick,0x7fff4326feb4,147664631,0,0x0,8
tick,0x7fff4326feb4,147679875,0,0x0,8
tick,0x7fff4326feb4,147695521,0,0x0,8
tick,0x7fff4326feb4,147711519,0,0x0,8
tick,0x7fff4326feb4,147727523,0,0x0,8
tick,0x7fff4326feb4,147743417,0,0x0,8
tick,0x7fff4326feb4,147758533,0,0x0,8
tick,0x7fff4326feb4,147773930,0,0x0,8
tick,0x7fff4326feb4,147789787,0,0x0,8
tick,0x7fff4326feb4,147804502,0,0x0,8
tick,0x7fff4326feb4,147820090,0,0x0,8
tick,0x7fff4326feb4,147835113,0,0x0,8
tick,0x7fff4326feb4,147851103,0,0x0,8
tick,0x7fff4326feb4,147866505,0,0x0,8
tick,0x7fff4326feb4,147882511,0,0x0,8
tick,0x7fff4326feb4,147898158,0,0x0,8
tick,0x7fff4326feb4,147913203,0,0x0,8
tick,0x7fff4326feb4,147929205,0,0x0,8
tick,0x7fff4326feb4,147945228,0,0x0,8
tick,0x7fff4326feb4,147961241,0,0x0,8
tick,0x7fff4326feb4,147976262,0,0x0,8
tick,0x7fff4326feb4,147992284,0,0x0,8
tick,0x7fff4326feb4,148007504,0,0x0,8
tick,0x7fff4326feb4,148022963,0,0x0,8
tick,0x7fff4326feb4,148038498,0,0x0,8
tick,0x7fff4326feb4,148053936,0,0x0,8
tick,0x7fff4326feb4,148069499,0,0x0,8
tick,0x7fff4326feb4,148085504,0,0x0,8
tick,0x7fff4326feb4,148101494,0,0x0,8
tick,0x7fff4326feb4,148117481,0,0x0,8
tick,0x7fff4326feb4,148133566,0,0x0,8
tick,0x7fff4326feb4,148149501,0,0x0,8
tick,0x7fff4326feb4,148164499,0,0x0,8
tick,0x7fff4326feb4,148179496,0,0x0,8
tick,0x7fff4326feb4,148195488,0,0x0,8
tick,0x7fff4326feb4,148211487,0,0x0,8
tick,0x7fff4326feb4,148227266,0,0x0,8
tick,0x7fff4326feb4,148242523,0,0x0,8
tick,0x7fff4326feb4,148257940,0,0x0,8
tick,0x7fff4326feb4,148273612,0,0x0,8
tick,0x7fff4326feb4,148288651,0,0x0,8
tick,0x7fff4326feb4,148304658,0,0x0,8
tick,0x7fff4326feb4,148320681,0,0x0,8
tick,0x7fff4326feb4,148335904,0,0x0,8
tick,0x7fff4326feb4,148351928,0,0x0,8
tick,0x7fff4326feb4,148366929,0,0x0,8
tick,0x7fff4326feb4,148382504,0,0x0,8
tick,0x7fff4326feb4,148398127,0,0x0,8
tick,0x7fff4326feb4,148413496,0,0x0,8
tick,0x7fff4326feb4,148428721,0,0x0,8
tick,0x7fff4326feb4,148444499,0,0x0,8
tick,0x7fff4326feb4,148459898,0,0x0,8
tick,0x7fff4326feb4,148475587,0,0x0,8
tick,0x7fff4326feb4,148490881,0,0x0,8
tick,0x7fff4326feb4,148506502,0,0x0,8
tick,0x7fff4326feb4,148521952,0,0x0,8
tick,0x7fff4326feb4,148537965,0,0x0,8
tick,0x7fff4326feb4,148554007,0,0x0,8
tick,0x7fff4326feb4,148569842,0,0x0,8
tick,0x7fff4326feb4,148585390,0,0x0,8
tick,0x7fff4326feb4,148601692,0,0x0,8
tick,0x7fff4326feb4,148617298,0,0x0,8
tick,0x7fff4326feb4,148633253,0,0x0,8
tick,0x7fff4326feb4,148648382,0,0x0,8
tick,0x7fff4326feb4,148664239,0,0x0,8
tick,0x7fff4326feb4,148680656,0,0x0,8
tick,0x7fff4326feb4,148695871,0,0x0,8
tick,0x7fff4326feb4,148711389,0,0x0,8
tick,0x7fff4326feb4,148726660,0,0x0,8
tick,0x7fff4326feb4,148742546,0,0x0,8
tick,0x7fff4326feb4,148757888,0,0x0,8
tick,0x7fff4326feb4,148774086,0,0x0,8
tick,0x7fff4326feb4,148789873,0,0x0,8
tick,0x7fff4326feb4,148805434,0,0x0,8
tick,0x7fff4326feb4,148820839,0,0x0,8
tick,0x7fff4326feb4,148836745,0,0x0,8
tick,0x7fff4326feb4,148852999,0,0x0,8
tick,0x7fff4326feb4,148868996,0,0x0,8
tick,0x7fff4326feb4,148884247,0,0x0,8
tick,0x7fff4326feb4,148900613,0,0x0,8
tick,0x7fff4326feb4,148916849,0,0x0,8
tick,0x7fff4326feb4,148932580,0,0x0,8
tick,0x7fff4326feb4,148948239,0,0x0,8
tick,0x7fff4326feb4,148963900,0,0x0,8
tick,0x7fff4326feb4,148980215,0,0x0,8
tick,0x7fff4326feb4,148995586,0,0x0,8
tick,0x7fff4326feb4,149011260,0,0x0,8
tick,0x7fff4326feb4,149027134,0,0x0,8
tick,0x7fff4326feb4,149043021,0,0x0,8
tick,0x7fff4326feb4,149058739,0,0x0,8
tick,0x7fff4326feb4,149074278,0,0x0,8
tick,0x7fff4326feb4,149089861,0,0x0,8
tick,0x7fff4326feb4,149106025,0,0x0,8
tick,0x7fff4326feb4,149121018,0,0x0,8
tick,0x7fff4326feb4,149137032,0,0x0,8
tick,0x7fff4326feb4,149153269,0,0x0,8
tick,0x7fff4326feb4,149168871,0,0x0,8
tick,0x7fff4326feb4,149184033,0,0x0,8
tick,0x7fff4326feb4,149199271,0,0x0,8
tick,0x7fff4326feb4,149214443,0,0x0,8
tick,0x7fff4326feb4,149230423,0,0x0,8
tick,0x7fff4326feb4,149246484,0,0x0,8
tick,0x7fff4326feb4,149261628,0,0x0,8
tick,0x7fff4326feb4,149277885,0,0x0,8
tick,0x7fff4326feb4,149293619,0,0x0,8
tick,0x7fff4326feb4,149309941,0,0x0,8
tick,0x7fff4326feb4,149325626,0,0x0,8
tick,0x7fff4326feb4,149340508,0,0x0,8
tick,0x7fff4326feb4,149356051,0,0x0,8
tick,0x7fff4326feb4,149371824,0,0x0,8
tick,0x7fff4326feb4,149387147,0,0x0,8
tick,0x7fff4326feb4,149402422,0,0x0,8
tick,0x7fff4326feb4,149418470,0,0x0,8
tick,0x7fff4326feb4,149433939,0,0x0,8
tick,0x7fff4326feb4,149449280,0,0x0,8
tick,0x7fff4326feb4,149464406,0,0x0,8
tick,0x7fff4326feb4,149479866,0,0x0,8
tick,0x7fff4326feb4,149495494,0,0x0,8
tick,0x7fff4326feb4,149511086,0,0x0,8
tick,0x7fff4326feb4,149526573,0,0x0,8
tick,0x7fff4326feb4,149542109,0,0x0,8
tick,0x7fff4326feb4,149557746,0,0x0,8
tick,0x7fff4326feb4,149573622,0,0x0,8
tick,0x7fff4326feb4,149589285,0,0x0,8
tick,0x7fff4326feb4,149605582,0,0x0,8
tick,0x7fff4326feb4,149620909,0,0x0,8
tick,0x7fff4326feb4,149636119,0,0x0,8
tick,0x7fff4326feb4,149651929,0,0x0,8
tick,0x7fff4326feb4,149667389,0,0x0,8
